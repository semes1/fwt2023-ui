<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [u6_ui\u6_ui.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image u6_ui\u6_ui.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060960: Last Updated: Mon Mar 18 22:26:48 2024
<BR><P>
<H3>Maximum Stack Usage =       1512 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
FrontendApplicationBase::gotoScreen1ScreenNoTransitionImpl() &rArr; T2* touchgfx::makeTransition&lang;Screen1View, Screen1Presenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*) &rArr; Screen1View::Screen1View() &rArr; Screen1ViewBase::Screen1ViewBase() &rArr; touchgfx::TextureMapper::setBitmap(const touchgfx::Bitmap&) &rArr; touchgfx::TextureMapper::applyTransformation() &rArr; touchgfx::operator *(const touchgfx::Matrix4x4&, const touchgfx::Matrix4x4&)
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[25]">ADC_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[25]">ADC_IRQHandler</a><BR>
 <LI><a href="#[d]">BusFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[d]">BusFault_Handler</a><BR>
 <LI><a href="#[c]">MemManage_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[c]">MemManage_Handler</a><BR>
 <LI><a href="#[a]">NMI_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[a]">NMI_Handler</a><BR>
 <LI><a href="#[e]">UsageFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[e]">UsageFault_Handler</a><BR>
 <LI><a href="#[3ae]">touchgfx::muldivu(unsigned, unsigned, unsigned, unsigned&)</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3ae]">touchgfx::muldivu(unsigned, unsigned, unsigned, unsigned&)</a><BR>
 <LI><a href="#[371]">touchgfx::TouchCalibration::muldivu(unsigned, unsigned, unsigned, unsigned, unsigned, unsigned&)</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[371]">touchgfx::TouchCalibration::muldivu(unsigned, unsigned, unsigned, unsigned, unsigned, unsigned&)</a><BR>
 <LI><a href="#[3ac]">touchgfx::Screen::JSMOC(const touchgfx::Rect&, touchgfx::Drawable*)</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3ac]">touchgfx::Screen::JSMOC(const touchgfx::Rect&, touchgfx::Drawable*)</a><BR>
 <LI><a href="#[3b1]">touchgfx::CWRUtil::length(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5)</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3b1]">touchgfx::CWRUtil::length(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5)</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[79]">ADC1_Handle</a> from freertos.o(i.ADC1_Handle) referenced from freertos.o(i.MX_FREERTOS_Init)
 <LI><a href="#[7a]">ADC2_Handle</a> from freertos.o(i.ADC2_Handle) referenced from freertos.o(i.MX_FREERTOS_Init)
 <LI><a href="#[70]">ADC_DMAConvCplt</a> from stm32f4xx_hal_adc.o(i.ADC_DMAConvCplt) referenced from stm32f4xx_hal_adc.o(i.HAL_ADC_Start_DMA)
 <LI><a href="#[72]">ADC_DMAError</a> from stm32f4xx_hal_adc.o(i.ADC_DMAError) referenced from stm32f4xx_hal_adc.o(i.HAL_ADC_Start_DMA)
 <LI><a href="#[71]">ADC_DMAHalfConvCplt</a> from stm32f4xx_hal_adc.o(i.ADC_DMAHalfConvCplt) referenced from stm32f4xx_hal_adc.o(i.HAL_ADC_Start_DMA)
 <LI><a href="#[25]">ADC_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[7f]">BspInit_Handle</a> from freertos.o(i.BspInit_Handle) referenced from freertos.o(i.MX_FREERTOS_Init)
 <LI><a href="#[d]">BusFault_Handler</a> from stm32f4xx_it.o(i.BusFault_Handler) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[27]">CAN1_RX0_IRQHandler</a> from stm32f4xx_it.o(i.CAN1_RX0_IRQHandler) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[28]">CAN1_RX1_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[29]">CAN1_SCE_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[26]">CAN1_TX_IRQHandler</a> from stm32f4xx_it.o(i.CAN1_TX_IRQHandler) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[53]">CAN2_RX0_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[54]">CAN2_RX1_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[55]">CAN2_SCE_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[52]">CAN2_TX_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[7d]">CanTX_Handle</a> from freertos.o(i.CanTX_Handle) referenced from freertos.o(i.MX_FREERTOS_Init)
 <LI><a href="#[74]">Can_Rx_Handle</a> from freertos.o(i.Can_Rx_Handle) referenced from freertos.o(i.MX_FREERTOS_Init)
 <LI><a href="#[61]">DCMI_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[1e]">DMA1_Stream0_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[1f]">DMA1_Stream1_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[20]">DMA1_Stream2_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[21]">DMA1_Stream3_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[22]">DMA1_Stream4_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[23]">DMA1_Stream5_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[24]">DMA1_Stream6_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[42]">DMA1_Stream7_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[6c]">DMA2D_IRQHandler</a> from stm32f4xx_it.o(i.DMA2D_IRQHandler) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[4b]">DMA2_Stream0_IRQHandler</a> from stm32f4xx_it.o(i.DMA2_Stream0_IRQHandler) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[4c]">DMA2_Stream1_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[4d]">DMA2_Stream2_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[4e]">DMA2_Stream3_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[4f]">DMA2_Stream4_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[57]">DMA2_Stream5_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[58]">DMA2_Stream6_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[59]">DMA2_Stream7_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[10]">DebugMon_Handler</a> from stm32f4xx_it.o(i.DebugMon_Handler) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[7c]">Dtu_datHandle</a> from freertos.o(i.Dtu_datHandle) referenced from freertos.o(i.MX_FREERTOS_Init)
 <LI><a href="#[50]">ETH_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[51]">ETH_WKUP_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[19]">EXTI0_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[3b]">EXTI15_10_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[1a]">EXTI1_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[1b]">EXTI2_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[1c]">EXTI3_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[1d]">EXTI4_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[2a]">EXTI9_5_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[17]">FLASH_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[43]">FMC_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[63]">FPU_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[62]">HASH_RNG_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[b]">HardFault_Handler</a> from stm32f4xx_it.o(i.HardFault_Handler) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[33]">I2C1_ER_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[32]">I2C1_EV_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[35]">I2C2_ER_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[34]">I2C2_EV_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[5c]">I2C3_ER_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[5b]">I2C3_EV_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[76]">IWDG_Handle</a> from freertos.o(i.IWDG_Handle) referenced from freertos.o(i.MX_FREERTOS_Init)
 <LI><a href="#[6b]">LTDC_ER_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[6a]">LTDC_IRQHandler</a> from stm32f4xx_it.o(i.LTDC_IRQHandler) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[c]">MemManage_Handler</a> from stm32f4xx_it.o(i.MemManage_Handler) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[a]">NMI_Handler</a> from stm32f4xx_it.o(i.NMI_Handler) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[56]">OTG_FS_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[3d]">OTG_FS_WKUP_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[5e]">OTG_HS_EP1_IN_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[5d]">OTG_HS_EP1_OUT_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[60]">OTG_HS_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[5f]">OTG_HS_WKUP_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[14]">PVD_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[11]">PendSV_Handler</a> from port.o(.emb_text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[18]">RCC_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[3c]">RTC_Alarm_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[7b]">RTC_Handle</a> from freertos.o(i.RTC_Handle) referenced from freertos.o(i.MX_FREERTOS_Init)
 <LI><a href="#[16]">RTC_WKUP_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[9]">Reset_Handler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[69]">SAI1_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[44]">SDIO_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[36]">SPI1_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[37]">SPI2_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[46]">SPI3_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[66]">SPI4_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[67]">SPI5_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[68]">SPI6_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[f]">SVC_Handler</a> from port.o(.emb_text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[77]">Speed_Handle</a> from freertos.o(i.Speed_Handle) referenced from freertos.o(i.MX_FREERTOS_Init)
 <LI><a href="#[12]">SysTick_Handler</a> from cmsis_os2.o(i.SysTick_Handler) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[6e]">SystemInit</a> from system_stm32f4xx.o(i.SystemInit) referenced from startup_stm32f429xx.o(.text)
 <LI><a href="#[15]">TAMP_STAMP_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[2b]">TIM1_BRK_TIM9_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[2e]">TIM1_CC_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[2d]">TIM1_TRG_COM_TIM11_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[2c]">TIM1_UP_TIM10_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[2f]">TIM2_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[30]">TIM3_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[31]">TIM4_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[45]">TIM5_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[49]">TIM6_DAC_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[4a]">TIM7_IRQHandler</a> from stm32f4xx_it.o(i.TIM7_IRQHandler) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[3e]">TIM8_BRK_TIM12_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[41]">TIM8_CC_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[40]">TIM8_TRG_COM_TIM14_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[3f]">TIM8_UP_TIM13_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[73]">TouchGFX_Task</a> from app_touchgfx.o(i.TouchGFX_Task) referenced from freertos.o(i.MX_FREERTOS_Init)
 <LI><a href="#[7e]">Tyresp_Handle</a> from freertos.o(i.Tyresp_Handle) referenced from freertos.o(i.MX_FREERTOS_Init)
 <LI><a href="#[47]">UART4_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[48]">UART5_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[64]">UART7_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[65]">UART8_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[38]">USART1_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[39]">USART2_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[3a]">USART3_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[5a]">USART6_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[e]">UsageFault_Handler</a> from stm32f4xx_it.o(i.UsageFault_Handler) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[13]">WWDG_IRQHandler</a> from startup_stm32f429xx.o(.text) referenced from startup_stm32f429xx.o(RESET)
 <LI><a href="#[78]">Wit_DatHandle</a> from freertos.o(i.Wit_DatHandle) referenced from freertos.o(i.MX_FREERTOS_Init)
 <LI><a href="#[81]">DMA2D_XferCpltCallback(__DMA2D_HandleTypeDef*)</a> from stm32dma.o(i._Z22DMA2D_XferCpltCallbackP21__DMA2D_HandleTypeDef) referenced from stm32dma.o(i._ZN8STM32DMA10initializeEv)
 <LI><a href="#[b5]">Screen1View::setupScreen()</a> from screen1view.o(i._ZN11Screen1View11setupScreenEv) referenced from screen1view.o(.constdata__ZTV11Screen1View)
 <LI><a href="#[b7]">Screen1View::tearDownScreen()</a> from screen1view.o(i._ZN11Screen1View14tearDownScreenEv) referenced from screen1view.o(.constdata__ZTV11Screen1View)
 <LI><a href="#[bb]">Screen1View::handleTickEvent()</a> from screen1view.o(i._ZN11Screen1View15handleTickEventEv) referenced from screen1view.o(.constdata__ZTV11Screen1View)
 <LI><a href="#[b3]">Screen1View::~Screen1View()</a> from screen1view.o(i._ZN11Screen1ViewD1Ev) referenced from screen1view.o(.constdata__ZTV11Screen1View)
 <LI><a href="#[dd]">TouchGFXHAL::beginFrame()</a> from touchgfxhal.o(i._ZN11TouchGFXHAL10beginFrameEv) referenced from touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
 <LI><a href="#[be]">TouchGFXHAL::initialize()</a> from touchgfxhal.o(i._ZN11TouchGFXHAL10initializeEv) referenced from touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
 <LI><a href="#[d3]">TouchGFXHAL::enableInterrupts()</a> from touchgfxhal.o(i._ZN11TouchGFXHAL16enableInterruptsEv) referenced from touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
 <LI><a href="#[c0]">TouchGFXHAL::flushFrameBuffer(const touchgfx::Rect&)</a> from touchgfxhal.o(i._ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE) referenced from touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
 <LI><a href="#[d4]">TouchGFXHAL::disableInterrupts()</a> from touchgfxhal.o(i._ZN11TouchGFXHAL17disableInterruptsEv) referenced from touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
 <LI><a href="#[df]">TouchGFXHAL::setTFTFrameBuffer(unsigned short*)</a> from touchgfxhal.o(i._ZN11TouchGFXHAL17setTFTFrameBufferEPt) referenced from touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
 <LI><a href="#[d2]">TouchGFXHAL::configureInterrupts()</a> from touchgfxhal.o(i._ZN11TouchGFXHAL19configureInterruptsEv) referenced from touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
 <LI><a href="#[d5]">TouchGFXHAL::enableLCDControllerInterrupt()</a> from touchgfxhal.o(i._ZN11TouchGFXHAL28enableLCDControllerInterruptEv) referenced from touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
 <LI><a href="#[de]">TouchGFXHAL::endFrame()</a> from touchgfxhal.o(i._ZN11TouchGFXHAL8endFrameEv) referenced from touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
 <LI><a href="#[c6]">TouchGFXHAL::blockCopy(void*, const void*, unsigned)</a> from touchgfxhal.o(i._ZN11TouchGFXHAL9blockCopyEPvPKvj) referenced from touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
 <LI><a href="#[ab]">TouchGFXHAL::~TouchGFXHAL()</a> from touchgfxhal.o(i._ZN11TouchGFXHALD1Ev) referenced from touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
 <LI><a href="#[ab]">TouchGFXHAL::~TouchGFXHAL()</a> from touchgfxhal.o(i._ZN11TouchGFXHALD1Ev) referenced from touchgfxconfiguration.o(i.__sti___25_TouchGFXConfiguration_cpp_f5abfd34)
 <LI><a href="#[ad]">FrontendHeap::~FrontendHeap()</a> from touchgfxconfiguration.o(i._ZN12FrontendHeapD1Ev) referenced from touchgfxconfiguration.o(.constdata__ZTV12FrontendHeap)
 <LI><a href="#[ad]">FrontendHeap::~FrontendHeap()</a> from touchgfxconfiguration.o(i._ZN12FrontendHeapD1Ev) referenced from touchgfxconfiguration.o(i.touchgfx_init)
 <LI><a href="#[e6]">Screen1ViewBase::setupScreen()</a> from screen1viewbase.o(i._ZN15Screen1ViewBase11setupScreenEv) referenced from screen1viewbase.o(.constdata__ZTV15Screen1ViewBase)
 <LI><a href="#[e5]">Screen1ViewBase::~Screen1ViewBase()</a> from screen1viewbase.o(i._ZN15Screen1ViewBaseD1Ev) referenced from screen1viewbase.o(.constdata__ZTV15Screen1ViewBase)
 <LI><a href="#[ea]">Screen1Presenter::deactivate()</a> from screen1presenter.o(i._ZN16Screen1Presenter10deactivateEv) referenced from screen1presenter.o(.constdata__ZTV16Screen1Presenter)
 <LI><a href="#[e9]">Screen1Presenter::activate()</a> from screen1presenter.o(i._ZN16Screen1Presenter8activateEv) referenced from screen1presenter.o(.constdata__ZTV16Screen1Presenter)
 <LI><a href="#[eb]">Screen1Presenter::~Screen1Presenter()</a> from screen1presenter.o(i._ZN16Screen1PresenterD1Ev) referenced from screen1presenter.o(.constdata__ZTV16Screen1Presenter)
 <LI><a href="#[f0]">FrontendApplication::handleTickEvent()</a> from frontendapplication.o(i._ZN19FrontendApplication15handleTickEventEv) referenced from frontendapplication.o(.constdata__ZTV19FrontendApplication)
 <LI><a href="#[f8]">STM32TouchController::sampleTouch(int&, int&)</a> from stm32touchcontroller.o(i._ZN20STM32TouchController11sampleTouchERiS0_) referenced from stm32touchcontroller.o(.constdata__ZTV20STM32TouchController)
 <LI><a href="#[f7]">STM32TouchController::init()</a> from stm32touchcontroller.o(i._ZN20STM32TouchController4initEv) referenced from stm32touchcontroller.o(.constdata__ZTV20STM32TouchController)
 <LI><a href="#[a7]">STM32TouchController::~STM32TouchController()</a> from stm32touchcontroller.o(i._ZN20STM32TouchControllerD1Ev) referenced from stm32touchcontroller.o(.constdata__ZTV20STM32TouchController)
 <LI><a href="#[a7]">STM32TouchController::~STM32TouchController()</a> from stm32touchcontroller.o(i._ZN20STM32TouchControllerD1Ev) referenced from touchgfxconfiguration.o(i.__sti___25_TouchGFXConfiguration_cpp_f5abfd34)
 <LI><a href="#[aa]">ApplicationFontProvider::~ApplicationFontProvider()</a> from touchgfxconfiguration.o(i._ZN23ApplicationFontProviderD1Ev) referenced from applicationfontprovider.o(.constdata__ZTV23ApplicationFontProvider)
 <LI><a href="#[aa]">ApplicationFontProvider::~ApplicationFontProvider()</a> from touchgfxconfiguration.o(i._ZN23ApplicationFontProviderD1Ev) referenced from touchgfxconfiguration.o(i.__sti___25_TouchGFXConfiguration_cpp_f5abfd34)
 <LI><a href="#[b1]">FrontendApplicationBase::gotoScreen1ScreenNoTransitionImpl()</a> from frontendapplicationbase.o(i._ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv) referenced from frontendapplicationbase.o(.constdata)
 <LI><a href="#[b2]">FrontendApplicationBase::gotoScreen1ScreenSlideTransitionSouthImpl()</a> from frontendapplicationbase.o(i._ZN23FrontendApplicationBase41gotoScreen1ScreenSlideTransitionSouthImplEv) referenced from frontendapplicationbase.o(.constdata)
 <LI><a href="#[fa]">FrontendApplicationBase::~FrontendApplicationBase()</a> from touchgfxconfiguration.o(i._ZN23FrontendApplicationBaseD1Ev) referenced from touchgfxconfiguration.o(.constdata__ZTV23FrontendApplicationBase)
 <LI><a href="#[101]">STM32DMA::getDMAType()</a> from stm32dma.o(i._ZN8STM32DMA10getDMATypeEv) referenced from stm32dma.o(.constdata__ZTV8STM32DMA)
 <LI><a href="#[fe]">STM32DMA::initialize()</a> from stm32dma.o(i._ZN8STM32DMA10initializeEv) referenced from stm32dma.o(.constdata__ZTV8STM32DMA)
 <LI><a href="#[fb]">STM32DMA::getBlitCaps()</a> from stm32dma.o(i._ZN8STM32DMA11getBlitCapsEv) referenced from stm32dma.o(.constdata__ZTV8STM32DMA)
 <LI><a href="#[105]">STM32DMA::setupDataCopy(const touchgfx::BlitOp&)</a> from stm32dma.o(i._ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE) referenced from stm32dma.o(.constdata__ZTV8STM32DMA)
 <LI><a href="#[106]">STM32DMA::setupDataFill(const touchgfx::BlitOp&)</a> from stm32dma.o(i._ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE) referenced from stm32dma.o(.constdata__ZTV8STM32DMA)
 <LI><a href="#[100]">STM32DMA::signalDMAInterrupt()</a> from stm32dma.o(i._ZN8STM32DMA18signalDMAInterruptEv) referenced from stm32dma.o(.constdata__ZTV8STM32DMA)
 <LI><a href="#[a8]">STM32DMA::~STM32DMA()</a> from stm32dma.o(i._ZN8STM32DMAD1Ev) referenced from stm32dma.o(.constdata__ZTV8STM32DMA)
 <LI><a href="#[a8]">STM32DMA::~STM32DMA()</a> from stm32dma.o(i._ZN8STM32DMAD1Ev) referenced from touchgfxconfiguration.o(i.__sti___25_TouchGFXConfiguration_cpp_f5abfd34)
 <LI><a href="#[11c]">touchgfx::TiledImage::setXOffset(short)</a> from tiledimage.o(i._ZN8touchgfx10TiledImage10setXOffsetEs) referenced from tiledimage.o(.constdata__ZTVN8touchgfx10TiledImageE)
 <LI><a href="#[11d]">touchgfx::TiledImage::setYOffset(short)</a> from tiledimage.o(i._ZN8touchgfx10TiledImage10setYOffsetEs) referenced from tiledimage.o(.constdata__ZTVN8touchgfx10TiledImageE)
 <LI><a href="#[11a]">touchgfx::TiledImage::setBitmap(const touchgfx::Bitmap&)</a> from tiledimage.o(i._ZN8touchgfx10TiledImage9setBitmapERKNS_6BitmapE) referenced from tiledimage.o(.constdata__ZTVN8touchgfx10TiledImageE)
 <LI><a href="#[11b]">touchgfx::TiledImage::setOffset(short, short)</a> from tiledimage.o(i._ZN8touchgfx10TiledImage9setOffsetEss) referenced from tiledimage.o(.constdata__ZTVN8touchgfx10TiledImageE)
 <LI><a href="#[122]">touchgfx::Transition::invalidate()</a> from frontendapplicationbase.o(i._ZN8touchgfx10Transition10invalidateEv) referenced from frontendapplicationbase.o(.constdata__ZTVN8touchgfx10TransitionE)
 <LI><a href="#[122]">touchgfx::Transition::invalidate()</a> from frontendapplicationbase.o(i._ZN8touchgfx10Transition10invalidateEv) referenced from frontendapplicationbase.o(.constdata__ZTVN8touchgfx12NoTransitionE)
 <LI><a href="#[122]">touchgfx::Transition::invalidate()</a> from frontendapplicationbase.o(i._ZN8touchgfx10Transition10invalidateEv) referenced from frontendapplicationbase.o(.constdata__ZTVN8touchgfx15SlideTransitionILNS_9DirectionE1EEE)
 <LI><a href="#[11f]">touchgfx::Transition::handleTickEvent()</a> from frontendapplicationbase.o(i._ZN8touchgfx10Transition15handleTickEventEv) referenced from frontendapplicationbase.o(.constdata__ZTVN8touchgfx10TransitionE)
 <LI><a href="#[123]">touchgfx::Transition::setScreenContainer(touchgfx::Container&)</a> from frontendapplicationbase.o(i._ZN8touchgfx10Transition18setScreenContainerERNS_9ContainerE) referenced from frontendapplicationbase.o(.constdata__ZTVN8touchgfx10TransitionE)
 <LI><a href="#[123]">touchgfx::Transition::setScreenContainer(touchgfx::Container&)</a> from frontendapplicationbase.o(i._ZN8touchgfx10Transition18setScreenContainerERNS_9ContainerE) referenced from frontendapplicationbase.o(.constdata__ZTVN8touchgfx12NoTransitionE)
 <LI><a href="#[123]">touchgfx::Transition::setScreenContainer(touchgfx::Container&)</a> from frontendapplicationbase.o(i._ZN8touchgfx10Transition18setScreenContainerERNS_9ContainerE) referenced from frontendapplicationbase.o(.constdata__ZTVN8touchgfx15SlideTransitionILNS_9DirectionE1EEE)
 <LI><a href="#[121]">touchgfx::Transition::init()</a> from frontendapplicationbase.o(i._ZN8touchgfx10Transition4initEv) referenced from frontendapplicationbase.o(.constdata__ZTVN8touchgfx10TransitionE)
 <LI><a href="#[121]">touchgfx::Transition::init()</a> from frontendapplicationbase.o(i._ZN8touchgfx10Transition4initEv) referenced from frontendapplicationbase.o(.constdata__ZTVN8touchgfx12NoTransitionE)
 <LI><a href="#[120]">touchgfx::Transition::tearDown()</a> from frontendapplicationbase.o(i._ZN8touchgfx10Transition8tearDownEv) referenced from frontendapplicationbase.o(.constdata__ZTVN8touchgfx10TransitionE)
 <LI><a href="#[120]">touchgfx::Transition::tearDown()</a> from frontendapplicationbase.o(i._ZN8touchgfx10Transition8tearDownEv) referenced from frontendapplicationbase.o(.constdata__ZTVN8touchgfx12NoTransitionE)
 <LI><a href="#[11e]">touchgfx::Transition::~Transition()</a> from frontendapplicationbase.o(i._ZN8touchgfx10TransitionD1Ev) referenced from frontendapplicationbase.o(.constdata__ZTVN8touchgfx10TransitionE)
 <LI><a href="#[f4]">touchgfx::Application::invalidate()</a> from application.o(i._ZN8touchgfx11Application10invalidateEv) referenced from frontendapplication.o(.constdata__ZTV19FrontendApplication)
 <LI><a href="#[f4]">touchgfx::Application::invalidate()</a> from application.o(i._ZN8touchgfx11Application10invalidateEv) referenced from touchgfxconfiguration.o(.constdata__ZTV23FrontendApplicationBase)
 <LI><a href="#[f4]">touchgfx::Application::invalidate()</a> from application.o(i._ZN8touchgfx11Application10invalidateEv) referenced from application.o(.constdata__ZTVN8touchgfx11ApplicationE)
 <LI><a href="#[f4]">touchgfx::Application::invalidate()</a> from application.o(i._ZN8touchgfx11Application10invalidateEv) referenced from frontendapplicationbase.o(.constdata__ZTVN8touchgfx14MVPApplicationE)
 <LI><a href="#[ef]">touchgfx::Application::handleKeyEvent(unsigned char)</a> from application.o(i._ZN8touchgfx11Application14handleKeyEventEh) referenced from frontendapplication.o(.constdata__ZTV19FrontendApplication)
 <LI><a href="#[ef]">touchgfx::Application::handleKeyEvent(unsigned char)</a> from application.o(i._ZN8touchgfx11Application14handleKeyEventEh) referenced from touchgfxconfiguration.o(.constdata__ZTV23FrontendApplicationBase)
 <LI><a href="#[ef]">touchgfx::Application::handleKeyEvent(unsigned char)</a> from application.o(i._ZN8touchgfx11Application14handleKeyEventEh) referenced from application.o(.constdata__ZTVN8touchgfx11ApplicationE)
 <LI><a href="#[ef]">touchgfx::Application::handleKeyEvent(unsigned char)</a> from application.o(i._ZN8touchgfx11Application14handleKeyEventEh) referenced from frontendapplicationbase.o(.constdata__ZTVN8touchgfx14MVPApplicationE)
 <LI><a href="#[f5]">touchgfx::Application::invalidateArea(touchgfx::Rect)</a> from application.o(i._ZN8touchgfx11Application14invalidateAreaENS_4RectE) referenced from frontendapplication.o(.constdata__ZTV19FrontendApplication)
 <LI><a href="#[f5]">touchgfx::Application::invalidateArea(touchgfx::Rect)</a> from application.o(i._ZN8touchgfx11Application14invalidateAreaENS_4RectE) referenced from touchgfxconfiguration.o(.constdata__ZTV23FrontendApplicationBase)
 <LI><a href="#[f5]">touchgfx::Application::invalidateArea(touchgfx::Rect)</a> from application.o(i._ZN8touchgfx11Application14invalidateAreaENS_4RectE) referenced from application.o(.constdata__ZTVN8touchgfx11ApplicationE)
 <LI><a href="#[f5]">touchgfx::Application::invalidateArea(touchgfx::Rect)</a> from application.o(i._ZN8touchgfx11Application14invalidateAreaENS_4RectE) referenced from frontendapplicationbase.o(.constdata__ZTVN8touchgfx14MVPApplicationE)
 <LI><a href="#[f3]">touchgfx::Application::drawCachedAreas()</a> from application.o(i._ZN8touchgfx11Application15drawCachedAreasEv) referenced from frontendapplication.o(.constdata__ZTV19FrontendApplication)
 <LI><a href="#[f3]">touchgfx::Application::drawCachedAreas()</a> from application.o(i._ZN8touchgfx11Application15drawCachedAreasEv) referenced from touchgfxconfiguration.o(.constdata__ZTV23FrontendApplicationBase)
 <LI><a href="#[f3]">touchgfx::Application::drawCachedAreas()</a> from application.o(i._ZN8touchgfx11Application15drawCachedAreasEv) referenced from application.o(.constdata__ZTVN8touchgfx11ApplicationE)
 <LI><a href="#[f3]">touchgfx::Application::drawCachedAreas()</a> from application.o(i._ZN8touchgfx11Application15drawCachedAreasEv) referenced from frontendapplicationbase.o(.constdata__ZTVN8touchgfx14MVPApplicationE)
 <LI><a href="#[ed]">touchgfx::Application::handleDragEvent(const touchgfx::DragEvent&)</a> from application.o(i._ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE) referenced from frontendapplication.o(.constdata__ZTV19FrontendApplication)
 <LI><a href="#[ed]">touchgfx::Application::handleDragEvent(const touchgfx::DragEvent&)</a> from application.o(i._ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE) referenced from touchgfxconfiguration.o(.constdata__ZTV23FrontendApplicationBase)
 <LI><a href="#[ed]">touchgfx::Application::handleDragEvent(const touchgfx::DragEvent&)</a> from application.o(i._ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE) referenced from application.o(.constdata__ZTVN8touchgfx11ApplicationE)
 <LI><a href="#[ed]">touchgfx::Application::handleDragEvent(const touchgfx::DragEvent&)</a> from application.o(i._ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE) referenced from frontendapplicationbase.o(.constdata__ZTVN8touchgfx14MVPApplicationE)
 <LI><a href="#[f9]">touchgfx::Application::handleTickEvent()</a> from application.o(i._ZN8touchgfx11Application15handleTickEventEv) referenced from touchgfxconfiguration.o(.constdata__ZTV23FrontendApplicationBase)
 <LI><a href="#[f9]">touchgfx::Application::handleTickEvent()</a> from application.o(i._ZN8touchgfx11Application15handleTickEventEv) referenced from application.o(.constdata__ZTVN8touchgfx11ApplicationE)
 <LI><a href="#[f9]">touchgfx::Application::handleTickEvent()</a> from application.o(i._ZN8touchgfx11Application15handleTickEventEv) referenced from frontendapplicationbase.o(.constdata__ZTVN8touchgfx14MVPApplicationE)
 <LI><a href="#[f2]">touchgfx::Application::clearCachedAreas()</a> from application.o(i._ZN8touchgfx11Application16clearCachedAreasEv) referenced from frontendapplication.o(.constdata__ZTV19FrontendApplication)
 <LI><a href="#[f2]">touchgfx::Application::clearCachedAreas()</a> from application.o(i._ZN8touchgfx11Application16clearCachedAreasEv) referenced from touchgfxconfiguration.o(.constdata__ZTV23FrontendApplicationBase)
 <LI><a href="#[f2]">touchgfx::Application::clearCachedAreas()</a> from application.o(i._ZN8touchgfx11Application16clearCachedAreasEv) referenced from application.o(.constdata__ZTVN8touchgfx11ApplicationE)
 <LI><a href="#[f2]">touchgfx::Application::clearCachedAreas()</a> from application.o(i._ZN8touchgfx11Application16clearCachedAreasEv) referenced from frontendapplicationbase.o(.constdata__ZTVN8touchgfx14MVPApplicationE)
 <LI><a href="#[ec]">touchgfx::Application::handleClickEvent(const touchgfx::ClickEvent&)</a> from application.o(i._ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE) referenced from frontendapplication.o(.constdata__ZTV19FrontendApplication)
 <LI><a href="#[ec]">touchgfx::Application::handleClickEvent(const touchgfx::ClickEvent&)</a> from application.o(i._ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE) referenced from touchgfxconfiguration.o(.constdata__ZTV23FrontendApplicationBase)
 <LI><a href="#[ec]">touchgfx::Application::handleClickEvent(const touchgfx::ClickEvent&)</a> from application.o(i._ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE) referenced from application.o(.constdata__ZTVN8touchgfx11ApplicationE)
 <LI><a href="#[ec]">touchgfx::Application::handleClickEvent(const touchgfx::ClickEvent&)</a> from application.o(i._ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE) referenced from frontendapplicationbase.o(.constdata__ZTVN8touchgfx14MVPApplicationE)
 <LI><a href="#[ee]">touchgfx::Application::handleGestureEvent(const touchgfx::GestureEvent&)</a> from application.o(i._ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE) referenced from frontendapplication.o(.constdata__ZTV19FrontendApplication)
 <LI><a href="#[ee]">touchgfx::Application::handleGestureEvent(const touchgfx::GestureEvent&)</a> from application.o(i._ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE) referenced from touchgfxconfiguration.o(.constdata__ZTV23FrontendApplicationBase)
 <LI><a href="#[ee]">touchgfx::Application::handleGestureEvent(const touchgfx::GestureEvent&)</a> from application.o(i._ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE) referenced from application.o(.constdata__ZTVN8touchgfx11ApplicationE)
 <LI><a href="#[ee]">touchgfx::Application::handleGestureEvent(const touchgfx::GestureEvent&)</a> from application.o(i._ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE) referenced from frontendapplicationbase.o(.constdata__ZTVN8touchgfx14MVPApplicationE)
 <LI><a href="#[124]">touchgfx::Application::handlePendingScreenTransition()</a> from application.o(i._ZN8touchgfx11Application29handlePendingScreenTransitionEv) referenced from application.o(.constdata__ZTVN8touchgfx11ApplicationE)
 <LI><a href="#[f6]">touchgfx::Application::draw(touchgfx::Rect&)</a> from application.o(i._ZN8touchgfx11Application4drawERNS_4RectE) referenced from frontendapplication.o(.constdata__ZTV19FrontendApplication)
 <LI><a href="#[f6]">touchgfx::Application::draw(touchgfx::Rect&)</a> from application.o(i._ZN8touchgfx11Application4drawERNS_4RectE) referenced from touchgfxconfiguration.o(.constdata__ZTV23FrontendApplicationBase)
 <LI><a href="#[f6]">touchgfx::Application::draw(touchgfx::Rect&)</a> from application.o(i._ZN8touchgfx11Application4drawERNS_4RectE) referenced from application.o(.constdata__ZTVN8touchgfx11ApplicationE)
 <LI><a href="#[f6]">touchgfx::Application::draw(touchgfx::Rect&)</a> from application.o(i._ZN8touchgfx11Application4drawERNS_4RectE) referenced from frontendapplicationbase.o(.constdata__ZTVN8touchgfx14MVPApplicationE)
 <LI><a href="#[125]">touchgfx::GraphScroll&lang;(short)150&rang;::~GraphScroll()</a> from screen1viewbase.o(i._ZN8touchgfx11GraphScrollILs150EED1Ev) referenced from screen1viewbase.o(.constdata__ZTVN8touchgfx11GraphScrollILs150EEE)
 <LI><a href="#[14d]">touchgfx::DigitalClock::updateClock()</a> from digitalclock.o(i._ZN8touchgfx12DigitalClock11updateClockEv) referenced from digitalclock.o(.constdata__ZTVN8touchgfx12DigitalClockE)
 <LI><a href="#[14e]">touchgfx::DigitalClock::setTypedText(touchgfx::TypedText)</a> from digitalclock.o(i._ZN8touchgfx12DigitalClock12setTypedTextENS_9TypedTextE) referenced from digitalclock.o(.constdata__ZTVN8touchgfx12DigitalClockE)
 <LI><a href="#[14f]">touchgfx::DigitalClock::setColor(touchgfx::colortype)</a> from digitalclock.o(i._ZN8touchgfx12DigitalClock8setColorENS_9colortypeE) referenced from digitalclock.o(.constdata__ZTVN8touchgfx12DigitalClockE)
 <LI><a href="#[14a]">touchgfx::DigitalClock::setWidth(short)</a> from digitalclock.o(i._ZN8touchgfx12DigitalClock8setWidthEs) referenced from digitalclock.o(.constdata__ZTVN8touchgfx12DigitalClockE)
 <LI><a href="#[14b]">touchgfx::DigitalClock::setHeight(short)</a> from digitalclock.o(i._ZN8touchgfx12DigitalClock9setHeightEs) referenced from digitalclock.o(.constdata__ZTVN8touchgfx12DigitalClockE)
 <LI><a href="#[151]">touchgfx::NoTransition::handleTickEvent()</a> from frontendapplicationbase.o(i._ZN8touchgfx12NoTransition15handleTickEventEv) referenced from frontendapplicationbase.o(.constdata__ZTVN8touchgfx12NoTransitionE)
 <LI><a href="#[150]">touchgfx::NoTransition::~NoTransition()</a> from frontendapplicationbase.o(i._ZN8touchgfx12NoTransitionD1Ev) referenced from frontendapplicationbase.o(.constdata__ZTVN8touchgfx12NoTransitionE)
 <LI><a href="#[14c]">touchgfx::AbstractClock::setTime24Hour(unsigned char, unsigned char, unsigned char)</a> from abstractclock.o(i._ZN8touchgfx13AbstractClock13setTime24HourEhhh) referenced from digitalclock.o(.constdata__ZTVN8touchgfx12DigitalClockE)
 <LI><a href="#[14c]">touchgfx::AbstractClock::setTime24Hour(unsigned char, unsigned char, unsigned char)</a> from abstractclock.o(i._ZN8touchgfx13AbstractClock13setTime24HourEhhh) referenced from abstractclock.o(.constdata__ZTVN8touchgfx13AbstractClockE)
 <LI><a href="#[fc]">touchgfx::DMA_Interface::addToQueue(const touchgfx::BlitOp&)</a> from dma.o(i._ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE) referenced from stm32dma.o(.constdata__ZTV8STM32DMA)
 <LI><a href="#[107]">touchgfx::DMA_Interface::enableAlpha(unsigned char)</a> from dma.o(i._ZN8touchgfx13DMA_Interface11enableAlphaEh) referenced from stm32dma.o(.constdata__ZTV8STM32DMA)
 <LI><a href="#[108]">touchgfx::DMA_Interface::disableAlpha()</a> from dma.o(i._ZN8touchgfx13DMA_Interface12disableAlphaEv) referenced from stm32dma.o(.constdata__ZTV8STM32DMA)
 <LI><a href="#[104]">touchgfx::DMA_Interface::seedExecution()</a> from dma.o(i._ZN8touchgfx13DMA_Interface13seedExecutionEv) referenced from stm32dma.o(.constdata__ZTV8STM32DMA)
 <LI><a href="#[103]">touchgfx::DMA_Interface::executeCompleted()</a> from dma.o(i._ZN8touchgfx13DMA_Interface16executeCompletedEv) referenced from stm32dma.o(.constdata__ZTV8STM32DMA)
 <LI><a href="#[109]">touchgfx::DMA_Interface::waitForFrameBufferSemaphore()</a> from dma.o(i._ZN8touchgfx13DMA_Interface27waitForFrameBufferSemaphoreEv) referenced from stm32dma.o(.constdata__ZTV8STM32DMA)
 <LI><a href="#[fd]">touchgfx::DMA_Interface::flush()</a> from dma.o(i._ZN8touchgfx13DMA_Interface5flushEv) referenced from stm32dma.o(.constdata__ZTV8STM32DMA)
 <LI><a href="#[ff]">touchgfx::DMA_Interface::start()</a> from dma.o(i._ZN8touchgfx13DMA_Interface5startEv) referenced from stm32dma.o(.constdata__ZTV8STM32DMA)
 <LI><a href="#[102]">touchgfx::DMA_Interface::execute()</a> from dma.o(i._ZN8touchgfx13DMA_Interface7executeEv) referenced from stm32dma.o(.constdata__ZTV8STM32DMA)
 <LI><a href="#[80]">touchgfx::GeneratedFont::~GeneratedFont()</a> from generatedfont.o(i._ZN8touchgfx13GeneratedFontD1Ev) referenced from generatedfont.o(.constdata__ZTVN8touchgfx13GeneratedFontE)
 <LI><a href="#[80]">touchgfx::GeneratedFont::~GeneratedFont()</a> from generatedfont.o(i._ZN8touchgfx13GeneratedFontD1Ev) referenced from table_verdana_15_4bpp.o(i._Z23getFont_verdana_15_4bppv)
 <LI><a href="#[80]">touchgfx::GeneratedFont::~GeneratedFont()</a> from generatedfont.o(i._ZN8touchgfx13GeneratedFontD1Ev) referenced from table_verdana_25_4bpp.o(i._Z23getFont_verdana_25_4bppv)
 <LI><a href="#[80]">touchgfx::GeneratedFont::~GeneratedFont()</a> from generatedfont.o(i._ZN8touchgfx13GeneratedFontD1Ev) referenced from table_verdana_30_4bpp.o(i._Z23getFont_verdana_30_4bppv)
 <LI><a href="#[80]">touchgfx::GeneratedFont::~GeneratedFont()</a> from generatedfont.o(i._ZN8touchgfx13GeneratedFontD1Ev) referenced from table_verdana_40_4bpp.o(i._Z23getFont_verdana_40_4bppv)
 <LI><a href="#[80]">touchgfx::GeneratedFont::~GeneratedFont()</a> from generatedfont.o(i._ZN8touchgfx13GeneratedFontD1Ev) referenced from table_verdana_80_4bpp.o(i._Z23getFont_verdana_80_4bppv)
 <LI><a href="#[80]">touchgfx::GeneratedFont::~GeneratedFont()</a> from generatedfont.o(i._ZN8touchgfx13GeneratedFontD1Ev) referenced from table_iconfont_32_4bpp.o(i._Z24getFont_iconfont_32_4bppv)
 <LI><a href="#[80]">touchgfx::GeneratedFont::~GeneratedFont()</a> from generatedfont.o(i._ZN8touchgfx13GeneratedFontD1Ev) referenced from table_verdana_155_4bpp.o(i._Z24getFont_verdana_155_4bppv)
 <LI><a href="#[168]">touchgfx::ImageProgress::setAnchorAtZero(bool)</a> from imageprogress.o(i._ZN8touchgfx13ImageProgress15setAnchorAtZeroEb) referenced from imageprogress.o(.constdata__ZTVN8touchgfx13ImageProgressE)
 <LI><a href="#[162]">touchgfx::ImageProgress::setProgressIndicatorPosition(short, short, short, short)</a> from imageprogress.o(i._ZN8touchgfx13ImageProgress28setProgressIndicatorPositionEssss) referenced from imageprogress.o(.constdata__ZTVN8touchgfx13ImageProgressE)
 <LI><a href="#[164]">touchgfx::ImageProgress::setValue(int)</a> from imageprogress.o(i._ZN8touchgfx13ImageProgress8setValueEi) referenced from imageprogress.o(.constdata__ZTVN8touchgfx13ImageProgressE)
 <LI><a href="#[169]">touchgfx::ImageProgress::setBitmap(unsigned short)</a> from imageprogress.o(i._ZN8touchgfx13ImageProgress9setBitmapEt) referenced from imageprogress.o(.constdata__ZTVN8touchgfx13ImageProgressE)
 <LI><a href="#[15f]">touchgfx::ImageProgress::~ImageProgress()</a> from imageprogress.o(i._ZN8touchgfx13ImageProgressD1Ev) referenced from imageprogress.o(.constdata__ZTVN8touchgfx13ImageProgressE)
 <LI><a href="#[16e]">touchgfx::PainterRGB565::setColor(touchgfx::colortype)</a> from painterrgb565.o(i._ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE) referenced from painterrgb565.o(.constdata__ZTVN8touchgfx13PainterRGB565E)
 <LI><a href="#[172]">touchgfx::ScalableImage::setScalingAlgorithm(touchgfx::ScalableImage::ScalingAlgorithm)</a> from scalableimage.o(i._ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE) referenced from scalableimage.o(.constdata__ZTVN8touchgfx13ScalableImageE)
 <LI><a href="#[178]">touchgfx::TextureMapper::updateAngles(float, float, float)</a> from texturemapper.o(i._ZN8touchgfx13TextureMapper12updateAnglesEfff) referenced from texturemapper.o(.constdata__ZTVN8touchgfx13TextureMapperE)
 <LI><a href="#[17d]">touchgfx::TextureMapper::setBitmapPosition(float, float)</a> from texturemapper.o(i._ZN8touchgfx13TextureMapper17setBitmapPositionEff) referenced from texturemapper.o(.constdata__ZTVN8touchgfx13TextureMapperE)
 <LI><a href="#[17c]">touchgfx::TextureMapper::setCameraDistance(float)</a> from texturemapper.o(i._ZN8touchgfx13TextureMapper17setCameraDistanceEf) referenced from texturemapper.o(.constdata__ZTVN8touchgfx13TextureMapperE)
 <LI><a href="#[17a]">touchgfx::TextureMapper::setOrigo(float, float, float)</a> from texturemapper.o(i._ZN8touchgfx13TextureMapper8setOrigoEfff) referenced from texturemapper.o(.constdata__ZTVN8touchgfx13TextureMapperE)
 <LI><a href="#[179]">touchgfx::TextureMapper::setScale(float)</a> from texturemapper.o(i._ZN8touchgfx13TextureMapper8setScaleEf) referenced from texturemapper.o(.constdata__ZTVN8touchgfx13TextureMapperE)
 <LI><a href="#[177]">touchgfx::TextureMapper::setAngles(float, float, float)</a> from texturemapper.o(i._ZN8touchgfx13TextureMapper9setAnglesEfff) referenced from texturemapper.o(.constdata__ZTVN8touchgfx13TextureMapperE)
 <LI><a href="#[176]">touchgfx::TextureMapper::setBitmap(const touchgfx::Bitmap&)</a> from texturemapper.o(i._ZN8touchgfx13TextureMapper9setBitmapERKNS_6BitmapE) referenced from texturemapper.o(.constdata__ZTVN8touchgfx13TextureMapperE)
 <LI><a href="#[17b]">touchgfx::TextureMapper::setCamera(float, float)</a> from texturemapper.o(i._ZN8touchgfx13TextureMapper9setCameraEff) referenced from texturemapper.o(.constdata__ZTVN8touchgfx13TextureMapperE)
 <LI><a href="#[f1]">touchgfx::MVPApplication::handlePendingScreenTransition()</a> from touchgfxconfiguration.o(i._ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv) referenced from frontendapplication.o(.constdata__ZTV19FrontendApplication)
 <LI><a href="#[f1]">touchgfx::MVPApplication::handlePendingScreenTransition()</a> from touchgfxconfiguration.o(i._ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv) referenced from touchgfxconfiguration.o(.constdata__ZTV23FrontendApplicationBase)
 <LI><a href="#[f1]">touchgfx::MVPApplication::handlePendingScreenTransition()</a> from touchgfxconfiguration.o(i._ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv) referenced from frontendapplicationbase.o(.constdata__ZTVN8touchgfx14MVPApplicationE)
 <LI><a href="#[181]">touchgfx::SnapshotWidget::makeSnapshot(unsigned short)</a> from snapshotwidget.o(i._ZN8touchgfx14SnapshotWidget12makeSnapshotEt) referenced from snapshotwidget.o(.constdata__ZTVN8touchgfx14SnapshotWidgetE)
 <LI><a href="#[180]">touchgfx::SnapshotWidget::makeSnapshot()</a> from snapshotwidget.o(i._ZN8touchgfx14SnapshotWidget12makeSnapshotEv) referenced from snapshotwidget.o(.constdata__ZTVN8touchgfx14SnapshotWidgetE)
 <LI><a href="#[85]">touchgfx::EasingEquations::linearEaseNone(unsigned short, short, short, unsigned short)</a> from easingequations.o(i._ZN8touchgfx15EasingEquations14linearEaseNoneEtsst) referenced from abstractprogressindicator.o(i._ZN8touchgfx25AbstractProgressIndicatorC1Ev)
 <LI><a href="#[141]">touchgfx::GraphScrollData::beforeAddValue()</a> from graphscroll.o(i._ZN8touchgfx15GraphScrollData14beforeAddValueEv) referenced from screen1viewbase.o(.constdata__ZTVN8touchgfx11GraphScrollILs150EEE)
 <LI><a href="#[142]">touchgfx::GraphScrollData::addValue(int)</a> from graphscroll.o(i._ZN8touchgfx15GraphScrollData8addValueEi) referenced from screen1viewbase.o(.constdata__ZTVN8touchgfx11GraphScrollILs150EEE)
 <LI><a href="#[183]">touchgfx::SlideTransition&lang;(touchgfx::Direction)1&rang;::handleTickEvent()</a> from frontendapplicationbase.o(t._ZN8touchgfx15SlideTransitionILNS_9DirectionE1EE15handleTickEventEv) referenced from frontendapplicationbase.o(.constdata__ZTVN8touchgfx15SlideTransitionILNS_9DirectionE1EEE)
 <LI><a href="#[185]">touchgfx::SlideTransition&lang;(touchgfx::Direction)1&rang;::init()</a> from frontendapplicationbase.o(t._ZN8touchgfx15SlideTransitionILNS_9DirectionE1EE4initEv) referenced from frontendapplicationbase.o(.constdata__ZTVN8touchgfx15SlideTransitionILNS_9DirectionE1EEE)
 <LI><a href="#[184]">touchgfx::SlideTransition&lang;(touchgfx::Direction)1&rang;::tearDown()</a> from frontendapplicationbase.o(t._ZN8touchgfx15SlideTransitionILNS_9DirectionE1EE8tearDownEv) referenced from frontendapplicationbase.o(.constdata__ZTVN8touchgfx15SlideTransitionILNS_9DirectionE1EEE)
 <LI><a href="#[182]">touchgfx::SlideTransition&lang;(touchgfx::Direction)1&rang;::~SlideTransition()</a> from frontendapplicationbase.o(i._ZN8touchgfx15SlideTransitionILNS_9DirectionE1EED1Ev) referenced from frontendapplicationbase.o(.constdata__ZTVN8touchgfx15SlideTransitionILNS_9DirectionE1EEE)
 <LI><a href="#[186]">touchgfx::DynamicDataGraph::beforeAddValue()</a> from abstractdatagraph.o(i._ZN8touchgfx16DynamicDataGraph14beforeAddValueEv) referenced from abstractdatagraph.o(.constdata__ZTVN8touchgfx16DynamicDataGraphE)
 <LI><a href="#[140]">touchgfx::DynamicDataGraph::setScale(int, bool)</a> from abstractdatagraph.o(i._ZN8touchgfx16DynamicDataGraph8setScaleEib) referenced from screen1viewbase.o(.constdata__ZTVN8touchgfx11GraphScrollILs150EEE)
 <LI><a href="#[140]">touchgfx::DynamicDataGraph::setScale(int, bool)</a> from abstractdatagraph.o(i._ZN8touchgfx16DynamicDataGraph8setScaleEib) referenced from abstractdatagraph.o(.constdata__ZTVN8touchgfx16DynamicDataGraphE)
 <LI><a href="#[132]">touchgfx::DynamicDataGraph::setScaleX(int, bool)</a> from abstractdatagraph.o(i._ZN8touchgfx16DynamicDataGraph9setScaleXEib) referenced from screen1viewbase.o(.constdata__ZTVN8touchgfx11GraphScrollILs150EEE)
 <LI><a href="#[132]">touchgfx::DynamicDataGraph::setScaleX(int, bool)</a> from abstractdatagraph.o(i._ZN8touchgfx16DynamicDataGraph9setScaleXEib) referenced from abstractdatagraph.o(.constdata__ZTVN8touchgfx16DynamicDataGraphE)
 <LI><a href="#[134]">touchgfx::DynamicDataGraph::setScaleY(int, bool)</a> from abstractdatagraph.o(i._ZN8touchgfx16DynamicDataGraph9setScaleYEib) referenced from screen1viewbase.o(.constdata__ZTVN8touchgfx11GraphScrollILs150EEE)
 <LI><a href="#[134]">touchgfx::DynamicDataGraph::setScaleY(int, bool)</a> from abstractdatagraph.o(i._ZN8touchgfx16DynamicDataGraph9setScaleYEib) referenced from abstractdatagraph.o(.constdata__ZTVN8touchgfx16DynamicDataGraphE)
 <LI><a href="#[189]">touchgfx::GraphElementLine::invalidateGraphPointAt(short)</a> from graphelements.o(i._ZN8touchgfx16GraphElementLine22invalidateGraphPointAtEs) referenced from graphelements.o(.constdata__ZTVN8touchgfx16GraphElementLineE)
 <LI><a href="#[136]">touchgfx::AbstractDataGraph::setGraphRangeX(int, int)</a> from abstractdatagraph.o(i._ZN8touchgfx17AbstractDataGraph14setGraphRangeXEii) referenced from screen1viewbase.o(.constdata__ZTVN8touchgfx11GraphScrollILs150EEE)
 <LI><a href="#[136]">touchgfx::AbstractDataGraph::setGraphRangeX(int, int)</a> from abstractdatagraph.o(i._ZN8touchgfx17AbstractDataGraph14setGraphRangeXEii) referenced from abstractdatagraph.o(.constdata__ZTVN8touchgfx16DynamicDataGraphE)
 <LI><a href="#[136]">touchgfx::AbstractDataGraph::setGraphRangeX(int, int)</a> from abstractdatagraph.o(i._ZN8touchgfx17AbstractDataGraph14setGraphRangeXEii) referenced from abstractdatagraph.o(.constdata__ZTVN8touchgfx17AbstractDataGraphE)
 <LI><a href="#[138]">touchgfx::AbstractDataGraph::setGraphRangeY(int, int)</a> from abstractdatagraph.o(i._ZN8touchgfx17AbstractDataGraph14setGraphRangeYEii) referenced from screen1viewbase.o(.constdata__ZTVN8touchgfx11GraphScrollILs150EEE)
 <LI><a href="#[138]">touchgfx::AbstractDataGraph::setGraphRangeY(int, int)</a> from abstractdatagraph.o(i._ZN8touchgfx17AbstractDataGraph14setGraphRangeYEii) referenced from abstractdatagraph.o(.constdata__ZTVN8touchgfx16DynamicDataGraphE)
 <LI><a href="#[138]">touchgfx::AbstractDataGraph::setGraphRangeY(int, int)</a> from abstractdatagraph.o(i._ZN8touchgfx17AbstractDataGraph14setGraphRangeYEii) referenced from abstractdatagraph.o(.constdata__ZTVN8touchgfx17AbstractDataGraphE)
 <LI><a href="#[12d]">touchgfx::AbstractDataGraph::handleDragEvent(const touchgfx::DragEvent&)</a> from abstractdatagraph.o(i._ZN8touchgfx17AbstractDataGraph15handleDragEventERKNS_9DragEventE) referenced from screen1viewbase.o(.constdata__ZTVN8touchgfx11GraphScrollILs150EEE)
 <LI><a href="#[12d]">touchgfx::AbstractDataGraph::handleDragEvent(const touchgfx::DragEvent&)</a> from abstractdatagraph.o(i._ZN8touchgfx17AbstractDataGraph15handleDragEventERKNS_9DragEventE) referenced from abstractdatagraph.o(.constdata__ZTVN8touchgfx16DynamicDataGraphE)
 <LI><a href="#[12d]">touchgfx::AbstractDataGraph::handleDragEvent(const touchgfx::DragEvent&)</a> from abstractdatagraph.o(i._ZN8touchgfx17AbstractDataGraph15handleDragEventERKNS_9DragEventE) referenced from abstractdatagraph.o(.constdata__ZTVN8touchgfx17AbstractDataGraphE)
 <LI><a href="#[12c]">touchgfx::AbstractDataGraph::handleClickEvent(const touchgfx::ClickEvent&)</a> from abstractdatagraph.o(i._ZN8touchgfx17AbstractDataGraph16handleClickEventERKNS_10ClickEventE) referenced from screen1viewbase.o(.constdata__ZTVN8touchgfx11GraphScrollILs150EEE)
 <LI><a href="#[12c]">touchgfx::AbstractDataGraph::handleClickEvent(const touchgfx::ClickEvent&)</a> from abstractdatagraph.o(i._ZN8touchgfx17AbstractDataGraph16handleClickEventERKNS_10ClickEventE) referenced from abstractdatagraph.o(.constdata__ZTVN8touchgfx16DynamicDataGraphE)
 <LI><a href="#[12c]">touchgfx::AbstractDataGraph::handleClickEvent(const touchgfx::ClickEvent&)</a> from abstractdatagraph.o(i._ZN8touchgfx17AbstractDataGraph16handleClickEventERKNS_10ClickEventE) referenced from abstractdatagraph.o(.constdata__ZTVN8touchgfx17AbstractDataGraphE)
 <LI><a href="#[137]">touchgfx::AbstractDataGraph::setGraphRangeXScaled(int, int)</a> from abstractdatagraph.o(i._ZN8touchgfx17AbstractDataGraph20setGraphRangeXScaledEii) referenced from screen1viewbase.o(.constdata__ZTVN8touchgfx11GraphScrollILs150EEE)
 <LI><a href="#[137]">touchgfx::AbstractDataGraph::setGraphRangeXScaled(int, int)</a> from abstractdatagraph.o(i._ZN8touchgfx17AbstractDataGraph20setGraphRangeXScaledEii) referenced from abstractdatagraph.o(.constdata__ZTVN8touchgfx16DynamicDataGraphE)
 <LI><a href="#[137]">touchgfx::AbstractDataGraph::setGraphRangeXScaled(int, int)</a> from abstractdatagraph.o(i._ZN8touchgfx17AbstractDataGraph20setGraphRangeXScaledEii) referenced from abstractdatagraph.o(.constdata__ZTVN8touchgfx17AbstractDataGraphE)
 <LI><a href="#[139]">touchgfx::AbstractDataGraph::setGraphRangeYScaled(int, int)</a> from abstractdatagraph.o(i._ZN8touchgfx17AbstractDataGraph20setGraphRangeYScaledEii) referenced from screen1viewbase.o(.constdata__ZTVN8touchgfx11GraphScrollILs150EEE)
 <LI><a href="#[139]">touchgfx::AbstractDataGraph::setGraphRangeYScaled(int, int)</a> from abstractdatagraph.o(i._ZN8touchgfx17AbstractDataGraph20setGraphRangeYScaledEii) referenced from abstractdatagraph.o(.constdata__ZTVN8touchgfx16DynamicDataGraphE)
 <LI><a href="#[139]">touchgfx::AbstractDataGraph::setGraphRangeYScaled(int, int)</a> from abstractdatagraph.o(i._ZN8touchgfx17AbstractDataGraph20setGraphRangeYScaledEii) referenced from abstractdatagraph.o(.constdata__ZTVN8touchgfx17AbstractDataGraphE)
 <LI><a href="#[12a]">touchgfx::AbstractDataGraph::setWidth(short)</a> from abstractdatagraph.o(i._ZN8touchgfx17AbstractDataGraph8setWidthEs) referenced from screen1viewbase.o(.constdata__ZTVN8touchgfx11GraphScrollILs150EEE)
 <LI><a href="#[12a]">touchgfx::AbstractDataGraph::setWidth(short)</a> from abstractdatagraph.o(i._ZN8touchgfx17AbstractDataGraph8setWidthEs) referenced from abstractdatagraph.o(.constdata__ZTVN8touchgfx16DynamicDataGraphE)
 <LI><a href="#[12a]">touchgfx::AbstractDataGraph::setWidth(short)</a> from abstractdatagraph.o(i._ZN8touchgfx17AbstractDataGraph8setWidthEs) referenced from abstractdatagraph.o(.constdata__ZTVN8touchgfx17AbstractDataGraphE)
 <LI><a href="#[12b]">touchgfx::AbstractDataGraph::setHeight(short)</a> from abstractdatagraph.o(i._ZN8touchgfx17AbstractDataGraph9setHeightEs) referenced from screen1viewbase.o(.constdata__ZTVN8touchgfx11GraphScrollILs150EEE)
 <LI><a href="#[12b]">touchgfx::AbstractDataGraph::setHeight(short)</a> from abstractdatagraph.o(i._ZN8touchgfx17AbstractDataGraph9setHeightEs) referenced from abstractdatagraph.o(.constdata__ZTVN8touchgfx16DynamicDataGraphE)
 <LI><a href="#[12b]">touchgfx::AbstractDataGraph::setHeight(short)</a> from abstractdatagraph.o(i._ZN8touchgfx17AbstractDataGraph9setHeightEs) referenced from abstractdatagraph.o(.constdata__ZTVN8touchgfx17AbstractDataGraphE)
 <LI><a href="#[18a]">touchgfx::AbstractPartition::~AbstractPartition__sub_object()</a> from abstractpartition.o(i._ZN8touchgfx17AbstractPartitionD2Ev) referenced from abstractpartition.o(.constdata__ZTVN8touchgfx17AbstractPartitionE)
 <LI><a href="#[a6]">touchgfx::LCD16DebugPrinter::~LCD16DebugPrinter()</a> from lcd16debugprinter.o(i._ZN8touchgfx17LCD16DebugPrinterD1Ev) referenced from lcd16debugprinter.o(.constdata__ZTVN8touchgfx17LCD16DebugPrinterE)
 <LI><a href="#[a6]">touchgfx::LCD16DebugPrinter::~LCD16DebugPrinter()</a> from lcd16debugprinter.o(i._ZN8touchgfx17LCD16DebugPrinterD1Ev) referenced from frontendapplication.o(i.__sti___23_frontendapplication_cpp_a4e6c903)
 <LI><a href="#[18e]">touchgfx::LockFreeDMA_Queue::pushCopyOf(const touchgfx::BlitOp&)</a> from dma.o(i._ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE) referenced from dma.o(.constdata__ZTVN8touchgfx17LockFreeDMA_QueueE)
 <LI><a href="#[18f]">touchgfx::LockFreeDMA_Queue::pop()</a> from dma.o(i._ZN8touchgfx17LockFreeDMA_Queue3popEv) referenced from dma.o(.constdata__ZTVN8touchgfx17LockFreeDMA_QueueE)
 <LI><a href="#[190]">touchgfx::LockFreeDMA_Queue::first()</a> from dma.o(i._ZN8touchgfx17LockFreeDMA_Queue5firstEv) referenced from dma.o(.constdata__ZTVN8touchgfx17LockFreeDMA_QueueE)
 <LI><a href="#[18d]">touchgfx::LockFreeDMA_Queue::isFull()</a> from dma.o(i._ZN8touchgfx17LockFreeDMA_Queue6isFullEv) referenced from dma.o(.constdata__ZTVN8touchgfx17LockFreeDMA_QueueE)
 <LI><a href="#[18c]">touchgfx::LockFreeDMA_Queue::isEmpty()</a> from dma.o(i._ZN8touchgfx17LockFreeDMA_Queue7isEmptyEv) referenced from dma.o(.constdata__ZTVN8touchgfx17LockFreeDMA_QueueE)
 <LI><a href="#[193]">touchgfx::TextAreaWithOneWildcard::~TextAreaWithOneWildcard()</a> from digitalclock.o(i._ZN8touchgfx23TextAreaWithOneWildcardD1Ev) referenced from digitalclock.o(.constdata__ZTVN8touchgfx23TextAreaWithOneWildcardE)
 <LI><a href="#[19f]">touchgfx::TextAreaWithTwoWildcards::~TextAreaWithTwoWildcards()</a> from screen1viewbase.o(i._ZN8touchgfx24TextAreaWithTwoWildcardsD1Ev) referenced from screen1viewbase.o(.constdata__ZTVN8touchgfx24TextAreaWithTwoWildcardsE)
 <LI><a href="#[167]">touchgfx::AbstractDirectionProgress::setDirection(touchgfx::AbstractDirectionProgress::DirectionType)</a> from abstractdirectionprogress.o(i._ZN8touchgfx25AbstractDirectionProgress12setDirectionENS0_13DirectionTypeE) referenced from imageprogress.o(.constdata__ZTVN8touchgfx13ImageProgressE)
 <LI><a href="#[167]">touchgfx::AbstractDirectionProgress::setDirection(touchgfx::AbstractDirectionProgress::DirectionType)</a> from abstractdirectionprogress.o(i._ZN8touchgfx25AbstractDirectionProgress12setDirectionENS0_13DirectionTypeE) referenced from abstractdirectionprogress.o(.constdata__ZTVN8touchgfx25AbstractDirectionProgressE)
 <LI><a href="#[161]">touchgfx::AbstractProgressIndicator::setBackground(const touchgfx::Bitmap&)</a> from abstractprogressindicator.o(i._ZN8touchgfx25AbstractProgressIndicator13setBackgroundERKNS_6BitmapE) referenced from imageprogress.o(.constdata__ZTVN8touchgfx13ImageProgressE)
 <LI><a href="#[161]">touchgfx::AbstractProgressIndicator::setBackground(const touchgfx::Bitmap&)</a> from abstractprogressindicator.o(i._ZN8touchgfx25AbstractProgressIndicator13setBackgroundERKNS_6BitmapE) referenced from abstractdirectionprogress.o(.constdata__ZTVN8touchgfx25AbstractDirectionProgressE)
 <LI><a href="#[161]">touchgfx::AbstractProgressIndicator::setBackground(const touchgfx::Bitmap&)</a> from abstractprogressindicator.o(i._ZN8touchgfx25AbstractProgressIndicator13setBackgroundERKNS_6BitmapE) referenced from abstractprogressindicator.o(.constdata__ZTVN8touchgfx25AbstractProgressIndicatorE)
 <LI><a href="#[160]">touchgfx::AbstractProgressIndicator::handleTickEvent()</a> from abstractprogressindicator.o(i._ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv) referenced from imageprogress.o(.constdata__ZTVN8touchgfx13ImageProgressE)
 <LI><a href="#[160]">touchgfx::AbstractProgressIndicator::handleTickEvent()</a> from abstractprogressindicator.o(i._ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv) referenced from abstractdirectionprogress.o(.constdata__ZTVN8touchgfx25AbstractDirectionProgressE)
 <LI><a href="#[160]">touchgfx::AbstractProgressIndicator::handleTickEvent()</a> from abstractprogressindicator.o(i._ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv) referenced from abstractprogressindicator.o(.constdata__ZTVN8touchgfx25AbstractProgressIndicatorE)
 <LI><a href="#[1a3]">touchgfx::AbstractProgressIndicator::setProgressIndicatorPosition(short, short, short, short)</a> from abstractprogressindicator.o(i._ZN8touchgfx25AbstractProgressIndicator28setProgressIndicatorPositionEssss) referenced from abstractdirectionprogress.o(.constdata__ZTVN8touchgfx25AbstractDirectionProgressE)
 <LI><a href="#[1a3]">touchgfx::AbstractProgressIndicator::setProgressIndicatorPosition(short, short, short, short)</a> from abstractprogressindicator.o(i._ZN8touchgfx25AbstractProgressIndicator28setProgressIndicatorPositionEssss) referenced from abstractprogressindicator.o(.constdata__ZTVN8touchgfx25AbstractProgressIndicatorE)
 <LI><a href="#[163]">touchgfx::AbstractProgressIndicator::setRange(int, int, unsigned short, unsigned short)</a> from abstractprogressindicator.o(i._ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt) referenced from imageprogress.o(.constdata__ZTVN8touchgfx13ImageProgressE)
 <LI><a href="#[163]">touchgfx::AbstractProgressIndicator::setRange(int, int, unsigned short, unsigned short)</a> from abstractprogressindicator.o(i._ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt) referenced from abstractdirectionprogress.o(.constdata__ZTVN8touchgfx25AbstractDirectionProgressE)
 <LI><a href="#[163]">touchgfx::AbstractProgressIndicator::setRange(int, int, unsigned short, unsigned short)</a> from abstractprogressindicator.o(i._ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt) referenced from abstractprogressindicator.o(.constdata__ZTVN8touchgfx25AbstractProgressIndicatorE)
 <LI><a href="#[1a4]">touchgfx::AbstractProgressIndicator::setValue(int)</a> from abstractprogressindicator.o(i._ZN8touchgfx25AbstractProgressIndicator8setValueEi) referenced from abstractdirectionprogress.o(.constdata__ZTVN8touchgfx25AbstractDirectionProgressE)
 <LI><a href="#[1a4]">touchgfx::AbstractProgressIndicator::setValue(int)</a> from abstractprogressindicator.o(i._ZN8touchgfx25AbstractProgressIndicator8setValueEi) referenced from abstractprogressindicator.o(.constdata__ZTVN8touchgfx25AbstractProgressIndicatorE)
 <LI><a href="#[e4]">touchgfx::HAL::FlushCache()</a> from hal.o(i._ZN8touchgfx3HAL10FlushCacheEv) referenced from touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
 <LI><a href="#[e4]">touchgfx::HAL::FlushCache()</a> from hal.o(i._ZN8touchgfx3HAL10FlushCacheEv) referenced from hal.o(.constdata__ZTVN8touchgfx3HALE)
 <LI><a href="#[1aa]">touchgfx::HAL::beginFrame()</a> from hal.o(i._ZN8touchgfx3HAL10beginFrameEv) referenced from hal.o(.constdata__ZTVN8touchgfx3HALE)
 <LI><a href="#[db]">touchgfx::HAL::getDMAType()</a> from hal.o(i._ZN8touchgfx3HAL10getDMATypeEv) referenced from touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
 <LI><a href="#[db]">touchgfx::HAL::getDMAType()</a> from hal.o(i._ZN8touchgfx3HAL10getDMATypeEv) referenced from hal.o(.constdata__ZTVN8touchgfx3HALE)
 <LI><a href="#[1a7]">touchgfx::HAL::initialize()</a> from hal.o(i._ZN8touchgfx3HAL10initializeEv) referenced from hal.o(.constdata__ZTVN8touchgfx3HALE)
 <LI><a href="#[c7]">touchgfx::HAL::getBlitCaps()</a> from hal.o(i._ZN8touchgfx3HAL11getBlitCapsEv) referenced from touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
 <LI><a href="#[c7]">touchgfx::HAL::getBlitCaps()</a> from hal.o(i._ZN8touchgfx3HAL11getBlitCapsEv) referenced from hal.o(.constdata__ZTVN8touchgfx3HALE)
 <LI><a href="#[cc]">touchgfx::HAL::blitCopyGlyph(const unsigned char*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, touchgfx::colortype, unsigned char, touchgfx::BlitOperations, bool)</a> from hal.o(i._ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb) referenced from touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
 <LI><a href="#[cc]">touchgfx::HAL::blitCopyGlyph(const unsigned char*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, touchgfx::colortype, unsigned char, touchgfx::BlitOperations, bool)</a> from hal.o(i._ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb) referenced from hal.o(.constdata__ZTVN8touchgfx3HALE)
 <LI><a href="#[e3]">touchgfx::HAL::InvalidateCache()</a> from hal.o(i._ZN8touchgfx3HAL15InvalidateCacheEv) referenced from touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
 <LI><a href="#[e3]">touchgfx::HAL::InvalidateCache()</a> from hal.o(i._ZN8touchgfx3HAL15InvalidateCacheEv) referenced from hal.o(.constdata__ZTVN8touchgfx3HALE)
 <LI><a href="#[d1]">touchgfx::HAL::backPorchExited()</a> from hal.o(i._ZN8touchgfx3HAL15backPorchExitedEv) referenced from touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
 <LI><a href="#[d1]">touchgfx::HAL::backPorchExited()</a> from hal.o(i._ZN8touchgfx3HAL15backPorchExitedEv) referenced from hal.o(.constdata__ZTVN8touchgfx3HALE)
 <LI><a href="#[c3]">touchgfx::HAL::lockFrameBuffer()</a> from hal.o(i._ZN8touchgfx3HAL15lockFrameBufferEv) referenced from touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
 <LI><a href="#[c3]">touchgfx::HAL::lockFrameBuffer()</a> from hal.o(i._ZN8touchgfx3HAL15lockFrameBufferEv) referenced from hal.o(.constdata__ZTVN8touchgfx3HALE)
 <LI><a href="#[cb]">touchgfx::HAL::blitCopyARGB8888(const unsigned short*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, bool)</a> from hal.o(i._ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb) referenced from touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
 <LI><a href="#[cb]">touchgfx::HAL::blitCopyARGB8888(const unsigned short*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, bool)</a> from hal.o(i._ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb) referenced from hal.o(.constdata__ZTVN8touchgfx3HALE)
 <LI><a href="#[1a8]">touchgfx::HAL::flushFrameBuffer(const touchgfx::Rect&)</a> from hal.o(i._ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE) referenced from hal.o(.constdata__ZTVN8touchgfx3HALE)
 <LI><a href="#[c1]">touchgfx::HAL::allowDMATransfers()</a> from hal.o(i._ZN8touchgfx3HAL17allowDMATransfersEv) referenced from touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
 <LI><a href="#[c1]">touchgfx::HAL::allowDMATransfers()</a> from hal.o(i._ZN8touchgfx3HAL17allowDMATransfersEv) referenced from hal.o(.constdata__ZTVN8touchgfx3HALE)
 <LI><a href="#[da]">touchgfx::HAL::getTFTCurrentLine()</a> from hal.o(i._ZN8touchgfx3HAL17getTFTCurrentLineEv) referenced from touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
 <LI><a href="#[da]">touchgfx::HAL::getTFTCurrentLine()</a> from hal.o(i._ZN8touchgfx3HAL17getTFTCurrentLineEv) referenced from hal.o(.constdata__ZTVN8touchgfx3HALE)
 <LI><a href="#[c4]">touchgfx::HAL::unlockFrameBuffer()</a> from hal.o(i._ZN8touchgfx3HAL17unlockFrameBufferEv) referenced from touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
 <LI><a href="#[c4]">touchgfx::HAL::unlockFrameBuffer()</a> from hal.o(i._ZN8touchgfx3HAL17unlockFrameBufferEv) referenced from hal.o(.constdata__ZTVN8touchgfx3HALE)
 <LI><a href="#[d7]">touchgfx::HAL::setAnimationStorage(void*)</a> from hal.o(i._ZN8touchgfx3HAL19setAnimationStorageEPv) referenced from touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
 <LI><a href="#[d7]">touchgfx::HAL::setAnimationStorage(void*)</a> from hal.o(i._ZN8touchgfx3HAL19setAnimationStorageEPv) referenced from hal.o(.constdata__ZTVN8touchgfx3HALE)
 <LI><a href="#[d0]">touchgfx::HAL::copyFBRegionToMemory(touchgfx::Rect, unsigned short*, unsigned)</a> from hal.o(i._ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtj) referenced from touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
 <LI><a href="#[d0]">touchgfx::HAL::copyFBRegionToMemory(touchgfx::Rect, unsigned short*, unsigned)</a> from hal.o(i._ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtj) referenced from hal.o(.constdata__ZTVN8touchgfx3HALE)
 <LI><a href="#[cf]">touchgfx::HAL::registerEventListener(touchgfx::UIEventListener&)</a> from hal.o(i._ZN8touchgfx3HAL21registerEventListenerERNS_15UIEventListenerE) referenced from touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
 <LI><a href="#[cf]">touchgfx::HAL::registerEventListener(touchgfx::UIEventListener&)</a> from hal.o(i._ZN8touchgfx3HAL21registerEventListenerERNS_15UIEventListenerE) referenced from hal.o(.constdata__ZTVN8touchgfx3HALE)
 <LI><a href="#[bd]">touchgfx::HAL::setDisplayOrientation(touchgfx::DisplayOrientation)</a> from hal.o(i._ZN8touchgfx3HAL21setDisplayOrientationENS_18DisplayOrientationE) referenced from touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
 <LI><a href="#[bd]">touchgfx::HAL::setDisplayOrientation(touchgfx::DisplayOrientation)</a> from hal.o(i._ZN8touchgfx3HAL21setDisplayOrientationENS_18DisplayOrientationE) referenced from hal.o(.constdata__ZTVN8touchgfx3HALE)
 <LI><a href="#[d8]">touchgfx::HAL::configurePartialFrameBuffer(unsigned short, unsigned short, unsigned short, unsigned short)</a> from hal.o(i._ZN8touchgfx3HAL27configurePartialFrameBufferEtttt) referenced from touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
 <LI><a href="#[d8]">touchgfx::HAL::configurePartialFrameBuffer(unsigned short, unsigned short, unsigned short, unsigned short)</a> from hal.o(i._ZN8touchgfx3HAL27configurePartialFrameBufferEtttt) referenced from hal.o(.constdata__ZTVN8touchgfx3HALE)
 <LI><a href="#[d6]">touchgfx::HAL::setFrameBufferStartAddresses(void*, void*, void*)</a> from hal.o(i._ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_) referenced from touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
 <LI><a href="#[d6]">touchgfx::HAL::setFrameBufferStartAddresses(void*, void*, void*)</a> from hal.o(i._ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_) referenced from hal.o(.constdata__ZTVN8touchgfx3HALE)
 <LI><a href="#[e2]">touchgfx::HAL::performDisplayOrientationChange()</a> from hal.o(i._ZN8touchgfx3HAL31performDisplayOrientationChangeEv) referenced from touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
 <LI><a href="#[e2]">touchgfx::HAL::performDisplayOrientationChange()</a> from hal.o(i._ZN8touchgfx3HAL31performDisplayOrientationChangeEv) referenced from hal.o(.constdata__ZTVN8touchgfx3HALE)
 <LI><a href="#[dc]">touchgfx::HAL::tick()</a> from hal.o(i._ZN8touchgfx3HAL4tickEv) referenced from touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
 <LI><a href="#[dc]">touchgfx::HAL::tick()</a> from hal.o(i._ZN8touchgfx3HAL4tickEv) referenced from hal.o(.constdata__ZTVN8touchgfx3HALE)
 <LI><a href="#[e0]">touchgfx::HAL::touch(int, int)</a> from hal.o(i._ZN8touchgfx3HAL5touchEii) referenced from touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
 <LI><a href="#[e0]">touchgfx::HAL::touch(int, int)</a> from hal.o(i._ZN8touchgfx3HAL5touchEii) referenced from hal.o(.constdata__ZTVN8touchgfx3HALE)
 <LI><a href="#[e1]">touchgfx::HAL::noTouch()</a> from hal.o(i._ZN8touchgfx3HAL7noTouchEv) referenced from touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
 <LI><a href="#[e1]">touchgfx::HAL::noTouch()</a> from hal.o(i._ZN8touchgfx3HAL7noTouchEv) referenced from hal.o(.constdata__ZTVN8touchgfx3HALE)
 <LI><a href="#[c8]">touchgfx::HAL::blitCopy(const unsigned short*, const unsigned char*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, bool, unsigned short, touchgfx::Bitmap::BitmapFormat, touchgfx::Bitmap::BitmapFormat, bool)</a> from hal.o(i._ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b) referenced from touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
 <LI><a href="#[c8]">touchgfx::HAL::blitCopy(const unsigned short*, const unsigned char*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, bool, unsigned short, touchgfx::Bitmap::BitmapFormat, touchgfx::Bitmap::BitmapFormat, bool)</a> from hal.o(i._ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b) referenced from hal.o(.constdata__ZTVN8touchgfx3HALE)
 <LI><a href="#[ca]">touchgfx::HAL::blitCopy(const unsigned short*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, bool, bool)</a> from hal.o(i._ZN8touchgfx3HAL8blitCopyEPKtttttthbb) referenced from touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
 <LI><a href="#[ca]">touchgfx::HAL::blitCopy(const unsigned short*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, bool, bool)</a> from hal.o(i._ZN8touchgfx3HAL8blitCopyEPKtttttthbb) referenced from hal.o(.constdata__ZTVN8touchgfx3HALE)
 <LI><a href="#[c9]">touchgfx::HAL::blitCopy(const unsigned short*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, bool, unsigned short, touchgfx::Bitmap::BitmapFormat, touchgfx::Bitmap::BitmapFormat, bool)</a> from hal.o(i._ZN8touchgfx3HAL8blitCopyEPKtttttthbtNS_6Bitmap12BitmapFormatES4_b) referenced from touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
 <LI><a href="#[c9]">touchgfx::HAL::blitCopy(const unsigned short*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, bool, unsigned short, touchgfx::Bitmap::BitmapFormat, touchgfx::Bitmap::BitmapFormat, bool)</a> from hal.o(i._ZN8touchgfx3HAL8blitCopyEPKtttttthbtNS_6Bitmap12BitmapFormatES4_b) referenced from hal.o(.constdata__ZTVN8touchgfx3HALE)
 <LI><a href="#[ce]">touchgfx::HAL::blitFill(touchgfx::colortype, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, bool)</a> from hal.o(i._ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb) referenced from touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
 <LI><a href="#[ce]">touchgfx::HAL::blitFill(touchgfx::colortype, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, bool)</a> from hal.o(i._ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb) referenced from hal.o(.constdata__ZTVN8touchgfx3HALE)
 <LI><a href="#[cd]">touchgfx::HAL::blitFill(touchgfx::colortype, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, unsigned short, touchgfx::Bitmap::BitmapFormat, bool)</a> from hal.o(i._ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb) referenced from touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
 <LI><a href="#[cd]">touchgfx::HAL::blitFill(touchgfx::colortype, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, unsigned short, touchgfx::Bitmap::BitmapFormat, bool)</a> from hal.o(i._ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb) referenced from hal.o(.constdata__ZTVN8touchgfx3HALE)
 <LI><a href="#[1ab]">touchgfx::HAL::endFrame()</a> from hal.o(i._ZN8touchgfx3HAL8endFrameEv) referenced from hal.o(.constdata__ZTVN8touchgfx3HALE)
 <LI><a href="#[c2]">touchgfx::HAL::flushDMA()</a> from hal.o(i._ZN8touchgfx3HAL8flushDMAEv) referenced from touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
 <LI><a href="#[c2]">touchgfx::HAL::flushDMA()</a> from hal.o(i._ZN8touchgfx3HAL8flushDMAEv) referenced from hal.o(.constdata__ZTVN8touchgfx3HALE)
 <LI><a href="#[1a9]">touchgfx::HAL::blockCopy(void*, const void*, unsigned)</a> from hal.o(i._ZN8touchgfx3HAL9blockCopyEPvPKvj) referenced from hal.o(.constdata__ZTVN8touchgfx3HALE)
 <LI><a href="#[d9]">touchgfx::HAL::taskDelay(unsigned short)</a> from hal.o(i._ZN8touchgfx3HAL9taskDelayEt) referenced from touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
 <LI><a href="#[d9]">touchgfx::HAL::taskDelay(unsigned short)</a> from hal.o(i._ZN8touchgfx3HAL9taskDelayEt) referenced from hal.o(.constdata__ZTVN8touchgfx3HALE)
 <LI><a href="#[bf]">touchgfx::HAL::taskEntry()</a> from hal.o(i._ZN8touchgfx3HAL9taskEntryEv) referenced from touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
 <LI><a href="#[bf]">touchgfx::HAL::taskEntry()</a> from hal.o(i._ZN8touchgfx3HAL9taskEntryEv) referenced from hal.o(.constdata__ZTVN8touchgfx3HALE)
 <LI><a href="#[1e5]">touchgfx::LCD::drawTextureMapQuad(const touchgfx::DrawingSurface&, const touchgfx::Point3D*, const touchgfx::TextureSurface&, const touchgfx::Rect&, const touchgfx::Rect&, unsigned short, unsigned char, unsigned short)</a> from lcd.o(i._ZN8touchgfx3LCD18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bppE)
 <LI><a href="#[1e7]">touchgfx::LCD::drawTextureMapScanLine(const touchgfx::DrawingSurface&, const touchgfx::Gradients&, const touchgfx::Edge*, const touchgfx::Edge*, const touchgfx::TextureSurface&, const touchgfx::Rect&, const touchgfx::Rect&, unsigned short, unsigned char, unsigned short)</a> from lcd.o(i._ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bppE)
 <LI><a href="#[1e4]">touchgfx::LCD::drawTextureMapTriangle(const touchgfx::DrawingSurface&, const touchgfx::Point3D*, const touchgfx::TextureSurface&, const touchgfx::Rect&, const touchgfx::Rect&, unsigned short, unsigned char, unsigned short)</a> from lcd.o(i._ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bppE)
 <LI><a href="#[83]">touchgfx::Rect::Rect()</a> from application.o(i._ZN8touchgfx4RectC1Ev) referenced from application.o(i._ZN8touchgfx11Application15drawCachedAreasEv)
 <LI><a href="#[83]">touchgfx::Rect::Rect()</a> from application.o(i._ZN8touchgfx4RectC1Ev) referenced from application.o(i._ZN8touchgfx11ApplicationC1Ev)
 <LI><a href="#[171]">touchgfx::Image::setBitmap(const touchgfx::Bitmap&)</a> from image.o(i._ZN8touchgfx5Image9setBitmapERKNS_6BitmapE) referenced from scalableimage.o(.constdata__ZTVN8touchgfx13ScalableImageE)
 <LI><a href="#[171]">touchgfx::Image::setBitmap(const touchgfx::Bitmap&)</a> from image.o(i._ZN8touchgfx5Image9setBitmapERKNS_6BitmapE) referenced from image.o(.constdata__ZTVN8touchgfx5ImageE)
 <LI><a href="#[82]">touchgfx::BlitOp::BlitOp()</a> from stm32dma.o(i._ZN8touchgfx6BlitOpC1Ev) referenced from stm32dma.o(i._ZN8STM32DMAC1Ev)
 <LI><a href="#[1b1]">touchgfx::Canvas::lineTo(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5)</a> from canvas.o(i._ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_) referenced from canvas.o(.constdata__ZTVN8touchgfx6CanvasE)
 <LI><a href="#[84]">touchgfx::Point4::Point4()</a> from texturemapper.o(i._ZN8touchgfx6Point4C1Ev) referenced from texturemapper.o(i._ZN8touchgfx13TextureMapper19applyTransformationEv)
 <LI><a href="#[1b3]">touchgfx::Screen::setupScreen()</a> from screen.o(i._ZN8touchgfx6Screen11setupScreenEv) referenced from screen.o(.constdata__ZTVN8touchgfx6ScreenE)
 <LI><a href="#[bc]">touchgfx::Screen::handleKeyEvent(unsigned char)</a> from screen.o(i._ZN8touchgfx6Screen14handleKeyEventEh) referenced from screen1view.o(.constdata__ZTV11Screen1View)
 <LI><a href="#[bc]">touchgfx::Screen::handleKeyEvent(unsigned char)</a> from screen.o(i._ZN8touchgfx6Screen14handleKeyEventEh) referenced from screen1viewbase.o(.constdata__ZTV15Screen1ViewBase)
 <LI><a href="#[bc]">touchgfx::Screen::handleKeyEvent(unsigned char)</a> from screen.o(i._ZN8touchgfx6Screen14handleKeyEventEh) referenced from screen.o(.constdata__ZTVN8touchgfx6ScreenE)
 <LI><a href="#[e7]">touchgfx::Screen::tearDownScreen()</a> from screen.o(i._ZN8touchgfx6Screen14tearDownScreenEv) referenced from screen1viewbase.o(.constdata__ZTV15Screen1ViewBase)
 <LI><a href="#[e7]">touchgfx::Screen::tearDownScreen()</a> from screen.o(i._ZN8touchgfx6Screen14tearDownScreenEv) referenced from screen.o(.constdata__ZTVN8touchgfx6ScreenE)
 <LI><a href="#[b6]">touchgfx::Screen::afterTransition()</a> from screen.o(i._ZN8touchgfx6Screen15afterTransitionEv) referenced from screen1view.o(.constdata__ZTV11Screen1View)
 <LI><a href="#[b6]">touchgfx::Screen::afterTransition()</a> from screen.o(i._ZN8touchgfx6Screen15afterTransitionEv) referenced from screen1viewbase.o(.constdata__ZTV15Screen1ViewBase)
 <LI><a href="#[b6]">touchgfx::Screen::afterTransition()</a> from screen.o(i._ZN8touchgfx6Screen15afterTransitionEv) referenced from screen.o(.constdata__ZTVN8touchgfx6ScreenE)
 <LI><a href="#[b9]">touchgfx::Screen::handleDragEvent(const touchgfx::DragEvent&)</a> from screen.o(i._ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE) referenced from screen1view.o(.constdata__ZTV11Screen1View)
 <LI><a href="#[b9]">touchgfx::Screen::handleDragEvent(const touchgfx::DragEvent&)</a> from screen.o(i._ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE) referenced from screen1viewbase.o(.constdata__ZTV15Screen1ViewBase)
 <LI><a href="#[b9]">touchgfx::Screen::handleDragEvent(const touchgfx::DragEvent&)</a> from screen.o(i._ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE) referenced from screen.o(.constdata__ZTVN8touchgfx6ScreenE)
 <LI><a href="#[e8]">touchgfx::Screen::handleTickEvent()</a> from screen.o(i._ZN8touchgfx6Screen15handleTickEventEv) referenced from screen1viewbase.o(.constdata__ZTV15Screen1ViewBase)
 <LI><a href="#[e8]">touchgfx::Screen::handleTickEvent()</a> from screen.o(i._ZN8touchgfx6Screen15handleTickEventEv) referenced from screen.o(.constdata__ZTVN8touchgfx6ScreenE)
 <LI><a href="#[b8]">touchgfx::Screen::handleClickEvent(const touchgfx::ClickEvent&)</a> from screen.o(i._ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE) referenced from screen1view.o(.constdata__ZTV11Screen1View)
 <LI><a href="#[b8]">touchgfx::Screen::handleClickEvent(const touchgfx::ClickEvent&)</a> from screen.o(i._ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE) referenced from screen1viewbase.o(.constdata__ZTV15Screen1ViewBase)
 <LI><a href="#[b8]">touchgfx::Screen::handleClickEvent(const touchgfx::ClickEvent&)</a> from screen.o(i._ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE) referenced from screen.o(.constdata__ZTVN8touchgfx6ScreenE)
 <LI><a href="#[ba]">touchgfx::Screen::handleGestureEvent(const touchgfx::GestureEvent&)</a> from screen.o(i._ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE) referenced from screen1view.o(.constdata__ZTV11Screen1View)
 <LI><a href="#[ba]">touchgfx::Screen::handleGestureEvent(const touchgfx::GestureEvent&)</a> from screen.o(i._ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE) referenced from screen1viewbase.o(.constdata__ZTV15Screen1ViewBase)
 <LI><a href="#[ba]">touchgfx::Screen::handleGestureEvent(const touchgfx::GestureEvent&)</a> from screen.o(i._ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE) referenced from screen.o(.constdata__ZTVN8touchgfx6ScreenE)
 <LI><a href="#[b4]">touchgfx::Screen::draw(touchgfx::Rect&)</a> from screen.o(i._ZN8touchgfx6Screen4drawERNS_4RectE) referenced from screen1view.o(.constdata__ZTV11Screen1View)
 <LI><a href="#[b4]">touchgfx::Screen::draw(touchgfx::Rect&)</a> from screen.o(i._ZN8touchgfx6Screen4drawERNS_4RectE) referenced from screen1viewbase.o(.constdata__ZTV15Screen1ViewBase)
 <LI><a href="#[b4]">touchgfx::Screen::draw(touchgfx::Rect&)</a> from screen.o(i._ZN8touchgfx6Screen4drawERNS_4RectE) referenced from screen.o(.constdata__ZTVN8touchgfx6ScreenE)
 <LI><a href="#[1b2]">touchgfx::Screen::~Screen()</a> from screen.o(i._ZN8touchgfx6ScreenD1Ev) referenced from screen.o(.constdata__ZTVN8touchgfx6ScreenE)
 <LI><a href="#[10e]">touchgfx::Widget::getLastChild(short, short, touchgfx::Drawable**)</a> from box.o(i._ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE) referenced from tiledimage.o(.constdata__ZTVN8touchgfx10TiledImageE)
 <LI><a href="#[10e]">touchgfx::Widget::getLastChild(short, short, touchgfx::Drawable**)</a> from box.o(i._ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE) referenced from canvaswidget.o(.constdata__ZTVN8touchgfx12CanvasWidgetE)
 <LI><a href="#[10e]">touchgfx::Widget::getLastChild(short, short, touchgfx::Drawable**)</a> from box.o(i._ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE) referenced from scalableimage.o(.constdata__ZTVN8touchgfx13ScalableImageE)
 <LI><a href="#[10e]">touchgfx::Widget::getLastChild(short, short, touchgfx::Drawable**)</a> from box.o(i._ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE) referenced from texturemapper.o(.constdata__ZTVN8touchgfx13TextureMapperE)
 <LI><a href="#[10e]">touchgfx::Widget::getLastChild(short, short, touchgfx::Drawable**)</a> from box.o(i._ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE) referenced from snapshotwidget.o(.constdata__ZTVN8touchgfx14SnapshotWidgetE)
 <LI><a href="#[10e]">touchgfx::Widget::getLastChild(short, short, touchgfx::Drawable**)</a> from box.o(i._ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE) referenced from graphelements.o(.constdata__ZTVN8touchgfx16GraphElementLineE)
 <LI><a href="#[10e]">touchgfx::Widget::getLastChild(short, short, touchgfx::Drawable**)</a> from box.o(i._ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE) referenced from digitalclock.o(.constdata__ZTVN8touchgfx23TextAreaWithOneWildcardE)
 <LI><a href="#[10e]">touchgfx::Widget::getLastChild(short, short, touchgfx::Drawable**)</a> from box.o(i._ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE) referenced from screen1viewbase.o(.constdata__ZTVN8touchgfx24TextAreaWithTwoWildcardsE)
 <LI><a href="#[10e]">touchgfx::Widget::getLastChild(short, short, touchgfx::Drawable**)</a> from box.o(i._ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE) referenced from textareawithwildcard.o(.constdata__ZTVN8touchgfx24TextAreaWithWildcardBaseE)
 <LI><a href="#[10e]">touchgfx::Widget::getLastChild(short, short, touchgfx::Drawable**)</a> from box.o(i._ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE) referenced from box.o(.constdata__ZTVN8touchgfx3BoxE)
 <LI><a href="#[10e]">touchgfx::Widget::getLastChild(short, short, touchgfx::Drawable**)</a> from box.o(i._ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE) referenced from image.o(.constdata__ZTVN8touchgfx5ImageE)
 <LI><a href="#[10e]">touchgfx::Widget::getLastChild(short, short, touchgfx::Drawable**)</a> from box.o(i._ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE) referenced from screen1viewbase.o(.constdata__ZTVN8touchgfx6WidgetE)
 <LI><a href="#[10e]">touchgfx::Widget::getLastChild(short, short, touchgfx::Drawable**)</a> from box.o(i._ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE) referenced from textarea.o(.constdata__ZTVN8touchgfx8TextAreaE)
 <LI><a href="#[1b4]">touchgfx::Outline::~Outline()</a> from outline.o(i._ZN8touchgfx7OutlineD1Ev) referenced from outline.o(.constdata__ZTVN8touchgfx7OutlineE)
 <LI><a href="#[1b5]">touchgfx::Callback&lang;FrontendApplicationBase, void, void, void&rang;::execute()</a> from frontendapplicationbase.o(t._ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv) referenced from frontendapplicationbase.o(.constdata__ZTVN8touchgfx8CallbackI23FrontendApplicationBasevvvEE)
 <LI><a href="#[119]">touchgfx::Drawable::setupDrawChain(const touchgfx::Rect&, touchgfx::Drawable**)</a> from box.o(i._ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_) referenced from tiledimage.o(.constdata__ZTVN8touchgfx10TiledImageE)
 <LI><a href="#[119]">touchgfx::Drawable::setupDrawChain(const touchgfx::Rect&, touchgfx::Drawable**)</a> from box.o(i._ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_) referenced from canvaswidget.o(.constdata__ZTVN8touchgfx12CanvasWidgetE)
 <LI><a href="#[119]">touchgfx::Drawable::setupDrawChain(const touchgfx::Rect&, touchgfx::Drawable**)</a> from box.o(i._ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_) referenced from scalableimage.o(.constdata__ZTVN8touchgfx13ScalableImageE)
 <LI><a href="#[119]">touchgfx::Drawable::setupDrawChain(const touchgfx::Rect&, touchgfx::Drawable**)</a> from box.o(i._ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_) referenced from texturemapper.o(.constdata__ZTVN8touchgfx13TextureMapperE)
 <LI><a href="#[119]">touchgfx::Drawable::setupDrawChain(const touchgfx::Rect&, touchgfx::Drawable**)</a> from box.o(i._ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_) referenced from snapshotwidget.o(.constdata__ZTVN8touchgfx14SnapshotWidgetE)
 <LI><a href="#[119]">touchgfx::Drawable::setupDrawChain(const touchgfx::Rect&, touchgfx::Drawable**)</a> from box.o(i._ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_) referenced from graphelements.o(.constdata__ZTVN8touchgfx16GraphElementLineE)
 <LI><a href="#[119]">touchgfx::Drawable::setupDrawChain(const touchgfx::Rect&, touchgfx::Drawable**)</a> from box.o(i._ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_) referenced from digitalclock.o(.constdata__ZTVN8touchgfx23TextAreaWithOneWildcardE)
 <LI><a href="#[119]">touchgfx::Drawable::setupDrawChain(const touchgfx::Rect&, touchgfx::Drawable**)</a> from box.o(i._ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_) referenced from screen1viewbase.o(.constdata__ZTVN8touchgfx24TextAreaWithTwoWildcardsE)
 <LI><a href="#[119]">touchgfx::Drawable::setupDrawChain(const touchgfx::Rect&, touchgfx::Drawable**)</a> from box.o(i._ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_) referenced from textareawithwildcard.o(.constdata__ZTVN8touchgfx24TextAreaWithWildcardBaseE)
 <LI><a href="#[119]">touchgfx::Drawable::setupDrawChain(const touchgfx::Rect&, touchgfx::Drawable**)</a> from box.o(i._ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_) referenced from box.o(.constdata__ZTVN8touchgfx3BoxE)
 <LI><a href="#[119]">touchgfx::Drawable::setupDrawChain(const touchgfx::Rect&, touchgfx::Drawable**)</a> from box.o(i._ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_) referenced from image.o(.constdata__ZTVN8touchgfx5ImageE)
 <LI><a href="#[119]">touchgfx::Drawable::setupDrawChain(const touchgfx::Rect&, touchgfx::Drawable**)</a> from box.o(i._ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_) referenced from screen1viewbase.o(.constdata__ZTVN8touchgfx6WidgetE)
 <LI><a href="#[119]">touchgfx::Drawable::setupDrawChain(const touchgfx::Rect&, touchgfx::Drawable**)</a> from box.o(i._ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_) referenced from drawable.o(.constdata__ZTVN8touchgfx8DrawableE)
 <LI><a href="#[119]">touchgfx::Drawable::setupDrawChain(const touchgfx::Rect&, touchgfx::Drawable**)</a> from box.o(i._ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_) referenced from textarea.o(.constdata__ZTVN8touchgfx8TextAreaE)
 <LI><a href="#[117]">touchgfx::Drawable::handleDragEvent(const touchgfx::DragEvent&)</a> from abstractclock.o(i._ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE) referenced from tiledimage.o(.constdata__ZTVN8touchgfx10TiledImageE)
 <LI><a href="#[117]">touchgfx::Drawable::handleDragEvent(const touchgfx::DragEvent&)</a> from abstractclock.o(i._ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE) referenced from canvaswidget.o(.constdata__ZTVN8touchgfx12CanvasWidgetE)
 <LI><a href="#[117]">touchgfx::Drawable::handleDragEvent(const touchgfx::DragEvent&)</a> from abstractclock.o(i._ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE) referenced from digitalclock.o(.constdata__ZTVN8touchgfx12DigitalClockE)
 <LI><a href="#[117]">touchgfx::Drawable::handleDragEvent(const touchgfx::DragEvent&)</a> from abstractclock.o(i._ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE) referenced from abstractclock.o(.constdata__ZTVN8touchgfx13AbstractClockE)
 <LI><a href="#[117]">touchgfx::Drawable::handleDragEvent(const touchgfx::DragEvent&)</a> from abstractclock.o(i._ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE) referenced from imageprogress.o(.constdata__ZTVN8touchgfx13ImageProgressE)
 <LI><a href="#[117]">touchgfx::Drawable::handleDragEvent(const touchgfx::DragEvent&)</a> from abstractclock.o(i._ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE) referenced from scalableimage.o(.constdata__ZTVN8touchgfx13ScalableImageE)
 <LI><a href="#[117]">touchgfx::Drawable::handleDragEvent(const touchgfx::DragEvent&)</a> from abstractclock.o(i._ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE) referenced from texturemapper.o(.constdata__ZTVN8touchgfx13TextureMapperE)
 <LI><a href="#[117]">touchgfx::Drawable::handleDragEvent(const touchgfx::DragEvent&)</a> from abstractclock.o(i._ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE) referenced from snapshotwidget.o(.constdata__ZTVN8touchgfx14SnapshotWidgetE)
 <LI><a href="#[117]">touchgfx::Drawable::handleDragEvent(const touchgfx::DragEvent&)</a> from abstractclock.o(i._ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE) referenced from graphelements.o(.constdata__ZTVN8touchgfx16GraphElementLineE)
 <LI><a href="#[117]">touchgfx::Drawable::handleDragEvent(const touchgfx::DragEvent&)</a> from abstractclock.o(i._ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE) referenced from digitalclock.o(.constdata__ZTVN8touchgfx23TextAreaWithOneWildcardE)
 <LI><a href="#[117]">touchgfx::Drawable::handleDragEvent(const touchgfx::DragEvent&)</a> from abstractclock.o(i._ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE) referenced from screen1viewbase.o(.constdata__ZTVN8touchgfx24TextAreaWithTwoWildcardsE)
 <LI><a href="#[117]">touchgfx::Drawable::handleDragEvent(const touchgfx::DragEvent&)</a> from abstractclock.o(i._ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE) referenced from textareawithwildcard.o(.constdata__ZTVN8touchgfx24TextAreaWithWildcardBaseE)
 <LI><a href="#[117]">touchgfx::Drawable::handleDragEvent(const touchgfx::DragEvent&)</a> from abstractclock.o(i._ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE) referenced from abstractdirectionprogress.o(.constdata__ZTVN8touchgfx25AbstractDirectionProgressE)
 <LI><a href="#[117]">touchgfx::Drawable::handleDragEvent(const touchgfx::DragEvent&)</a> from abstractclock.o(i._ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE) referenced from abstractprogressindicator.o(.constdata__ZTVN8touchgfx25AbstractProgressIndicatorE)
 <LI><a href="#[117]">touchgfx::Drawable::handleDragEvent(const touchgfx::DragEvent&)</a> from abstractclock.o(i._ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE) referenced from box.o(.constdata__ZTVN8touchgfx3BoxE)
 <LI><a href="#[117]">touchgfx::Drawable::handleDragEvent(const touchgfx::DragEvent&)</a> from abstractclock.o(i._ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE) referenced from image.o(.constdata__ZTVN8touchgfx5ImageE)
 <LI><a href="#[117]">touchgfx::Drawable::handleDragEvent(const touchgfx::DragEvent&)</a> from abstractclock.o(i._ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE) referenced from screen1viewbase.o(.constdata__ZTVN8touchgfx6WidgetE)
 <LI><a href="#[117]">touchgfx::Drawable::handleDragEvent(const touchgfx::DragEvent&)</a> from abstractclock.o(i._ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE) referenced from drawable.o(.constdata__ZTVN8touchgfx8DrawableE)
 <LI><a href="#[117]">touchgfx::Drawable::handleDragEvent(const touchgfx::DragEvent&)</a> from abstractclock.o(i._ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE) referenced from textarea.o(.constdata__ZTVN8touchgfx8TextAreaE)
 <LI><a href="#[117]">touchgfx::Drawable::handleDragEvent(const touchgfx::DragEvent&)</a> from abstractclock.o(i._ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE) referenced from container.o(.constdata__ZTVN8touchgfx9ContainerE)
 <LI><a href="#[118]">touchgfx::Drawable::handleTickEvent()</a> from abstractclock.o(i._ZN8touchgfx8Drawable15handleTickEventEv) referenced from tiledimage.o(.constdata__ZTVN8touchgfx10TiledImageE)
 <LI><a href="#[118]">touchgfx::Drawable::handleTickEvent()</a> from abstractclock.o(i._ZN8touchgfx8Drawable15handleTickEventEv) referenced from screen1viewbase.o(.constdata__ZTVN8touchgfx11GraphScrollILs150EEE)
 <LI><a href="#[118]">touchgfx::Drawable::handleTickEvent()</a> from abstractclock.o(i._ZN8touchgfx8Drawable15handleTickEventEv) referenced from canvaswidget.o(.constdata__ZTVN8touchgfx12CanvasWidgetE)
 <LI><a href="#[118]">touchgfx::Drawable::handleTickEvent()</a> from abstractclock.o(i._ZN8touchgfx8Drawable15handleTickEventEv) referenced from digitalclock.o(.constdata__ZTVN8touchgfx12DigitalClockE)
 <LI><a href="#[118]">touchgfx::Drawable::handleTickEvent()</a> from abstractclock.o(i._ZN8touchgfx8Drawable15handleTickEventEv) referenced from abstractclock.o(.constdata__ZTVN8touchgfx13AbstractClockE)
 <LI><a href="#[118]">touchgfx::Drawable::handleTickEvent()</a> from abstractclock.o(i._ZN8touchgfx8Drawable15handleTickEventEv) referenced from scalableimage.o(.constdata__ZTVN8touchgfx13ScalableImageE)
 <LI><a href="#[118]">touchgfx::Drawable::handleTickEvent()</a> from abstractclock.o(i._ZN8touchgfx8Drawable15handleTickEventEv) referenced from texturemapper.o(.constdata__ZTVN8touchgfx13TextureMapperE)
 <LI><a href="#[118]">touchgfx::Drawable::handleTickEvent()</a> from abstractclock.o(i._ZN8touchgfx8Drawable15handleTickEventEv) referenced from snapshotwidget.o(.constdata__ZTVN8touchgfx14SnapshotWidgetE)
 <LI><a href="#[118]">touchgfx::Drawable::handleTickEvent()</a> from abstractclock.o(i._ZN8touchgfx8Drawable15handleTickEventEv) referenced from abstractdatagraph.o(.constdata__ZTVN8touchgfx16DynamicDataGraphE)
 <LI><a href="#[118]">touchgfx::Drawable::handleTickEvent()</a> from abstractclock.o(i._ZN8touchgfx8Drawable15handleTickEventEv) referenced from graphelements.o(.constdata__ZTVN8touchgfx16GraphElementLineE)
 <LI><a href="#[118]">touchgfx::Drawable::handleTickEvent()</a> from abstractclock.o(i._ZN8touchgfx8Drawable15handleTickEventEv) referenced from abstractdatagraph.o(.constdata__ZTVN8touchgfx17AbstractDataGraphE)
 <LI><a href="#[118]">touchgfx::Drawable::handleTickEvent()</a> from abstractclock.o(i._ZN8touchgfx8Drawable15handleTickEventEv) referenced from digitalclock.o(.constdata__ZTVN8touchgfx23TextAreaWithOneWildcardE)
 <LI><a href="#[118]">touchgfx::Drawable::handleTickEvent()</a> from abstractclock.o(i._ZN8touchgfx8Drawable15handleTickEventEv) referenced from screen1viewbase.o(.constdata__ZTVN8touchgfx24TextAreaWithTwoWildcardsE)
 <LI><a href="#[118]">touchgfx::Drawable::handleTickEvent()</a> from abstractclock.o(i._ZN8touchgfx8Drawable15handleTickEventEv) referenced from textareawithwildcard.o(.constdata__ZTVN8touchgfx24TextAreaWithWildcardBaseE)
 <LI><a href="#[118]">touchgfx::Drawable::handleTickEvent()</a> from abstractclock.o(i._ZN8touchgfx8Drawable15handleTickEventEv) referenced from box.o(.constdata__ZTVN8touchgfx3BoxE)
 <LI><a href="#[118]">touchgfx::Drawable::handleTickEvent()</a> from abstractclock.o(i._ZN8touchgfx8Drawable15handleTickEventEv) referenced from image.o(.constdata__ZTVN8touchgfx5ImageE)
 <LI><a href="#[118]">touchgfx::Drawable::handleTickEvent()</a> from abstractclock.o(i._ZN8touchgfx8Drawable15handleTickEventEv) referenced from screen1viewbase.o(.constdata__ZTVN8touchgfx6WidgetE)
 <LI><a href="#[118]">touchgfx::Drawable::handleTickEvent()</a> from abstractclock.o(i._ZN8touchgfx8Drawable15handleTickEventEv) referenced from drawable.o(.constdata__ZTVN8touchgfx8DrawableE)
 <LI><a href="#[118]">touchgfx::Drawable::handleTickEvent()</a> from abstractclock.o(i._ZN8touchgfx8Drawable15handleTickEventEv) referenced from textarea.o(.constdata__ZTVN8touchgfx8TextAreaE)
 <LI><a href="#[118]">touchgfx::Drawable::handleTickEvent()</a> from abstractclock.o(i._ZN8touchgfx8Drawable15handleTickEventEv) referenced from container.o(.constdata__ZTVN8touchgfx9ContainerE)
 <LI><a href="#[115]">touchgfx::Drawable::handleClickEvent(const touchgfx::ClickEvent&)</a> from abstractclock.o(i._ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE) referenced from tiledimage.o(.constdata__ZTVN8touchgfx10TiledImageE)
 <LI><a href="#[115]">touchgfx::Drawable::handleClickEvent(const touchgfx::ClickEvent&)</a> from abstractclock.o(i._ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE) referenced from canvaswidget.o(.constdata__ZTVN8touchgfx12CanvasWidgetE)
 <LI><a href="#[115]">touchgfx::Drawable::handleClickEvent(const touchgfx::ClickEvent&)</a> from abstractclock.o(i._ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE) referenced from digitalclock.o(.constdata__ZTVN8touchgfx12DigitalClockE)
 <LI><a href="#[115]">touchgfx::Drawable::handleClickEvent(const touchgfx::ClickEvent&)</a> from abstractclock.o(i._ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE) referenced from abstractclock.o(.constdata__ZTVN8touchgfx13AbstractClockE)
 <LI><a href="#[115]">touchgfx::Drawable::handleClickEvent(const touchgfx::ClickEvent&)</a> from abstractclock.o(i._ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE) referenced from imageprogress.o(.constdata__ZTVN8touchgfx13ImageProgressE)
 <LI><a href="#[115]">touchgfx::Drawable::handleClickEvent(const touchgfx::ClickEvent&)</a> from abstractclock.o(i._ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE) referenced from scalableimage.o(.constdata__ZTVN8touchgfx13ScalableImageE)
 <LI><a href="#[115]">touchgfx::Drawable::handleClickEvent(const touchgfx::ClickEvent&)</a> from abstractclock.o(i._ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE) referenced from texturemapper.o(.constdata__ZTVN8touchgfx13TextureMapperE)
 <LI><a href="#[115]">touchgfx::Drawable::handleClickEvent(const touchgfx::ClickEvent&)</a> from abstractclock.o(i._ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE) referenced from snapshotwidget.o(.constdata__ZTVN8touchgfx14SnapshotWidgetE)
 <LI><a href="#[115]">touchgfx::Drawable::handleClickEvent(const touchgfx::ClickEvent&)</a> from abstractclock.o(i._ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE) referenced from graphelements.o(.constdata__ZTVN8touchgfx16GraphElementLineE)
 <LI><a href="#[115]">touchgfx::Drawable::handleClickEvent(const touchgfx::ClickEvent&)</a> from abstractclock.o(i._ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE) referenced from digitalclock.o(.constdata__ZTVN8touchgfx23TextAreaWithOneWildcardE)
 <LI><a href="#[115]">touchgfx::Drawable::handleClickEvent(const touchgfx::ClickEvent&)</a> from abstractclock.o(i._ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE) referenced from screen1viewbase.o(.constdata__ZTVN8touchgfx24TextAreaWithTwoWildcardsE)
 <LI><a href="#[115]">touchgfx::Drawable::handleClickEvent(const touchgfx::ClickEvent&)</a> from abstractclock.o(i._ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE) referenced from textareawithwildcard.o(.constdata__ZTVN8touchgfx24TextAreaWithWildcardBaseE)
 <LI><a href="#[115]">touchgfx::Drawable::handleClickEvent(const touchgfx::ClickEvent&)</a> from abstractclock.o(i._ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE) referenced from abstractdirectionprogress.o(.constdata__ZTVN8touchgfx25AbstractDirectionProgressE)
 <LI><a href="#[115]">touchgfx::Drawable::handleClickEvent(const touchgfx::ClickEvent&)</a> from abstractclock.o(i._ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE) referenced from abstractprogressindicator.o(.constdata__ZTVN8touchgfx25AbstractProgressIndicatorE)
 <LI><a href="#[115]">touchgfx::Drawable::handleClickEvent(const touchgfx::ClickEvent&)</a> from abstractclock.o(i._ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE) referenced from box.o(.constdata__ZTVN8touchgfx3BoxE)
 <LI><a href="#[115]">touchgfx::Drawable::handleClickEvent(const touchgfx::ClickEvent&)</a> from abstractclock.o(i._ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE) referenced from image.o(.constdata__ZTVN8touchgfx5ImageE)
 <LI><a href="#[115]">touchgfx::Drawable::handleClickEvent(const touchgfx::ClickEvent&)</a> from abstractclock.o(i._ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE) referenced from screen1viewbase.o(.constdata__ZTVN8touchgfx6WidgetE)
 <LI><a href="#[115]">touchgfx::Drawable::handleClickEvent(const touchgfx::ClickEvent&)</a> from abstractclock.o(i._ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE) referenced from drawable.o(.constdata__ZTVN8touchgfx8DrawableE)
 <LI><a href="#[115]">touchgfx::Drawable::handleClickEvent(const touchgfx::ClickEvent&)</a> from abstractclock.o(i._ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE) referenced from textarea.o(.constdata__ZTVN8touchgfx8TextAreaE)
 <LI><a href="#[115]">touchgfx::Drawable::handleClickEvent(const touchgfx::ClickEvent&)</a> from abstractclock.o(i._ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE) referenced from container.o(.constdata__ZTVN8touchgfx9ContainerE)
 <LI><a href="#[116]">touchgfx::Drawable::handleGestureEvent(const touchgfx::GestureEvent&)</a> from abstractclock.o(i._ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE) referenced from tiledimage.o(.constdata__ZTVN8touchgfx10TiledImageE)
 <LI><a href="#[116]">touchgfx::Drawable::handleGestureEvent(const touchgfx::GestureEvent&)</a> from abstractclock.o(i._ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE) referenced from screen1viewbase.o(.constdata__ZTVN8touchgfx11GraphScrollILs150EEE)
 <LI><a href="#[116]">touchgfx::Drawable::handleGestureEvent(const touchgfx::GestureEvent&)</a> from abstractclock.o(i._ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE) referenced from canvaswidget.o(.constdata__ZTVN8touchgfx12CanvasWidgetE)
 <LI><a href="#[116]">touchgfx::Drawable::handleGestureEvent(const touchgfx::GestureEvent&)</a> from abstractclock.o(i._ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE) referenced from digitalclock.o(.constdata__ZTVN8touchgfx12DigitalClockE)
 <LI><a href="#[116]">touchgfx::Drawable::handleGestureEvent(const touchgfx::GestureEvent&)</a> from abstractclock.o(i._ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE) referenced from abstractclock.o(.constdata__ZTVN8touchgfx13AbstractClockE)
 <LI><a href="#[116]">touchgfx::Drawable::handleGestureEvent(const touchgfx::GestureEvent&)</a> from abstractclock.o(i._ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE) referenced from imageprogress.o(.constdata__ZTVN8touchgfx13ImageProgressE)
 <LI><a href="#[116]">touchgfx::Drawable::handleGestureEvent(const touchgfx::GestureEvent&)</a> from abstractclock.o(i._ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE) referenced from scalableimage.o(.constdata__ZTVN8touchgfx13ScalableImageE)
 <LI><a href="#[116]">touchgfx::Drawable::handleGestureEvent(const touchgfx::GestureEvent&)</a> from abstractclock.o(i._ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE) referenced from texturemapper.o(.constdata__ZTVN8touchgfx13TextureMapperE)
 <LI><a href="#[116]">touchgfx::Drawable::handleGestureEvent(const touchgfx::GestureEvent&)</a> from abstractclock.o(i._ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE) referenced from snapshotwidget.o(.constdata__ZTVN8touchgfx14SnapshotWidgetE)
 <LI><a href="#[116]">touchgfx::Drawable::handleGestureEvent(const touchgfx::GestureEvent&)</a> from abstractclock.o(i._ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE) referenced from abstractdatagraph.o(.constdata__ZTVN8touchgfx16DynamicDataGraphE)
 <LI><a href="#[116]">touchgfx::Drawable::handleGestureEvent(const touchgfx::GestureEvent&)</a> from abstractclock.o(i._ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE) referenced from graphelements.o(.constdata__ZTVN8touchgfx16GraphElementLineE)
 <LI><a href="#[116]">touchgfx::Drawable::handleGestureEvent(const touchgfx::GestureEvent&)</a> from abstractclock.o(i._ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE) referenced from abstractdatagraph.o(.constdata__ZTVN8touchgfx17AbstractDataGraphE)
 <LI><a href="#[116]">touchgfx::Drawable::handleGestureEvent(const touchgfx::GestureEvent&)</a> from abstractclock.o(i._ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE) referenced from digitalclock.o(.constdata__ZTVN8touchgfx23TextAreaWithOneWildcardE)
 <LI><a href="#[116]">touchgfx::Drawable::handleGestureEvent(const touchgfx::GestureEvent&)</a> from abstractclock.o(i._ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE) referenced from screen1viewbase.o(.constdata__ZTVN8touchgfx24TextAreaWithTwoWildcardsE)
 <LI><a href="#[116]">touchgfx::Drawable::handleGestureEvent(const touchgfx::GestureEvent&)</a> from abstractclock.o(i._ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE) referenced from textareawithwildcard.o(.constdata__ZTVN8touchgfx24TextAreaWithWildcardBaseE)
 <LI><a href="#[116]">touchgfx::Drawable::handleGestureEvent(const touchgfx::GestureEvent&)</a> from abstractclock.o(i._ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE) referenced from abstractdirectionprogress.o(.constdata__ZTVN8touchgfx25AbstractDirectionProgressE)
 <LI><a href="#[116]">touchgfx::Drawable::handleGestureEvent(const touchgfx::GestureEvent&)</a> from abstractclock.o(i._ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE) referenced from abstractprogressindicator.o(.constdata__ZTVN8touchgfx25AbstractProgressIndicatorE)
 <LI><a href="#[116]">touchgfx::Drawable::handleGestureEvent(const touchgfx::GestureEvent&)</a> from abstractclock.o(i._ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE) referenced from box.o(.constdata__ZTVN8touchgfx3BoxE)
 <LI><a href="#[116]">touchgfx::Drawable::handleGestureEvent(const touchgfx::GestureEvent&)</a> from abstractclock.o(i._ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE) referenced from image.o(.constdata__ZTVN8touchgfx5ImageE)
 <LI><a href="#[116]">touchgfx::Drawable::handleGestureEvent(const touchgfx::GestureEvent&)</a> from abstractclock.o(i._ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE) referenced from screen1viewbase.o(.constdata__ZTVN8touchgfx6WidgetE)
 <LI><a href="#[116]">touchgfx::Drawable::handleGestureEvent(const touchgfx::GestureEvent&)</a> from abstractclock.o(i._ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE) referenced from drawable.o(.constdata__ZTVN8touchgfx8DrawableE)
 <LI><a href="#[116]">touchgfx::Drawable::handleGestureEvent(const touchgfx::GestureEvent&)</a> from abstractclock.o(i._ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE) referenced from textarea.o(.constdata__ZTVN8touchgfx8TextAreaE)
 <LI><a href="#[116]">touchgfx::Drawable::handleGestureEvent(const touchgfx::GestureEvent&)</a> from abstractclock.o(i._ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE) referenced from container.o(.constdata__ZTVN8touchgfx9ContainerE)
 <LI><a href="#[111]">touchgfx::Drawable::setX(short)</a> from abstractclock.o(i._ZN8touchgfx8Drawable4setXEs) referenced from tiledimage.o(.constdata__ZTVN8touchgfx10TiledImageE)
 <LI><a href="#[111]">touchgfx::Drawable::setX(short)</a> from abstractclock.o(i._ZN8touchgfx8Drawable4setXEs) referenced from screen1viewbase.o(.constdata__ZTVN8touchgfx11GraphScrollILs150EEE)
 <LI><a href="#[111]">touchgfx::Drawable::setX(short)</a> from abstractclock.o(i._ZN8touchgfx8Drawable4setXEs) referenced from canvaswidget.o(.constdata__ZTVN8touchgfx12CanvasWidgetE)
 <LI><a href="#[111]">touchgfx::Drawable::setX(short)</a> from abstractclock.o(i._ZN8touchgfx8Drawable4setXEs) referenced from digitalclock.o(.constdata__ZTVN8touchgfx12DigitalClockE)
 <LI><a href="#[111]">touchgfx::Drawable::setX(short)</a> from abstractclock.o(i._ZN8touchgfx8Drawable4setXEs) referenced from abstractclock.o(.constdata__ZTVN8touchgfx13AbstractClockE)
 <LI><a href="#[111]">touchgfx::Drawable::setX(short)</a> from abstractclock.o(i._ZN8touchgfx8Drawable4setXEs) referenced from imageprogress.o(.constdata__ZTVN8touchgfx13ImageProgressE)
 <LI><a href="#[111]">touchgfx::Drawable::setX(short)</a> from abstractclock.o(i._ZN8touchgfx8Drawable4setXEs) referenced from scalableimage.o(.constdata__ZTVN8touchgfx13ScalableImageE)
 <LI><a href="#[111]">touchgfx::Drawable::setX(short)</a> from abstractclock.o(i._ZN8touchgfx8Drawable4setXEs) referenced from texturemapper.o(.constdata__ZTVN8touchgfx13TextureMapperE)
 <LI><a href="#[111]">touchgfx::Drawable::setX(short)</a> from abstractclock.o(i._ZN8touchgfx8Drawable4setXEs) referenced from snapshotwidget.o(.constdata__ZTVN8touchgfx14SnapshotWidgetE)
 <LI><a href="#[111]">touchgfx::Drawable::setX(short)</a> from abstractclock.o(i._ZN8touchgfx8Drawable4setXEs) referenced from abstractdatagraph.o(.constdata__ZTVN8touchgfx16DynamicDataGraphE)
 <LI><a href="#[111]">touchgfx::Drawable::setX(short)</a> from abstractclock.o(i._ZN8touchgfx8Drawable4setXEs) referenced from graphelements.o(.constdata__ZTVN8touchgfx16GraphElementLineE)
 <LI><a href="#[111]">touchgfx::Drawable::setX(short)</a> from abstractclock.o(i._ZN8touchgfx8Drawable4setXEs) referenced from abstractdatagraph.o(.constdata__ZTVN8touchgfx17AbstractDataGraphE)
 <LI><a href="#[111]">touchgfx::Drawable::setX(short)</a> from abstractclock.o(i._ZN8touchgfx8Drawable4setXEs) referenced from digitalclock.o(.constdata__ZTVN8touchgfx23TextAreaWithOneWildcardE)
 <LI><a href="#[111]">touchgfx::Drawable::setX(short)</a> from abstractclock.o(i._ZN8touchgfx8Drawable4setXEs) referenced from screen1viewbase.o(.constdata__ZTVN8touchgfx24TextAreaWithTwoWildcardsE)
 <LI><a href="#[111]">touchgfx::Drawable::setX(short)</a> from abstractclock.o(i._ZN8touchgfx8Drawable4setXEs) referenced from textareawithwildcard.o(.constdata__ZTVN8touchgfx24TextAreaWithWildcardBaseE)
 <LI><a href="#[111]">touchgfx::Drawable::setX(short)</a> from abstractclock.o(i._ZN8touchgfx8Drawable4setXEs) referenced from abstractdirectionprogress.o(.constdata__ZTVN8touchgfx25AbstractDirectionProgressE)
 <LI><a href="#[111]">touchgfx::Drawable::setX(short)</a> from abstractclock.o(i._ZN8touchgfx8Drawable4setXEs) referenced from abstractprogressindicator.o(.constdata__ZTVN8touchgfx25AbstractProgressIndicatorE)
 <LI><a href="#[111]">touchgfx::Drawable::setX(short)</a> from abstractclock.o(i._ZN8touchgfx8Drawable4setXEs) referenced from box.o(.constdata__ZTVN8touchgfx3BoxE)
 <LI><a href="#[111]">touchgfx::Drawable::setX(short)</a> from abstractclock.o(i._ZN8touchgfx8Drawable4setXEs) referenced from image.o(.constdata__ZTVN8touchgfx5ImageE)
 <LI><a href="#[111]">touchgfx::Drawable::setX(short)</a> from abstractclock.o(i._ZN8touchgfx8Drawable4setXEs) referenced from screen1viewbase.o(.constdata__ZTVN8touchgfx6WidgetE)
 <LI><a href="#[111]">touchgfx::Drawable::setX(short)</a> from abstractclock.o(i._ZN8touchgfx8Drawable4setXEs) referenced from drawable.o(.constdata__ZTVN8touchgfx8DrawableE)
 <LI><a href="#[111]">touchgfx::Drawable::setX(short)</a> from abstractclock.o(i._ZN8touchgfx8Drawable4setXEs) referenced from textarea.o(.constdata__ZTVN8touchgfx8TextAreaE)
 <LI><a href="#[111]">touchgfx::Drawable::setX(short)</a> from abstractclock.o(i._ZN8touchgfx8Drawable4setXEs) referenced from container.o(.constdata__ZTVN8touchgfx9ContainerE)
 <LI><a href="#[112]">touchgfx::Drawable::setY(short)</a> from abstractclock.o(i._ZN8touchgfx8Drawable4setYEs) referenced from tiledimage.o(.constdata__ZTVN8touchgfx10TiledImageE)
 <LI><a href="#[112]">touchgfx::Drawable::setY(short)</a> from abstractclock.o(i._ZN8touchgfx8Drawable4setYEs) referenced from screen1viewbase.o(.constdata__ZTVN8touchgfx11GraphScrollILs150EEE)
 <LI><a href="#[112]">touchgfx::Drawable::setY(short)</a> from abstractclock.o(i._ZN8touchgfx8Drawable4setYEs) referenced from canvaswidget.o(.constdata__ZTVN8touchgfx12CanvasWidgetE)
 <LI><a href="#[112]">touchgfx::Drawable::setY(short)</a> from abstractclock.o(i._ZN8touchgfx8Drawable4setYEs) referenced from digitalclock.o(.constdata__ZTVN8touchgfx12DigitalClockE)
 <LI><a href="#[112]">touchgfx::Drawable::setY(short)</a> from abstractclock.o(i._ZN8touchgfx8Drawable4setYEs) referenced from abstractclock.o(.constdata__ZTVN8touchgfx13AbstractClockE)
 <LI><a href="#[112]">touchgfx::Drawable::setY(short)</a> from abstractclock.o(i._ZN8touchgfx8Drawable4setYEs) referenced from imageprogress.o(.constdata__ZTVN8touchgfx13ImageProgressE)
 <LI><a href="#[112]">touchgfx::Drawable::setY(short)</a> from abstractclock.o(i._ZN8touchgfx8Drawable4setYEs) referenced from scalableimage.o(.constdata__ZTVN8touchgfx13ScalableImageE)
 <LI><a href="#[112]">touchgfx::Drawable::setY(short)</a> from abstractclock.o(i._ZN8touchgfx8Drawable4setYEs) referenced from texturemapper.o(.constdata__ZTVN8touchgfx13TextureMapperE)
 <LI><a href="#[112]">touchgfx::Drawable::setY(short)</a> from abstractclock.o(i._ZN8touchgfx8Drawable4setYEs) referenced from snapshotwidget.o(.constdata__ZTVN8touchgfx14SnapshotWidgetE)
 <LI><a href="#[112]">touchgfx::Drawable::setY(short)</a> from abstractclock.o(i._ZN8touchgfx8Drawable4setYEs) referenced from abstractdatagraph.o(.constdata__ZTVN8touchgfx16DynamicDataGraphE)
 <LI><a href="#[112]">touchgfx::Drawable::setY(short)</a> from abstractclock.o(i._ZN8touchgfx8Drawable4setYEs) referenced from graphelements.o(.constdata__ZTVN8touchgfx16GraphElementLineE)
 <LI><a href="#[112]">touchgfx::Drawable::setY(short)</a> from abstractclock.o(i._ZN8touchgfx8Drawable4setYEs) referenced from abstractdatagraph.o(.constdata__ZTVN8touchgfx17AbstractDataGraphE)
 <LI><a href="#[112]">touchgfx::Drawable::setY(short)</a> from abstractclock.o(i._ZN8touchgfx8Drawable4setYEs) referenced from digitalclock.o(.constdata__ZTVN8touchgfx23TextAreaWithOneWildcardE)
 <LI><a href="#[112]">touchgfx::Drawable::setY(short)</a> from abstractclock.o(i._ZN8touchgfx8Drawable4setYEs) referenced from screen1viewbase.o(.constdata__ZTVN8touchgfx24TextAreaWithTwoWildcardsE)
 <LI><a href="#[112]">touchgfx::Drawable::setY(short)</a> from abstractclock.o(i._ZN8touchgfx8Drawable4setYEs) referenced from textareawithwildcard.o(.constdata__ZTVN8touchgfx24TextAreaWithWildcardBaseE)
 <LI><a href="#[112]">touchgfx::Drawable::setY(short)</a> from abstractclock.o(i._ZN8touchgfx8Drawable4setYEs) referenced from abstractdirectionprogress.o(.constdata__ZTVN8touchgfx25AbstractDirectionProgressE)
 <LI><a href="#[112]">touchgfx::Drawable::setY(short)</a> from abstractclock.o(i._ZN8touchgfx8Drawable4setYEs) referenced from abstractprogressindicator.o(.constdata__ZTVN8touchgfx25AbstractProgressIndicatorE)
 <LI><a href="#[112]">touchgfx::Drawable::setY(short)</a> from abstractclock.o(i._ZN8touchgfx8Drawable4setYEs) referenced from box.o(.constdata__ZTVN8touchgfx3BoxE)
 <LI><a href="#[112]">touchgfx::Drawable::setY(short)</a> from abstractclock.o(i._ZN8touchgfx8Drawable4setYEs) referenced from image.o(.constdata__ZTVN8touchgfx5ImageE)
 <LI><a href="#[112]">touchgfx::Drawable::setY(short)</a> from abstractclock.o(i._ZN8touchgfx8Drawable4setYEs) referenced from screen1viewbase.o(.constdata__ZTVN8touchgfx6WidgetE)
 <LI><a href="#[112]">touchgfx::Drawable::setY(short)</a> from abstractclock.o(i._ZN8touchgfx8Drawable4setYEs) referenced from drawable.o(.constdata__ZTVN8touchgfx8DrawableE)
 <LI><a href="#[112]">touchgfx::Drawable::setY(short)</a> from abstractclock.o(i._ZN8touchgfx8Drawable4setYEs) referenced from textarea.o(.constdata__ZTVN8touchgfx8TextAreaE)
 <LI><a href="#[112]">touchgfx::Drawable::setY(short)</a> from abstractclock.o(i._ZN8touchgfx8Drawable4setYEs) referenced from container.o(.constdata__ZTVN8touchgfx9ContainerE)
 <LI><a href="#[113]">touchgfx::Drawable::setWidth(short)</a> from abstractclock.o(i._ZN8touchgfx8Drawable8setWidthEs) referenced from tiledimage.o(.constdata__ZTVN8touchgfx10TiledImageE)
 <LI><a href="#[113]">touchgfx::Drawable::setWidth(short)</a> from abstractclock.o(i._ZN8touchgfx8Drawable8setWidthEs) referenced from canvaswidget.o(.constdata__ZTVN8touchgfx12CanvasWidgetE)
 <LI><a href="#[113]">touchgfx::Drawable::setWidth(short)</a> from abstractclock.o(i._ZN8touchgfx8Drawable8setWidthEs) referenced from abstractclock.o(.constdata__ZTVN8touchgfx13AbstractClockE)
 <LI><a href="#[113]">touchgfx::Drawable::setWidth(short)</a> from abstractclock.o(i._ZN8touchgfx8Drawable8setWidthEs) referenced from imageprogress.o(.constdata__ZTVN8touchgfx13ImageProgressE)
 <LI><a href="#[113]">touchgfx::Drawable::setWidth(short)</a> from abstractclock.o(i._ZN8touchgfx8Drawable8setWidthEs) referenced from scalableimage.o(.constdata__ZTVN8touchgfx13ScalableImageE)
 <LI><a href="#[113]">touchgfx::Drawable::setWidth(short)</a> from abstractclock.o(i._ZN8touchgfx8Drawable8setWidthEs) referenced from texturemapper.o(.constdata__ZTVN8touchgfx13TextureMapperE)
 <LI><a href="#[113]">touchgfx::Drawable::setWidth(short)</a> from abstractclock.o(i._ZN8touchgfx8Drawable8setWidthEs) referenced from snapshotwidget.o(.constdata__ZTVN8touchgfx14SnapshotWidgetE)
 <LI><a href="#[113]">touchgfx::Drawable::setWidth(short)</a> from abstractclock.o(i._ZN8touchgfx8Drawable8setWidthEs) referenced from graphelements.o(.constdata__ZTVN8touchgfx16GraphElementLineE)
 <LI><a href="#[113]">touchgfx::Drawable::setWidth(short)</a> from abstractclock.o(i._ZN8touchgfx8Drawable8setWidthEs) referenced from abstractdirectionprogress.o(.constdata__ZTVN8touchgfx25AbstractDirectionProgressE)
 <LI><a href="#[113]">touchgfx::Drawable::setWidth(short)</a> from abstractclock.o(i._ZN8touchgfx8Drawable8setWidthEs) referenced from abstractprogressindicator.o(.constdata__ZTVN8touchgfx25AbstractProgressIndicatorE)
 <LI><a href="#[113]">touchgfx::Drawable::setWidth(short)</a> from abstractclock.o(i._ZN8touchgfx8Drawable8setWidthEs) referenced from box.o(.constdata__ZTVN8touchgfx3BoxE)
 <LI><a href="#[113]">touchgfx::Drawable::setWidth(short)</a> from abstractclock.o(i._ZN8touchgfx8Drawable8setWidthEs) referenced from image.o(.constdata__ZTVN8touchgfx5ImageE)
 <LI><a href="#[113]">touchgfx::Drawable::setWidth(short)</a> from abstractclock.o(i._ZN8touchgfx8Drawable8setWidthEs) referenced from screen1viewbase.o(.constdata__ZTVN8touchgfx6WidgetE)
 <LI><a href="#[113]">touchgfx::Drawable::setWidth(short)</a> from abstractclock.o(i._ZN8touchgfx8Drawable8setWidthEs) referenced from drawable.o(.constdata__ZTVN8touchgfx8DrawableE)
 <LI><a href="#[113]">touchgfx::Drawable::setWidth(short)</a> from abstractclock.o(i._ZN8touchgfx8Drawable8setWidthEs) referenced from container.o(.constdata__ZTVN8touchgfx9ContainerE)
 <LI><a href="#[114]">touchgfx::Drawable::setHeight(short)</a> from abstractclock.o(i._ZN8touchgfx8Drawable9setHeightEs) referenced from tiledimage.o(.constdata__ZTVN8touchgfx10TiledImageE)
 <LI><a href="#[114]">touchgfx::Drawable::setHeight(short)</a> from abstractclock.o(i._ZN8touchgfx8Drawable9setHeightEs) referenced from canvaswidget.o(.constdata__ZTVN8touchgfx12CanvasWidgetE)
 <LI><a href="#[114]">touchgfx::Drawable::setHeight(short)</a> from abstractclock.o(i._ZN8touchgfx8Drawable9setHeightEs) referenced from abstractclock.o(.constdata__ZTVN8touchgfx13AbstractClockE)
 <LI><a href="#[114]">touchgfx::Drawable::setHeight(short)</a> from abstractclock.o(i._ZN8touchgfx8Drawable9setHeightEs) referenced from imageprogress.o(.constdata__ZTVN8touchgfx13ImageProgressE)
 <LI><a href="#[114]">touchgfx::Drawable::setHeight(short)</a> from abstractclock.o(i._ZN8touchgfx8Drawable9setHeightEs) referenced from scalableimage.o(.constdata__ZTVN8touchgfx13ScalableImageE)
 <LI><a href="#[114]">touchgfx::Drawable::setHeight(short)</a> from abstractclock.o(i._ZN8touchgfx8Drawable9setHeightEs) referenced from texturemapper.o(.constdata__ZTVN8touchgfx13TextureMapperE)
 <LI><a href="#[114]">touchgfx::Drawable::setHeight(short)</a> from abstractclock.o(i._ZN8touchgfx8Drawable9setHeightEs) referenced from snapshotwidget.o(.constdata__ZTVN8touchgfx14SnapshotWidgetE)
 <LI><a href="#[114]">touchgfx::Drawable::setHeight(short)</a> from abstractclock.o(i._ZN8touchgfx8Drawable9setHeightEs) referenced from graphelements.o(.constdata__ZTVN8touchgfx16GraphElementLineE)
 <LI><a href="#[114]">touchgfx::Drawable::setHeight(short)</a> from abstractclock.o(i._ZN8touchgfx8Drawable9setHeightEs) referenced from abstractdirectionprogress.o(.constdata__ZTVN8touchgfx25AbstractDirectionProgressE)
 <LI><a href="#[114]">touchgfx::Drawable::setHeight(short)</a> from abstractclock.o(i._ZN8touchgfx8Drawable9setHeightEs) referenced from abstractprogressindicator.o(.constdata__ZTVN8touchgfx25AbstractProgressIndicatorE)
 <LI><a href="#[114]">touchgfx::Drawable::setHeight(short)</a> from abstractclock.o(i._ZN8touchgfx8Drawable9setHeightEs) referenced from box.o(.constdata__ZTVN8touchgfx3BoxE)
 <LI><a href="#[114]">touchgfx::Drawable::setHeight(short)</a> from abstractclock.o(i._ZN8touchgfx8Drawable9setHeightEs) referenced from image.o(.constdata__ZTVN8touchgfx5ImageE)
 <LI><a href="#[114]">touchgfx::Drawable::setHeight(short)</a> from abstractclock.o(i._ZN8touchgfx8Drawable9setHeightEs) referenced from screen1viewbase.o(.constdata__ZTVN8touchgfx6WidgetE)
 <LI><a href="#[114]">touchgfx::Drawable::setHeight(short)</a> from abstractclock.o(i._ZN8touchgfx8Drawable9setHeightEs) referenced from drawable.o(.constdata__ZTVN8touchgfx8DrawableE)
 <LI><a href="#[114]">touchgfx::Drawable::setHeight(short)</a> from abstractclock.o(i._ZN8touchgfx8Drawable9setHeightEs) referenced from container.o(.constdata__ZTVN8touchgfx9ContainerE)
 <LI><a href="#[1e1]">touchgfx::LCD16bpp::fillBuffer(unsigned char*, unsigned short, const touchgfx::Rect&, touchgfx::colortype, unsigned char)</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bppE)
 <LI><a href="#[1b7]">touchgfx::LCD16bpp::DecompressorL8_L4::blitCopyRGB565(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp17DecompressorL8_L4E)
 <LI><a href="#[1b9]">touchgfx::LCD16bpp::DecompressorL8_L4::blitCopyRGB888(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp17DecompressorL8_L4E)
 <LI><a href="#[1b8]">touchgfx::LCD16bpp::DecompressorL8_L4::blitCopyARGB8888(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp17DecompressorL8_L4E)
 <LI><a href="#[86]">touchgfx::LCD16bpp::DecompressorL8_L4::~DecompressorL8_L4()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp17DecompressorL8_L4D1Ev) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp17DecompressorL8_L4E)
 <LI><a href="#[86]">touchgfx::LCD16bpp::DecompressorL8_L4::~DecompressorL8_L4()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp17DecompressorL8_L4D1Ev) referenced from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv)
 <LI><a href="#[1dc]">touchgfx::LCD16bpp::drawPartialBitmap(const touchgfx::Bitmap&, short, short, const touchgfx::Rect&, unsigned char, bool)</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bppE)
 <LI><a href="#[1ba]">touchgfx::LCD16bpp::DecompressorL8_RLE::blitCopyRGB565(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp18DecompressorL8_RLEE)
 <LI><a href="#[1bc]">touchgfx::LCD16bpp::DecompressorL8_RLE::blitCopyRGB888(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp18DecompressorL8_RLEE)
 <LI><a href="#[1bb]">touchgfx::LCD16bpp::DecompressorL8_RLE::blitCopyARGB8888(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp18DecompressorL8_RLEE)
 <LI><a href="#[87]">touchgfx::LCD16bpp::DecompressorL8_RLE::~DecompressorL8_RLE()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp18DecompressorL8_RLED1Ev) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp18DecompressorL8_RLEE)
 <LI><a href="#[87]">touchgfx::LCD16bpp::DecompressorL8_RLE::~DecompressorL8_RLE()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp18DecompressorL8_RLED1Ev) referenced from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv)
 <LI><a href="#[1bd]">touchgfx::LCD16bpp::DecompressorL8_LZW9::blitCopyRGB565(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp19DecompressorL8_LZW9E)
 <LI><a href="#[1bf]">touchgfx::LCD16bpp::DecompressorL8_LZW9::blitCopyRGB888(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp19DecompressorL8_LZW9E)
 <LI><a href="#[1be]">touchgfx::LCD16bpp::DecompressorL8_LZW9::blitCopyARGB8888(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp19DecompressorL8_LZW9E)
 <LI><a href="#[88]">touchgfx::LCD16bpp::DecompressorL8_LZW9::~DecompressorL8_LZW9()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp19DecompressorL8_LZW9D1Ev) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp19DecompressorL8_LZW9E)
 <LI><a href="#[88]">touchgfx::LCD16bpp::DecompressorL8_LZW9::~DecompressorL8_LZW9()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp19DecompressorL8_LZW9D1Ev) referenced from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv)
 <LI><a href="#[1e6]">touchgfx::LCD16bpp::getTextureMapperDrawScanLine(const touchgfx::TextureSurface&, unsigned short, unsigned char)</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bppE)
 <LI><a href="#[1df]">touchgfx::LCD16bpp::copyFrameBufferRegionToMemory(const touchgfx::Rect&, const touchgfx::Rect&, unsigned char*, short, short)</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bppE)
 <LI><a href="#[1de]">touchgfx::LCD16bpp::copyFrameBufferRegionToMemory(const touchgfx::Rect&, const touchgfx::Rect&, unsigned short)</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bppE)
 <LI><a href="#[1c0]">touchgfx::LCD16bpp::TextureMapper_A4_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAE)
 <LI><a href="#[89]">touchgfx::LCD16bpp::TextureMapper_A4_NearestNeighbor_GA::~TextureMapper_A4_NearestNeighbor_GA()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD1Ev) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAE)
 <LI><a href="#[89]">touchgfx::LCD16bpp::TextureMapper_A4_NearestNeighbor_GA::~TextureMapper_A4_NearestNeighbor_GA()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD1Ev) referenced from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv)
 <LI><a href="#[1c1]">touchgfx::LCD16bpp::TextureMapper_A4_NearestNeighbor_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAE)
 <LI><a href="#[8a]">touchgfx::LCD16bpp::TextureMapper_A4_NearestNeighbor_NoGA::~TextureMapper_A4_NearestNeighbor_NoGA()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD1Ev) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAE)
 <LI><a href="#[8a]">touchgfx::LCD16bpp::TextureMapper_A4_NearestNeighbor_NoGA::~TextureMapper_A4_NearestNeighbor_NoGA()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD1Ev) referenced from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv)
 <LI><a href="#[1c2]">touchgfx::LCD16bpp::TextureMapper_A4_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAE)
 <LI><a href="#[8b]">touchgfx::LCD16bpp::TextureMapper_A4_BilinearInterpolation_GA::~TextureMapper_A4_BilinearInterpolation_GA()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD1Ev) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAE)
 <LI><a href="#[8b]">touchgfx::LCD16bpp::TextureMapper_A4_BilinearInterpolation_GA::~TextureMapper_A4_BilinearInterpolation_GA()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD1Ev) referenced from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv)
 <LI><a href="#[1c3]">touchgfx::LCD16bpp::TextureMapper_A4_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAE)
 <LI><a href="#[8c]">touchgfx::LCD16bpp::TextureMapper_A4_BilinearInterpolation_NoGA::~TextureMapper_A4_BilinearInterpolation_NoGA()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD1Ev) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAE)
 <LI><a href="#[8c]">touchgfx::LCD16bpp::TextureMapper_A4_BilinearInterpolation_NoGA::~TextureMapper_A4_BilinearInterpolation_NoGA()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD1Ev) referenced from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv)
 <LI><a href="#[1c4]">touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAE)
 <LI><a href="#[95]">touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_NearestNeighbor_GA::~TextureMapper_RGB565_Opaque_NearestNeighbor_GA()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD1Ev) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAE)
 <LI><a href="#[95]">touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_NearestNeighbor_GA::~TextureMapper_RGB565_Opaque_NearestNeighbor_GA()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD1Ev) referenced from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv)
 <LI><a href="#[1c5]">touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAE)
 <LI><a href="#[96]">touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA::~TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD1Ev) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAE)
 <LI><a href="#[96]">touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA::~TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD1Ev) referenced from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv)
 <LI><a href="#[1c6]">touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAE)
 <LI><a href="#[8f]">touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA::~TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD1Ev) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAE)
 <LI><a href="#[8f]">touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA::~TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD1Ev) referenced from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv)
 <LI><a href="#[1c7]">touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAE)
 <LI><a href="#[91]">touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA::~TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD1Ev) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAE)
 <LI><a href="#[91]">touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA::~TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD1Ev) referenced from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv)
 <LI><a href="#[1c8]">touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAE)
 <LI><a href="#[9d]">touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA::~TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD1Ev) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAE)
 <LI><a href="#[9d]">touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA::~TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD1Ev) referenced from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv)
 <LI><a href="#[1c9]">touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAE)
 <LI><a href="#[8d]">touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA::~TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAE)
 <LI><a href="#[8d]">touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA::~TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev) referenced from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv)
 <LI><a href="#[1ca]">touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAE)
 <LI><a href="#[90]">touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA::~TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD1Ev) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAE)
 <LI><a href="#[90]">touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA::~TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD1Ev) referenced from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv)
 <LI><a href="#[1cb]">touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAE)
 <LI><a href="#[92]">touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA::~TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD1Ev) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAE)
 <LI><a href="#[92]">touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA::~TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD1Ev) referenced from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv)
 <LI><a href="#[1cc]">touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAE)
 <LI><a href="#[9e]">touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA::~TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD1Ev) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAE)
 <LI><a href="#[9e]">touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA::~TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD1Ev) referenced from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv)
 <LI><a href="#[1cd]">touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAE)
 <LI><a href="#[a1]">touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_BilinearInterpolation_GA::~TextureMapper_RGB565_Opaque_BilinearInterpolation_GA()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD1Ev) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAE)
 <LI><a href="#[a1]">touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_BilinearInterpolation_GA::~TextureMapper_RGB565_Opaque_BilinearInterpolation_GA()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD1Ev) referenced from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv)
 <LI><a href="#[1ce]">touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAE)
 <LI><a href="#[8e]">touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA::~TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAE)
 <LI><a href="#[8e]">touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA::~TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev) referenced from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv)
 <LI><a href="#[1cf]">touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAE)
 <LI><a href="#[93]">touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA::~TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAE)
 <LI><a href="#[93]">touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA::~TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev) referenced from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv)
 <LI><a href="#[1d0]">touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAE)
 <LI><a href="#[a2]">touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA::~TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAE)
 <LI><a href="#[a2]">touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA::~TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev) referenced from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv)
 <LI><a href="#[1d1]">touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAE)
 <LI><a href="#[99]">touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA::~TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD1Ev) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAE)
 <LI><a href="#[99]">touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA::~TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD1Ev) referenced from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv)
 <LI><a href="#[1d2]">touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAE)
 <LI><a href="#[9b]">touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA::~TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD1Ev) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAE)
 <LI><a href="#[9b]">touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA::~TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD1Ev) referenced from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv)
 <LI><a href="#[1d3]">touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAE)
 <LI><a href="#[a3]">touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA::~TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD1Ev) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAE)
 <LI><a href="#[a3]">touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA::~TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD1Ev) referenced from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv)
 <LI><a href="#[1d4]">touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAE)
 <LI><a href="#[94]">touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA::~TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAE)
 <LI><a href="#[94]">touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA::~TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev) referenced from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv)
 <LI><a href="#[1d5]">touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAE)
 <LI><a href="#[97]">touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA::~TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAE)
 <LI><a href="#[97]">touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA::~TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev) referenced from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv)
 <LI><a href="#[1d6]">touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAE)
 <LI><a href="#[9a]">touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA::~TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAE)
 <LI><a href="#[9a]">touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA::~TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev) referenced from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv)
 <LI><a href="#[1d7]">touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAE)
 <LI><a href="#[9c]">touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA::~TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD1Ev) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAE)
 <LI><a href="#[9c]">touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA::~TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD1Ev) referenced from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv)
 <LI><a href="#[1d8]">touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAE)
 <LI><a href="#[a4]">touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA::~TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD1Ev) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAE)
 <LI><a href="#[a4]">touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA::~TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD1Ev) referenced from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv)
 <LI><a href="#[1d9]">touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAE)
 <LI><a href="#[98]">touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::~TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAE)
 <LI><a href="#[98]">touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::~TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev) referenced from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv)
 <LI><a href="#[1da]">touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAE)
 <LI><a href="#[9f]">touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA::~TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAE)
 <LI><a href="#[9f]">touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA::~TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev) referenced from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv)
 <LI><a href="#[1db]">touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAE)
 <LI><a href="#[a0]">touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::~TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAE)
 <LI><a href="#[a0]">touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::~TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev) referenced from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv)
 <LI><a href="#[1dd]">touchgfx::LCD16bpp::blitCopy(const unsigned short*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char, bool)</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bppE)
 <LI><a href="#[1e0]">touchgfx::LCD16bpp::fillRect(const touchgfx::Rect&, touchgfx::colortype, unsigned char)</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bppE)
 <LI><a href="#[1e8]">touchgfx::LCD16bpp::drawGlyph(unsigned short*, touchgfx::Rect, short, short, unsigned short, unsigned short, const touchgfx::Rect&, const touchgfx::GlyphNode*, const unsigned char*, unsigned char, touchgfx::colortype, unsigned char, unsigned char, touchgfx::TextRotation)</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bppE)
 <LI><a href="#[a9]">touchgfx::LCD16bpp::~LCD16bpp()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bppD1Ev) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bppE)
 <LI><a href="#[a9]">touchgfx::LCD16bpp::~LCD16bpp()</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bppD1Ev) referenced from touchgfxconfiguration.o(i.__sti___25_TouchGFXConfiguration_cpp_f5abfd34)
 <LI><a href="#[196]">touchgfx::TextArea::setWidth(short)</a> from digitalclock.o(i._ZN8touchgfx8TextArea8setWidthEs) referenced from digitalclock.o(.constdata__ZTVN8touchgfx23TextAreaWithOneWildcardE)
 <LI><a href="#[196]">touchgfx::TextArea::setWidth(short)</a> from digitalclock.o(i._ZN8touchgfx8TextArea8setWidthEs) referenced from screen1viewbase.o(.constdata__ZTVN8touchgfx24TextAreaWithTwoWildcardsE)
 <LI><a href="#[196]">touchgfx::TextArea::setWidth(short)</a> from digitalclock.o(i._ZN8touchgfx8TextArea8setWidthEs) referenced from textareawithwildcard.o(.constdata__ZTVN8touchgfx24TextAreaWithWildcardBaseE)
 <LI><a href="#[196]">touchgfx::TextArea::setWidth(short)</a> from digitalclock.o(i._ZN8touchgfx8TextArea8setWidthEs) referenced from textarea.o(.constdata__ZTVN8touchgfx8TextAreaE)
 <LI><a href="#[197]">touchgfx::TextArea::setHeight(short)</a> from digitalclock.o(i._ZN8touchgfx8TextArea9setHeightEs) referenced from digitalclock.o(.constdata__ZTVN8touchgfx23TextAreaWithOneWildcardE)
 <LI><a href="#[197]">touchgfx::TextArea::setHeight(short)</a> from digitalclock.o(i._ZN8touchgfx8TextArea9setHeightEs) referenced from screen1viewbase.o(.constdata__ZTVN8touchgfx24TextAreaWithTwoWildcardsE)
 <LI><a href="#[197]">touchgfx::TextArea::setHeight(short)</a> from digitalclock.o(i._ZN8touchgfx8TextArea9setHeightEs) referenced from textareawithwildcard.o(.constdata__ZTVN8touchgfx24TextAreaWithWildcardBaseE)
 <LI><a href="#[197]">touchgfx::TextArea::setHeight(short)</a> from digitalclock.o(i._ZN8touchgfx8TextArea9setHeightEs) referenced from textarea.o(.constdata__ZTVN8touchgfx8TextAreaE)
 <LI><a href="#[1e9]">touchgfx::TextArea::~TextArea()</a> from textarea.o(i._ZN8touchgfx8TextAreaD1Ev) referenced from textarea.o(.constdata__ZTVN8touchgfx8TextAreaE)
 <LI><a href="#[129]">touchgfx::Container::getLastChild(short, short, touchgfx::Drawable**)</a> from container.o(i._ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE) referenced from screen1viewbase.o(.constdata__ZTVN8touchgfx11GraphScrollILs150EEE)
 <LI><a href="#[129]">touchgfx::Container::getLastChild(short, short, touchgfx::Drawable**)</a> from container.o(i._ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE) referenced from digitalclock.o(.constdata__ZTVN8touchgfx12DigitalClockE)
 <LI><a href="#[129]">touchgfx::Container::getLastChild(short, short, touchgfx::Drawable**)</a> from container.o(i._ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE) referenced from abstractclock.o(.constdata__ZTVN8touchgfx13AbstractClockE)
 <LI><a href="#[129]">touchgfx::Container::getLastChild(short, short, touchgfx::Drawable**)</a> from container.o(i._ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE) referenced from imageprogress.o(.constdata__ZTVN8touchgfx13ImageProgressE)
 <LI><a href="#[129]">touchgfx::Container::getLastChild(short, short, touchgfx::Drawable**)</a> from container.o(i._ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE) referenced from abstractdatagraph.o(.constdata__ZTVN8touchgfx16DynamicDataGraphE)
 <LI><a href="#[129]">touchgfx::Container::getLastChild(short, short, touchgfx::Drawable**)</a> from container.o(i._ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE) referenced from abstractdatagraph.o(.constdata__ZTVN8touchgfx17AbstractDataGraphE)
 <LI><a href="#[129]">touchgfx::Container::getLastChild(short, short, touchgfx::Drawable**)</a> from container.o(i._ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE) referenced from abstractdirectionprogress.o(.constdata__ZTVN8touchgfx25AbstractDirectionProgressE)
 <LI><a href="#[129]">touchgfx::Container::getLastChild(short, short, touchgfx::Drawable**)</a> from container.o(i._ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE) referenced from abstractprogressindicator.o(.constdata__ZTVN8touchgfx25AbstractProgressIndicatorE)
 <LI><a href="#[129]">touchgfx::Container::getLastChild(short, short, touchgfx::Drawable**)</a> from container.o(i._ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE) referenced from container.o(.constdata__ZTVN8touchgfx9ContainerE)
 <LI><a href="#[128]">touchgfx::Container::getFirstChild()</a> from abstractclock.o(i._ZN8touchgfx9Container13getFirstChildEv) referenced from screen1viewbase.o(.constdata__ZTVN8touchgfx11GraphScrollILs150EEE)
 <LI><a href="#[128]">touchgfx::Container::getFirstChild()</a> from abstractclock.o(i._ZN8touchgfx9Container13getFirstChildEv) referenced from digitalclock.o(.constdata__ZTVN8touchgfx12DigitalClockE)
 <LI><a href="#[128]">touchgfx::Container::getFirstChild()</a> from abstractclock.o(i._ZN8touchgfx9Container13getFirstChildEv) referenced from abstractclock.o(.constdata__ZTVN8touchgfx13AbstractClockE)
 <LI><a href="#[128]">touchgfx::Container::getFirstChild()</a> from abstractclock.o(i._ZN8touchgfx9Container13getFirstChildEv) referenced from imageprogress.o(.constdata__ZTVN8touchgfx13ImageProgressE)
 <LI><a href="#[128]">touchgfx::Container::getFirstChild()</a> from abstractclock.o(i._ZN8touchgfx9Container13getFirstChildEv) referenced from abstractdatagraph.o(.constdata__ZTVN8touchgfx16DynamicDataGraphE)
 <LI><a href="#[128]">touchgfx::Container::getFirstChild()</a> from abstractclock.o(i._ZN8touchgfx9Container13getFirstChildEv) referenced from abstractdatagraph.o(.constdata__ZTVN8touchgfx17AbstractDataGraphE)
 <LI><a href="#[128]">touchgfx::Container::getFirstChild()</a> from abstractclock.o(i._ZN8touchgfx9Container13getFirstChildEv) referenced from abstractdirectionprogress.o(.constdata__ZTVN8touchgfx25AbstractDirectionProgressE)
 <LI><a href="#[128]">touchgfx::Container::getFirstChild()</a> from abstractclock.o(i._ZN8touchgfx9Container13getFirstChildEv) referenced from abstractprogressindicator.o(.constdata__ZTVN8touchgfx25AbstractProgressIndicatorE)
 <LI><a href="#[128]">touchgfx::Container::getFirstChild()</a> from abstractclock.o(i._ZN8touchgfx9Container13getFirstChildEv) referenced from container.o(.constdata__ZTVN8touchgfx9ContainerE)
 <LI><a href="#[12e]">touchgfx::Container::setupDrawChain(const touchgfx::Rect&, touchgfx::Drawable**)</a> from container.o(i._ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE) referenced from screen1viewbase.o(.constdata__ZTVN8touchgfx11GraphScrollILs150EEE)
 <LI><a href="#[12e]">touchgfx::Container::setupDrawChain(const touchgfx::Rect&, touchgfx::Drawable**)</a> from container.o(i._ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE) referenced from digitalclock.o(.constdata__ZTVN8touchgfx12DigitalClockE)
 <LI><a href="#[12e]">touchgfx::Container::setupDrawChain(const touchgfx::Rect&, touchgfx::Drawable**)</a> from container.o(i._ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE) referenced from abstractclock.o(.constdata__ZTVN8touchgfx13AbstractClockE)
 <LI><a href="#[12e]">touchgfx::Container::setupDrawChain(const touchgfx::Rect&, touchgfx::Drawable**)</a> from container.o(i._ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE) referenced from imageprogress.o(.constdata__ZTVN8touchgfx13ImageProgressE)
 <LI><a href="#[12e]">touchgfx::Container::setupDrawChain(const touchgfx::Rect&, touchgfx::Drawable**)</a> from container.o(i._ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE) referenced from abstractdatagraph.o(.constdata__ZTVN8touchgfx16DynamicDataGraphE)
 <LI><a href="#[12e]">touchgfx::Container::setupDrawChain(const touchgfx::Rect&, touchgfx::Drawable**)</a> from container.o(i._ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE) referenced from abstractdatagraph.o(.constdata__ZTVN8touchgfx17AbstractDataGraphE)
 <LI><a href="#[12e]">touchgfx::Container::setupDrawChain(const touchgfx::Rect&, touchgfx::Drawable**)</a> from container.o(i._ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE) referenced from abstractdirectionprogress.o(.constdata__ZTVN8touchgfx25AbstractDirectionProgressE)
 <LI><a href="#[12e]">touchgfx::Container::setupDrawChain(const touchgfx::Rect&, touchgfx::Drawable**)</a> from container.o(i._ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE) referenced from abstractprogressindicator.o(.constdata__ZTVN8touchgfx25AbstractProgressIndicatorE)
 <LI><a href="#[12e]">touchgfx::Container::setupDrawChain(const touchgfx::Rect&, touchgfx::Drawable**)</a> from container.o(i._ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE) referenced from container.o(.constdata__ZTVN8touchgfx9ContainerE)
 <LI><a href="#[131]">touchgfx::Container::getLastChildNear(short, short, touchgfx::Drawable**, short*, short*)</a> from container.o(i._ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_) referenced from screen1viewbase.o(.constdata__ZTVN8touchgfx11GraphScrollILs150EEE)
 <LI><a href="#[131]">touchgfx::Container::getLastChildNear(short, short, touchgfx::Drawable**, short*, short*)</a> from container.o(i._ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_) referenced from digitalclock.o(.constdata__ZTVN8touchgfx12DigitalClockE)
 <LI><a href="#[131]">touchgfx::Container::getLastChildNear(short, short, touchgfx::Drawable**, short*, short*)</a> from container.o(i._ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_) referenced from abstractclock.o(.constdata__ZTVN8touchgfx13AbstractClockE)
 <LI><a href="#[131]">touchgfx::Container::getLastChildNear(short, short, touchgfx::Drawable**, short*, short*)</a> from container.o(i._ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_) referenced from imageprogress.o(.constdata__ZTVN8touchgfx13ImageProgressE)
 <LI><a href="#[131]">touchgfx::Container::getLastChildNear(short, short, touchgfx::Drawable**, short*, short*)</a> from container.o(i._ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_) referenced from abstractdatagraph.o(.constdata__ZTVN8touchgfx16DynamicDataGraphE)
 <LI><a href="#[131]">touchgfx::Container::getLastChildNear(short, short, touchgfx::Drawable**, short*, short*)</a> from container.o(i._ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_) referenced from abstractdatagraph.o(.constdata__ZTVN8touchgfx17AbstractDataGraphE)
 <LI><a href="#[131]">touchgfx::Container::getLastChildNear(short, short, touchgfx::Drawable**, short*, short*)</a> from container.o(i._ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_) referenced from abstractdirectionprogress.o(.constdata__ZTVN8touchgfx25AbstractDirectionProgressE)
 <LI><a href="#[131]">touchgfx::Container::getLastChildNear(short, short, touchgfx::Drawable**, short*, short*)</a> from container.o(i._ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_) referenced from abstractprogressindicator.o(.constdata__ZTVN8touchgfx25AbstractProgressIndicatorE)
 <LI><a href="#[131]">touchgfx::Container::getLastChildNear(short, short, touchgfx::Drawable**, short*, short*)</a> from container.o(i._ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_) referenced from container.o(.constdata__ZTVN8touchgfx9ContainerE)
 <LI><a href="#[12f]">touchgfx::Container::add(touchgfx::Drawable&)</a> from container.o(i._ZN8touchgfx9Container3addERNS_8DrawableE) referenced from screen1viewbase.o(.constdata__ZTVN8touchgfx11GraphScrollILs150EEE)
 <LI><a href="#[12f]">touchgfx::Container::add(touchgfx::Drawable&)</a> from container.o(i._ZN8touchgfx9Container3addERNS_8DrawableE) referenced from digitalclock.o(.constdata__ZTVN8touchgfx12DigitalClockE)
 <LI><a href="#[12f]">touchgfx::Container::add(touchgfx::Drawable&)</a> from container.o(i._ZN8touchgfx9Container3addERNS_8DrawableE) referenced from abstractclock.o(.constdata__ZTVN8touchgfx13AbstractClockE)
 <LI><a href="#[12f]">touchgfx::Container::add(touchgfx::Drawable&)</a> from container.o(i._ZN8touchgfx9Container3addERNS_8DrawableE) referenced from imageprogress.o(.constdata__ZTVN8touchgfx13ImageProgressE)
 <LI><a href="#[12f]">touchgfx::Container::add(touchgfx::Drawable&)</a> from container.o(i._ZN8touchgfx9Container3addERNS_8DrawableE) referenced from abstractdatagraph.o(.constdata__ZTVN8touchgfx16DynamicDataGraphE)
 <LI><a href="#[12f]">touchgfx::Container::add(touchgfx::Drawable&)</a> from container.o(i._ZN8touchgfx9Container3addERNS_8DrawableE) referenced from abstractdatagraph.o(.constdata__ZTVN8touchgfx17AbstractDataGraphE)
 <LI><a href="#[12f]">touchgfx::Container::add(touchgfx::Drawable&)</a> from container.o(i._ZN8touchgfx9Container3addERNS_8DrawableE) referenced from abstractdirectionprogress.o(.constdata__ZTVN8touchgfx25AbstractDirectionProgressE)
 <LI><a href="#[12f]">touchgfx::Container::add(touchgfx::Drawable&)</a> from container.o(i._ZN8touchgfx9Container3addERNS_8DrawableE) referenced from abstractprogressindicator.o(.constdata__ZTVN8touchgfx25AbstractProgressIndicatorE)
 <LI><a href="#[12f]">touchgfx::Container::add(touchgfx::Drawable&)</a> from container.o(i._ZN8touchgfx9Container3addERNS_8DrawableE) referenced from container.o(.constdata__ZTVN8touchgfx9ContainerE)
 <LI><a href="#[130]">touchgfx::Container::remove(touchgfx::Drawable&)</a> from container.o(i._ZN8touchgfx9Container6removeERNS_8DrawableE) referenced from screen1viewbase.o(.constdata__ZTVN8touchgfx11GraphScrollILs150EEE)
 <LI><a href="#[130]">touchgfx::Container::remove(touchgfx::Drawable&)</a> from container.o(i._ZN8touchgfx9Container6removeERNS_8DrawableE) referenced from digitalclock.o(.constdata__ZTVN8touchgfx12DigitalClockE)
 <LI><a href="#[130]">touchgfx::Container::remove(touchgfx::Drawable&)</a> from container.o(i._ZN8touchgfx9Container6removeERNS_8DrawableE) referenced from abstractclock.o(.constdata__ZTVN8touchgfx13AbstractClockE)
 <LI><a href="#[130]">touchgfx::Container::remove(touchgfx::Drawable&)</a> from container.o(i._ZN8touchgfx9Container6removeERNS_8DrawableE) referenced from imageprogress.o(.constdata__ZTVN8touchgfx13ImageProgressE)
 <LI><a href="#[130]">touchgfx::Container::remove(touchgfx::Drawable&)</a> from container.o(i._ZN8touchgfx9Container6removeERNS_8DrawableE) referenced from abstractdatagraph.o(.constdata__ZTVN8touchgfx16DynamicDataGraphE)
 <LI><a href="#[130]">touchgfx::Container::remove(touchgfx::Drawable&)</a> from container.o(i._ZN8touchgfx9Container6removeERNS_8DrawableE) referenced from abstractdatagraph.o(.constdata__ZTVN8touchgfx17AbstractDataGraphE)
 <LI><a href="#[130]">touchgfx::Container::remove(touchgfx::Drawable&)</a> from container.o(i._ZN8touchgfx9Container6removeERNS_8DrawableE) referenced from abstractdirectionprogress.o(.constdata__ZTVN8touchgfx25AbstractDirectionProgressE)
 <LI><a href="#[130]">touchgfx::Container::remove(touchgfx::Drawable&)</a> from container.o(i._ZN8touchgfx9Container6removeERNS_8DrawableE) referenced from abstractprogressindicator.o(.constdata__ZTVN8touchgfx25AbstractProgressIndicatorE)
 <LI><a href="#[130]">touchgfx::Container::remove(touchgfx::Drawable&)</a> from container.o(i._ZN8touchgfx9Container6removeERNS_8DrawableE) referenced from container.o(.constdata__ZTVN8touchgfx9ContainerE)
 <LI><a href="#[1ec]">touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;Screen1View, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::element_size()</a> from touchgfxconfiguration.o(t._ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv) referenced from touchgfxconfiguration.o(.constdata__ZTVN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EEE)
 <LI><a href="#[1ed]">touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;Screen1View, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::element(unsigned short)</a> from touchgfxconfiguration.o(t._ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EE7elementEt) referenced from touchgfxconfiguration.o(.constdata__ZTVN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EEE)
 <LI><a href="#[1ee]">touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;Screen1Presenter, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::element_size()</a> from touchgfxconfiguration.o(t._ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv) referenced from touchgfxconfiguration.o(.constdata__ZTVN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EEE)
 <LI><a href="#[1ef]">touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;Screen1Presenter, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::element(unsigned short)</a> from touchgfxconfiguration.o(t._ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt) referenced from touchgfxconfiguration.o(.constdata__ZTVN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EEE)
 <LI><a href="#[1f0]">touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;touchgfx::SlideTransition&lang;(touchgfx::Direction)1&rang;, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::element_size()</a> from touchgfxconfiguration.o(t._ZN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE1EEENS2_INS1_3NilES6_EEEELt1EE12element_sizeEv) referenced from touchgfxconfiguration.o(.constdata__ZTVN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE1EEENS2_INS1_3NilES6_EEEELt1EEE)
 <LI><a href="#[1f1]">touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;touchgfx::SlideTransition&lang;(touchgfx::Direction)1&rang;, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::element(unsigned short)</a> from touchgfxconfiguration.o(t._ZN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE1EEENS2_INS1_3NilES6_EEEELt1EE7elementEt) referenced from touchgfxconfiguration.o(.constdata__ZTVN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE1EEENS2_INS1_3NilES6_EEEELt1EEE)
 <LI><a href="#[c5]">TouchGFXHAL::getTFTFrameBuffer() const</a> from touchgfxhal.o(i._ZNK11TouchGFXHAL17getTFTFrameBufferEv) referenced from touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
 <LI><a href="#[10b]">touchgfx::TiledImage::getSolidRect() const</a> from tiledimage.o(i._ZNK8touchgfx10TiledImage12getSolidRectEv) referenced from tiledimage.o(.constdata__ZTVN8touchgfx10TiledImageE)
 <LI><a href="#[10a]">touchgfx::TiledImage::draw(const touchgfx::Rect&) const</a> from tiledimage.o(i._ZNK8touchgfx10TiledImage4drawERKNS_4RectE) referenced from tiledimage.o(.constdata__ZTVN8touchgfx10TiledImageE)
 <LI><a href="#[146]">touchgfx::CanvasWidget::invalidate() const</a> from canvaswidget.o(i._ZNK8touchgfx12CanvasWidget10invalidateEv) referenced from canvaswidget.o(.constdata__ZTVN8touchgfx12CanvasWidgetE)
 <LI><a href="#[146]">touchgfx::CanvasWidget::invalidate() const</a> from canvaswidget.o(i._ZNK8touchgfx12CanvasWidget10invalidateEv) referenced from graphelements.o(.constdata__ZTVN8touchgfx16GraphElementLineE)
 <LI><a href="#[145]">touchgfx::CanvasWidget::getSolidRect() const</a> from canvaswidget.o(i._ZNK8touchgfx12CanvasWidget12getSolidRectEv) referenced from canvaswidget.o(.constdata__ZTVN8touchgfx12CanvasWidgetE)
 <LI><a href="#[145]">touchgfx::CanvasWidget::getSolidRect() const</a> from canvaswidget.o(i._ZNK8touchgfx12CanvasWidget12getSolidRectEv) referenced from graphelements.o(.constdata__ZTVN8touchgfx16GraphElementLineE)
 <LI><a href="#[148]">touchgfx::CanvasWidget::getMinimalRect() const</a> from canvaswidget.o(i._ZNK8touchgfx12CanvasWidget14getMinimalRectEv) referenced from canvaswidget.o(.constdata__ZTVN8touchgfx12CanvasWidgetE)
 <LI><a href="#[148]">touchgfx::CanvasWidget::getMinimalRect() const</a> from canvaswidget.o(i._ZNK8touchgfx12CanvasWidget14getMinimalRectEv) referenced from graphelements.o(.constdata__ZTVN8touchgfx16GraphElementLineE)
 <LI><a href="#[144]">touchgfx::CanvasWidget::draw(const touchgfx::Rect&) const</a> from canvaswidget.o(i._ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE) referenced from canvaswidget.o(.constdata__ZTVN8touchgfx12CanvasWidgetE)
 <LI><a href="#[144]">touchgfx::CanvasWidget::draw(const touchgfx::Rect&) const</a> from canvaswidget.o(i._ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE) referenced from graphelements.o(.constdata__ZTVN8touchgfx16GraphElementLineE)
 <LI><a href="#[147]">touchgfx::CanvasWidget::getAlpha() const</a> from canvaswidget.o(i._ZNK8touchgfx12CanvasWidget8getAlphaEv) referenced from canvaswidget.o(.constdata__ZTVN8touchgfx12CanvasWidgetE)
 <LI><a href="#[147]">touchgfx::CanvasWidget::getAlpha() const</a> from canvaswidget.o(i._ZNK8touchgfx12CanvasWidget8getAlphaEv) referenced from graphelements.o(.constdata__ZTVN8touchgfx16GraphElementLineE)
 <LI><a href="#[15b]">touchgfx::GeneratedFont::getKerning(unsigned short, const touchgfx::GlyphNode*) const</a> from generatedfont.o(i._ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE) referenced from generatedfont.o(.constdata__ZTVN8touchgfx13GeneratedFontE)
 <LI><a href="#[15c]">touchgfx::GeneratedFont::getGSUBTable() const</a> from generatedfont.o(i._ZNK8touchgfx13GeneratedFont12getGSUBTableEv) referenced from generatedfont.o(.constdata__ZTVN8touchgfx13GeneratedFontE)
 <LI><a href="#[15e]">touchgfx::GeneratedFont::getPixelData(const touchgfx::GlyphNode*) const</a> from generatedfont.o(i._ZNK8touchgfx13GeneratedFont12getPixelDataEPKNS_9GlyphNodeE) referenced from generatedfont.o(.constdata__ZTVN8touchgfx13GeneratedFontE)
 <LI><a href="#[15d]">touchgfx::GeneratedFont::getContextualFormsTable() const</a> from generatedfont.o(i._ZNK8touchgfx13GeneratedFont23getContextualFormsTableEv) referenced from generatedfont.o(.constdata__ZTVN8touchgfx13GeneratedFontE)
 <LI><a href="#[16a]">touchgfx::PainterRGB565::getRenderingMethod() const</a> from painterrgb565.o(i._ZNK8touchgfx13PainterRGB56518getRenderingMethodEv) referenced from painterrgb565.o(.constdata__ZTVN8touchgfx13PainterRGB565E)
 <LI><a href="#[16d]">touchgfx::PainterRGB565::paint(unsigned char*, short, short, short, short, unsigned char) const</a> from painterrgb565.o(i._ZNK8touchgfx13PainterRGB5655paintEPhssssh) referenced from painterrgb565.o(.constdata__ZTVN8touchgfx13PainterRGB565E)
 <LI><a href="#[16c]">touchgfx::PainterRGB565::tearDown() const</a> from painterrgb565.o(i._ZNK8touchgfx13PainterRGB5658tearDownEv) referenced from painterrgb565.o(.constdata__ZTVN8touchgfx13PainterRGB565E)
 <LI><a href="#[170]">touchgfx::ScalableImage::getSolidRect() const</a> from scalableimage.o(i._ZNK8touchgfx13ScalableImage12getSolidRectEv) referenced from scalableimage.o(.constdata__ZTVN8touchgfx13ScalableImageE)
 <LI><a href="#[16f]">touchgfx::ScalableImage::draw(const touchgfx::Rect&) const</a> from scalableimage.o(i._ZNK8touchgfx13ScalableImage4drawERKNS_4RectE) referenced from scalableimage.o(.constdata__ZTVN8touchgfx13ScalableImageE)
 <LI><a href="#[174]">touchgfx::TextureMapper::getSolidRect() const</a> from texturemapper.o(i._ZNK8touchgfx13TextureMapper12getSolidRectEv) referenced from texturemapper.o(.constdata__ZTVN8touchgfx13TextureMapperE)
 <LI><a href="#[175]">touchgfx::TextureMapper::invalidateContent() const</a> from texturemapper.o(i._ZNK8touchgfx13TextureMapper17invalidateContentEv) referenced from texturemapper.o(.constdata__ZTVN8touchgfx13TextureMapperE)
 <LI><a href="#[173]">touchgfx::TextureMapper::draw(const touchgfx::Rect&) const</a> from texturemapper.o(i._ZNK8touchgfx13TextureMapper4drawERKNS_4RectE) referenced from texturemapper.o(.constdata__ZTVN8touchgfx13TextureMapperE)
 <LI><a href="#[17f]">touchgfx::SnapshotWidget::getSolidRect() const</a> from snapshotwidget.o(i._ZNK8touchgfx14SnapshotWidget12getSolidRectEv) referenced from snapshotwidget.o(.constdata__ZTVN8touchgfx14SnapshotWidgetE)
 <LI><a href="#[17e]">touchgfx::SnapshotWidget::draw(const touchgfx::Rect&) const</a> from snapshotwidget.o(i._ZNK8touchgfx14SnapshotWidget4drawERKNS_4RectE) referenced from snapshotwidget.o(.constdata__ZTVN8touchgfx14SnapshotWidgetE)
 <LI><a href="#[191]">touchgfx::AbstractPainter::getRenderingMethod() const</a> from screen1viewbase.o(i._ZNK8touchgfx15AbstractPainter18getRenderingMethodEv) referenced from screen1viewbase.o(.constdata__ZTVN8touchgfx21AbstractPainterRGB565E)
 <LI><a href="#[16b]">touchgfx::AbstractPainter::setup(const touchgfx::Rect&) const</a> from painterrgb565.o(i._ZNK8touchgfx15AbstractPainter5setupERKNS_4RectE) referenced from painterrgb565.o(.constdata__ZTVN8touchgfx13PainterRGB565E)
 <LI><a href="#[16b]">touchgfx::AbstractPainter::setup(const touchgfx::Rect&) const</a> from painterrgb565.o(i._ZNK8touchgfx15AbstractPainter5setupERKNS_4RectE) referenced from screen1viewbase.o(.constdata__ZTVN8touchgfx21AbstractPainterRGB565E)
 <LI><a href="#[192]">touchgfx::AbstractPainter::tearDown() const</a> from screen1viewbase.o(i._ZNK8touchgfx15AbstractPainter8tearDownEv) referenced from screen1viewbase.o(.constdata__ZTVN8touchgfx21AbstractPainterRGB565E)
 <LI><a href="#[143]">touchgfx::GraphScrollData::dataIndex(short) const</a> from graphscroll.o(i._ZNK8touchgfx15GraphScrollData9dataIndexEs) referenced from screen1viewbase.o(.constdata__ZTVN8touchgfx11GraphScrollILs150EEE)
 <LI><a href="#[13d]">touchgfx::DynamicDataGraph::indexToScreenXQ5(short) const</a> from abstractdatagraph.o(i._ZNK8touchgfx16DynamicDataGraph16indexToScreenXQ5Es) referenced from screen1viewbase.o(.constdata__ZTVN8touchgfx11GraphScrollILs150EEE)
 <LI><a href="#[13d]">touchgfx::DynamicDataGraph::indexToScreenXQ5(short) const</a> from abstractdatagraph.o(i._ZNK8touchgfx16DynamicDataGraph16indexToScreenXQ5Es) referenced from abstractdatagraph.o(.constdata__ZTVN8touchgfx16DynamicDataGraphE)
 <LI><a href="#[13e]">touchgfx::DynamicDataGraph::indexToScreenYQ5(short) const</a> from abstractdatagraph.o(i._ZNK8touchgfx16DynamicDataGraph16indexToScreenYQ5Es) referenced from screen1viewbase.o(.constdata__ZTVN8touchgfx11GraphScrollILs150EEE)
 <LI><a href="#[13e]">touchgfx::DynamicDataGraph::indexToScreenYQ5(short) const</a> from abstractdatagraph.o(i._ZNK8touchgfx16DynamicDataGraph16indexToScreenYQ5Es) referenced from abstractdatagraph.o(.constdata__ZTVN8touchgfx16DynamicDataGraphE)
 <LI><a href="#[13f]">touchgfx::DynamicDataGraph::xScreenRangeToIndexRange(short, short, short&, short&) const</a> from abstractdatagraph.o(i._ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_) referenced from screen1viewbase.o(.constdata__ZTVN8touchgfx11GraphScrollILs150EEE)
 <LI><a href="#[13f]">touchgfx::DynamicDataGraph::xScreenRangeToIndexRange(short, short, short&, short&) const</a> from abstractdatagraph.o(i._ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_) referenced from abstractdatagraph.o(.constdata__ZTVN8touchgfx16DynamicDataGraphE)
 <LI><a href="#[187]">touchgfx::DynamicDataGraph::dataIndex(short) const</a> from abstractdatagraph.o(i._ZNK8touchgfx16DynamicDataGraph9dataIndexEs) referenced from abstractdatagraph.o(.constdata__ZTVN8touchgfx16DynamicDataGraphE)
 <LI><a href="#[133]">touchgfx::DynamicDataGraph::getScaleX() const</a> from abstractdatagraph.o(i._ZNK8touchgfx16DynamicDataGraph9getScaleXEv) referenced from screen1viewbase.o(.constdata__ZTVN8touchgfx11GraphScrollILs150EEE)
 <LI><a href="#[133]">touchgfx::DynamicDataGraph::getScaleX() const</a> from abstractdatagraph.o(i._ZNK8touchgfx16DynamicDataGraph9getScaleXEv) referenced from abstractdatagraph.o(.constdata__ZTVN8touchgfx16DynamicDataGraphE)
 <LI><a href="#[135]">touchgfx::DynamicDataGraph::getScaleY() const</a> from abstractdatagraph.o(i._ZNK8touchgfx16DynamicDataGraph9getScaleYEv) referenced from screen1viewbase.o(.constdata__ZTVN8touchgfx11GraphScrollILs150EEE)
 <LI><a href="#[135]">touchgfx::DynamicDataGraph::getScaleY() const</a> from abstractdatagraph.o(i._ZNK8touchgfx16DynamicDataGraph9getScaleYEv) referenced from abstractdatagraph.o(.constdata__ZTVN8touchgfx16DynamicDataGraphE)
 <LI><a href="#[188]">touchgfx::GraphElementLine::drawCanvasWidget(const touchgfx::Rect&) const</a> from graphelements.o(i._ZNK8touchgfx16GraphElementLine16drawCanvasWidgetERKNS_4RectE) referenced from graphelements.o(.constdata__ZTVN8touchgfx16GraphElementLineE)
 <LI><a href="#[13b]">touchgfx::AbstractDataGraph::valueToScreenXQ5(int) const</a> from abstractdatagraph.o(i._ZNK8touchgfx17AbstractDataGraph16valueToScreenXQ5Ei) referenced from screen1viewbase.o(.constdata__ZTVN8touchgfx11GraphScrollILs150EEE)
 <LI><a href="#[13b]">touchgfx::AbstractDataGraph::valueToScreenXQ5(int) const</a> from abstractdatagraph.o(i._ZNK8touchgfx17AbstractDataGraph16valueToScreenXQ5Ei) referenced from abstractdatagraph.o(.constdata__ZTVN8touchgfx16DynamicDataGraphE)
 <LI><a href="#[13b]">touchgfx::AbstractDataGraph::valueToScreenXQ5(int) const</a> from abstractdatagraph.o(i._ZNK8touchgfx17AbstractDataGraph16valueToScreenXQ5Ei) referenced from abstractdatagraph.o(.constdata__ZTVN8touchgfx17AbstractDataGraphE)
 <LI><a href="#[13c]">touchgfx::AbstractDataGraph::valueToScreenYQ5(int) const</a> from abstractdatagraph.o(i._ZNK8touchgfx17AbstractDataGraph16valueToScreenYQ5Ei) referenced from screen1viewbase.o(.constdata__ZTVN8touchgfx11GraphScrollILs150EEE)
 <LI><a href="#[13c]">touchgfx::AbstractDataGraph::valueToScreenYQ5(int) const</a> from abstractdatagraph.o(i._ZNK8touchgfx17AbstractDataGraph16valueToScreenYQ5Ei) referenced from abstractdatagraph.o(.constdata__ZTVN8touchgfx16DynamicDataGraphE)
 <LI><a href="#[13c]">touchgfx::AbstractDataGraph::valueToScreenYQ5(int) const</a> from abstractdatagraph.o(i._ZNK8touchgfx17AbstractDataGraph16valueToScreenYQ5Ei) referenced from abstractdatagraph.o(.constdata__ZTVN8touchgfx17AbstractDataGraphE)
 <LI><a href="#[13a]">touchgfx::AbstractDataGraph::getNearestIndexForScreenX(short, short&) const</a> from abstractdatagraph.o(i._ZNK8touchgfx17AbstractDataGraph25getNearestIndexForScreenXEsRs) referenced from screen1viewbase.o(.constdata__ZTVN8touchgfx11GraphScrollILs150EEE)
 <LI><a href="#[13a]">touchgfx::AbstractDataGraph::getNearestIndexForScreenX(short, short&) const</a> from abstractdatagraph.o(i._ZNK8touchgfx17AbstractDataGraph25getNearestIndexForScreenXEsRs) referenced from abstractdatagraph.o(.constdata__ZTVN8touchgfx16DynamicDataGraphE)
 <LI><a href="#[13a]">touchgfx::AbstractDataGraph::getNearestIndexForScreenX(short, short&) const</a> from abstractdatagraph.o(i._ZNK8touchgfx17AbstractDataGraph25getNearestIndexForScreenXEsRs) referenced from abstractdatagraph.o(.constdata__ZTVN8touchgfx17AbstractDataGraphE)
 <LI><a href="#[18b]">touchgfx::LCD16DebugPrinter::draw(const touchgfx::Rect&) const</a> from lcd16debugprinter.o(i._ZNK8touchgfx17LCD16DebugPrinter4drawERKNS_4RectE) referenced from lcd16debugprinter.o(.constdata__ZTVN8touchgfx17LCD16DebugPrinterE)
 <LI><a href="#[19c]">touchgfx::TextAreaWithOneWildcard::getWildcard1() const</a> from digitalclock.o(i._ZNK8touchgfx23TextAreaWithOneWildcard12getWildcard1Ev) referenced from digitalclock.o(.constdata__ZTVN8touchgfx23TextAreaWithOneWildcardE)
 <LI><a href="#[1a0]">touchgfx::TextAreaWithTwoWildcards::getWildcard1() const</a> from screen1viewbase.o(i._ZNK8touchgfx24TextAreaWithTwoWildcards12getWildcard1Ev) referenced from screen1viewbase.o(.constdata__ZTVN8touchgfx24TextAreaWithTwoWildcardsE)
 <LI><a href="#[1a1]">touchgfx::TextAreaWithTwoWildcards::getWildcard2() const</a> from screen1viewbase.o(i._ZNK8touchgfx24TextAreaWithTwoWildcards12getWildcard2Ev) referenced from screen1viewbase.o(.constdata__ZTVN8touchgfx24TextAreaWithTwoWildcardsE)
 <LI><a href="#[19e]">touchgfx::TextAreaWithWildcardBase::calculateBoundingArea() const</a> from digitalclock.o(i._ZNK8touchgfx24TextAreaWithWildcardBase21calculateBoundingAreaEv) referenced from digitalclock.o(.constdata__ZTVN8touchgfx23TextAreaWithOneWildcardE)
 <LI><a href="#[19e]">touchgfx::TextAreaWithWildcardBase::calculateBoundingArea() const</a> from digitalclock.o(i._ZNK8touchgfx24TextAreaWithWildcardBase21calculateBoundingAreaEv) referenced from screen1viewbase.o(.constdata__ZTVN8touchgfx24TextAreaWithTwoWildcardsE)
 <LI><a href="#[19e]">touchgfx::TextAreaWithWildcardBase::calculateBoundingArea() const</a> from digitalclock.o(i._ZNK8touchgfx24TextAreaWithWildcardBase21calculateBoundingAreaEv) referenced from textareawithwildcard.o(.constdata__ZTVN8touchgfx24TextAreaWithWildcardBaseE)
 <LI><a href="#[194]">touchgfx::TextAreaWithWildcardBase::draw(const touchgfx::Rect&) const</a> from textareawithwildcard.o(i._ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE) referenced from digitalclock.o(.constdata__ZTVN8touchgfx23TextAreaWithOneWildcardE)
 <LI><a href="#[194]">touchgfx::TextAreaWithWildcardBase::draw(const touchgfx::Rect&) const</a> from textareawithwildcard.o(i._ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE) referenced from screen1viewbase.o(.constdata__ZTVN8touchgfx24TextAreaWithTwoWildcardsE)
 <LI><a href="#[194]">touchgfx::TextAreaWithWildcardBase::draw(const touchgfx::Rect&) const</a> from textareawithwildcard.o(i._ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE) referenced from textareawithwildcard.o(.constdata__ZTVN8touchgfx24TextAreaWithWildcardBaseE)
 <LI><a href="#[166]">touchgfx::AbstractProgressIndicator::getProgress(unsigned short) const</a> from abstractprogressindicator.o(i._ZNK8touchgfx25AbstractProgressIndicator11getProgressEt) referenced from imageprogress.o(.constdata__ZTVN8touchgfx13ImageProgressE)
 <LI><a href="#[166]">touchgfx::AbstractProgressIndicator::getProgress(unsigned short) const</a> from abstractprogressindicator.o(i._ZNK8touchgfx25AbstractProgressIndicator11getProgressEt) referenced from abstractdirectionprogress.o(.constdata__ZTVN8touchgfx25AbstractDirectionProgressE)
 <LI><a href="#[166]">touchgfx::AbstractProgressIndicator::getProgress(unsigned short) const</a> from abstractprogressindicator.o(i._ZNK8touchgfx25AbstractProgressIndicator11getProgressEt) referenced from abstractprogressindicator.o(.constdata__ZTVN8touchgfx25AbstractProgressIndicatorE)
 <LI><a href="#[165]">touchgfx::AbstractProgressIndicator::getValue() const</a> from abstractprogressindicator.o(i._ZNK8touchgfx25AbstractProgressIndicator8getValueEv) referenced from imageprogress.o(.constdata__ZTVN8touchgfx13ImageProgressE)
 <LI><a href="#[165]">touchgfx::AbstractProgressIndicator::getValue() const</a> from abstractprogressindicator.o(i._ZNK8touchgfx25AbstractProgressIndicator8getValueEv) referenced from abstractdirectionprogress.o(.constdata__ZTVN8touchgfx25AbstractDirectionProgressE)
 <LI><a href="#[165]">touchgfx::AbstractProgressIndicator::getValue() const</a> from abstractprogressindicator.o(i._ZNK8touchgfx25AbstractProgressIndicator8getValueEv) referenced from abstractprogressindicator.o(.constdata__ZTVN8touchgfx25AbstractProgressIndicatorE)
 <LI><a href="#[1a6]">touchgfx::Box::getSolidRect() const</a> from box.o(i._ZNK8touchgfx3Box12getSolidRectEv) referenced from box.o(.constdata__ZTVN8touchgfx3BoxE)
 <LI><a href="#[1a5]">touchgfx::Box::draw(const touchgfx::Rect&) const</a> from box.o(i._ZNK8touchgfx3Box4drawERKNS_4RectE) referenced from box.o(.constdata__ZTVN8touchgfx3BoxE)
 <LI><a href="#[1ac]">touchgfx::Font::getKerning(unsigned short, const touchgfx::GlyphNode*) const</a> from texts.o(i._ZNK8touchgfx4Font10getKerningEtPKNS_9GlyphNodeE) referenced from texts.o(.constdata__ZTVN8touchgfx4FontE)
 <LI><a href="#[157]">touchgfx::Font::getBaseline() const</a> from constfont.o(i._ZNK8touchgfx4Font11getBaselineEv) referenced from generatedfont.o(.constdata__ZTVN8touchgfx13GeneratedFontE)
 <LI><a href="#[157]">touchgfx::Font::getBaseline() const</a> from constfont.o(i._ZNK8touchgfx4Font11getBaselineEv) referenced from texts.o(.constdata__ZTVN8touchgfx4FontE)
 <LI><a href="#[157]">touchgfx::Font::getBaseline() const</a> from constfont.o(i._ZNK8touchgfx4Font11getBaselineEv) referenced from constfont.o(.constdata__ZTVN8touchgfx9ConstFontE)
 <LI><a href="#[1ad]">touchgfx::Font::getGSUBTable() const</a> from constfont.o(i._ZNK8touchgfx4Font12getGSUBTableEv) referenced from texts.o(.constdata__ZTVN8touchgfx4FontE)
 <LI><a href="#[1ad]">touchgfx::Font::getGSUBTable() const</a> from constfont.o(i._ZNK8touchgfx4Font12getGSUBTableEv) referenced from constfont.o(.constdata__ZTVN8touchgfx9ConstFontE)
 <LI><a href="#[156]">touchgfx::Font::getStringWidth(unsigned char, const unsigned short*, ...) const</a> from texts.o(i._ZNK8touchgfx4Font14getStringWidthEhPKtz) referenced from generatedfont.o(.constdata__ZTVN8touchgfx13GeneratedFontE)
 <LI><a href="#[156]">touchgfx::Font::getStringWidth(unsigned char, const unsigned short*, ...) const</a> from texts.o(i._ZNK8touchgfx4Font14getStringWidthEhPKtz) referenced from texts.o(.constdata__ZTVN8touchgfx4FontE)
 <LI><a href="#[156]">touchgfx::Font::getStringWidth(unsigned char, const unsigned short*, ...) const</a> from texts.o(i._ZNK8touchgfx4Font14getStringWidthEhPKtz) referenced from constfont.o(.constdata__ZTVN8touchgfx9ConstFontE)
 <LI><a href="#[159]">touchgfx::Font::getBitsPerPixel() const</a> from constfont.o(i._ZNK8touchgfx4Font15getBitsPerPixelEv) referenced from generatedfont.o(.constdata__ZTVN8touchgfx13GeneratedFontE)
 <LI><a href="#[159]">touchgfx::Font::getBitsPerPixel() const</a> from constfont.o(i._ZNK8touchgfx4Font15getBitsPerPixelEv) referenced from texts.o(.constdata__ZTVN8touchgfx4FontE)
 <LI><a href="#[159]">touchgfx::Font::getBitsPerPixel() const</a> from constfont.o(i._ZNK8touchgfx4Font15getBitsPerPixelEv) referenced from constfont.o(.constdata__ZTVN8touchgfx9ConstFontE)
 <LI><a href="#[15a]">touchgfx::Font::getByteAlignRow() const</a> from constfont.o(i._ZNK8touchgfx4Font15getByteAlignRowEv) referenced from generatedfont.o(.constdata__ZTVN8touchgfx13GeneratedFontE)
 <LI><a href="#[15a]">touchgfx::Font::getByteAlignRow() const</a> from constfont.o(i._ZNK8touchgfx4Font15getByteAlignRowEv) referenced from texts.o(.constdata__ZTVN8touchgfx4FontE)
 <LI><a href="#[15a]">touchgfx::Font::getByteAlignRow() const</a> from constfont.o(i._ZNK8touchgfx4Font15getByteAlignRowEv) referenced from constfont.o(.constdata__ZTVN8touchgfx9ConstFontE)
 <LI><a href="#[155]">touchgfx::Font::getEllipsisChar() const</a> from constfont.o(i._ZNK8touchgfx4Font15getEllipsisCharEv) referenced from generatedfont.o(.constdata__ZTVN8touchgfx13GeneratedFontE)
 <LI><a href="#[155]">touchgfx::Font::getEllipsisChar() const</a> from constfont.o(i._ZNK8touchgfx4Font15getEllipsisCharEv) referenced from texts.o(.constdata__ZTVN8touchgfx4FontE)
 <LI><a href="#[155]">touchgfx::Font::getEllipsisChar() const</a> from constfont.o(i._ZNK8touchgfx4Font15getEllipsisCharEv) referenced from constfont.o(.constdata__ZTVN8touchgfx9ConstFontE)
 <LI><a href="#[154]">touchgfx::Font::getFallbackChar() const</a> from constfont.o(i._ZNK8touchgfx4Font15getFallbackCharEv) referenced from generatedfont.o(.constdata__ZTVN8touchgfx13GeneratedFontE)
 <LI><a href="#[154]">touchgfx::Font::getFallbackChar() const</a> from constfont.o(i._ZNK8touchgfx4Font15getFallbackCharEv) referenced from texts.o(.constdata__ZTVN8touchgfx4FontE)
 <LI><a href="#[154]">touchgfx::Font::getFallbackChar() const</a> from constfont.o(i._ZNK8touchgfx4Font15getFallbackCharEv) referenced from constfont.o(.constdata__ZTVN8touchgfx9ConstFontE)
 <LI><a href="#[1ae]">touchgfx::Font::getContextualFormsTable() const</a> from constfont.o(i._ZNK8touchgfx4Font23getContextualFormsTableEv) referenced from texts.o(.constdata__ZTVN8touchgfx4FontE)
 <LI><a href="#[1ae]">touchgfx::Font::getContextualFormsTable() const</a> from constfont.o(i._ZNK8touchgfx4Font23getContextualFormsTableEv) referenced from constfont.o(.constdata__ZTVN8touchgfx9ConstFontE)
 <LI><a href="#[153]">touchgfx::Font::getGlyph(unsigned short) const</a> from constfont.o(i._ZNK8touchgfx4Font8getGlyphEt) referenced from generatedfont.o(.constdata__ZTVN8touchgfx13GeneratedFontE)
 <LI><a href="#[153]">touchgfx::Font::getGlyph(unsigned short) const</a> from constfont.o(i._ZNK8touchgfx4Font8getGlyphEt) referenced from texts.o(.constdata__ZTVN8touchgfx4FontE)
 <LI><a href="#[153]">touchgfx::Font::getGlyph(unsigned short) const</a> from constfont.o(i._ZNK8touchgfx4Font8getGlyphEt) referenced from constfont.o(.constdata__ZTVN8touchgfx9ConstFontE)
 <LI><a href="#[158]">touchgfx::Font::getHeight() const</a> from constfont.o(i._ZNK8touchgfx4Font9getHeightEv) referenced from generatedfont.o(.constdata__ZTVN8touchgfx13GeneratedFontE)
 <LI><a href="#[158]">touchgfx::Font::getHeight() const</a> from constfont.o(i._ZNK8touchgfx4Font9getHeightEv) referenced from texts.o(.constdata__ZTVN8touchgfx4FontE)
 <LI><a href="#[158]">touchgfx::Font::getHeight() const</a> from constfont.o(i._ZNK8touchgfx4Font9getHeightEv) referenced from constfont.o(.constdata__ZTVN8touchgfx9ConstFontE)
 <LI><a href="#[1b0]">touchgfx::Image::getSolidRect() const</a> from image.o(i._ZNK8touchgfx5Image12getSolidRectEv) referenced from image.o(.constdata__ZTVN8touchgfx5ImageE)
 <LI><a href="#[1af]">touchgfx::Image::draw(const touchgfx::Rect&) const</a> from image.o(i._ZNK8touchgfx5Image4drawERKNS_4RectE) referenced from image.o(.constdata__ZTVN8touchgfx5ImageE)
 <LI><a href="#[1b6]">touchgfx::Callback&lang;FrontendApplicationBase, void, void, void&rang;::isValid() const</a> from frontendapplicationbase.o(t._ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv) referenced from frontendapplicationbase.o(.constdata__ZTVN8touchgfx8CallbackI23FrontendApplicationBasevvvEE)
 <LI><a href="#[10d]">touchgfx::Drawable::invalidate() const</a> from drawable.o(i._ZNK8touchgfx8Drawable10invalidateEv) referenced from tiledimage.o(.constdata__ZTVN8touchgfx10TiledImageE)
 <LI><a href="#[10d]">touchgfx::Drawable::invalidate() const</a> from drawable.o(i._ZNK8touchgfx8Drawable10invalidateEv) referenced from screen1viewbase.o(.constdata__ZTVN8touchgfx11GraphScrollILs150EEE)
 <LI><a href="#[10d]">touchgfx::Drawable::invalidate() const</a> from drawable.o(i._ZNK8touchgfx8Drawable10invalidateEv) referenced from digitalclock.o(.constdata__ZTVN8touchgfx12DigitalClockE)
 <LI><a href="#[10d]">touchgfx::Drawable::invalidate() const</a> from drawable.o(i._ZNK8touchgfx8Drawable10invalidateEv) referenced from abstractclock.o(.constdata__ZTVN8touchgfx13AbstractClockE)
 <LI><a href="#[10d]">touchgfx::Drawable::invalidate() const</a> from drawable.o(i._ZNK8touchgfx8Drawable10invalidateEv) referenced from imageprogress.o(.constdata__ZTVN8touchgfx13ImageProgressE)
 <LI><a href="#[10d]">touchgfx::Drawable::invalidate() const</a> from drawable.o(i._ZNK8touchgfx8Drawable10invalidateEv) referenced from scalableimage.o(.constdata__ZTVN8touchgfx13ScalableImageE)
 <LI><a href="#[10d]">touchgfx::Drawable::invalidate() const</a> from drawable.o(i._ZNK8touchgfx8Drawable10invalidateEv) referenced from texturemapper.o(.constdata__ZTVN8touchgfx13TextureMapperE)
 <LI><a href="#[10d]">touchgfx::Drawable::invalidate() const</a> from drawable.o(i._ZNK8touchgfx8Drawable10invalidateEv) referenced from snapshotwidget.o(.constdata__ZTVN8touchgfx14SnapshotWidgetE)
 <LI><a href="#[10d]">touchgfx::Drawable::invalidate() const</a> from drawable.o(i._ZNK8touchgfx8Drawable10invalidateEv) referenced from abstractdatagraph.o(.constdata__ZTVN8touchgfx16DynamicDataGraphE)
 <LI><a href="#[10d]">touchgfx::Drawable::invalidate() const</a> from drawable.o(i._ZNK8touchgfx8Drawable10invalidateEv) referenced from abstractdatagraph.o(.constdata__ZTVN8touchgfx17AbstractDataGraphE)
 <LI><a href="#[10d]">touchgfx::Drawable::invalidate() const</a> from drawable.o(i._ZNK8touchgfx8Drawable10invalidateEv) referenced from digitalclock.o(.constdata__ZTVN8touchgfx23TextAreaWithOneWildcardE)
 <LI><a href="#[10d]">touchgfx::Drawable::invalidate() const</a> from drawable.o(i._ZNK8touchgfx8Drawable10invalidateEv) referenced from screen1viewbase.o(.constdata__ZTVN8touchgfx24TextAreaWithTwoWildcardsE)
 <LI><a href="#[10d]">touchgfx::Drawable::invalidate() const</a> from drawable.o(i._ZNK8touchgfx8Drawable10invalidateEv) referenced from textareawithwildcard.o(.constdata__ZTVN8touchgfx24TextAreaWithWildcardBaseE)
 <LI><a href="#[10d]">touchgfx::Drawable::invalidate() const</a> from drawable.o(i._ZNK8touchgfx8Drawable10invalidateEv) referenced from abstractdirectionprogress.o(.constdata__ZTVN8touchgfx25AbstractDirectionProgressE)
 <LI><a href="#[10d]">touchgfx::Drawable::invalidate() const</a> from drawable.o(i._ZNK8touchgfx8Drawable10invalidateEv) referenced from abstractprogressindicator.o(.constdata__ZTVN8touchgfx25AbstractProgressIndicatorE)
 <LI><a href="#[10d]">touchgfx::Drawable::invalidate() const</a> from drawable.o(i._ZNK8touchgfx8Drawable10invalidateEv) referenced from box.o(.constdata__ZTVN8touchgfx3BoxE)
 <LI><a href="#[10d]">touchgfx::Drawable::invalidate() const</a> from drawable.o(i._ZNK8touchgfx8Drawable10invalidateEv) referenced from image.o(.constdata__ZTVN8touchgfx5ImageE)
 <LI><a href="#[10d]">touchgfx::Drawable::invalidate() const</a> from drawable.o(i._ZNK8touchgfx8Drawable10invalidateEv) referenced from screen1viewbase.o(.constdata__ZTVN8touchgfx6WidgetE)
 <LI><a href="#[10d]">touchgfx::Drawable::invalidate() const</a> from drawable.o(i._ZNK8touchgfx8Drawable10invalidateEv) referenced from drawable.o(.constdata__ZTVN8touchgfx8DrawableE)
 <LI><a href="#[10d]">touchgfx::Drawable::invalidate() const</a> from drawable.o(i._ZNK8touchgfx8Drawable10invalidateEv) referenced from textarea.o(.constdata__ZTVN8touchgfx8TextAreaE)
 <LI><a href="#[10d]">touchgfx::Drawable::invalidate() const</a> from drawable.o(i._ZNK8touchgfx8Drawable10invalidateEv) referenced from container.o(.constdata__ZTVN8touchgfx9ContainerE)
 <LI><a href="#[10f]">touchgfx::Drawable::getVisibleRect(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE) referenced from tiledimage.o(.constdata__ZTVN8touchgfx10TiledImageE)
 <LI><a href="#[10f]">touchgfx::Drawable::getVisibleRect(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE) referenced from screen1viewbase.o(.constdata__ZTVN8touchgfx11GraphScrollILs150EEE)
 <LI><a href="#[10f]">touchgfx::Drawable::getVisibleRect(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE) referenced from canvaswidget.o(.constdata__ZTVN8touchgfx12CanvasWidgetE)
 <LI><a href="#[10f]">touchgfx::Drawable::getVisibleRect(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE) referenced from digitalclock.o(.constdata__ZTVN8touchgfx12DigitalClockE)
 <LI><a href="#[10f]">touchgfx::Drawable::getVisibleRect(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE) referenced from abstractclock.o(.constdata__ZTVN8touchgfx13AbstractClockE)
 <LI><a href="#[10f]">touchgfx::Drawable::getVisibleRect(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE) referenced from imageprogress.o(.constdata__ZTVN8touchgfx13ImageProgressE)
 <LI><a href="#[10f]">touchgfx::Drawable::getVisibleRect(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE) referenced from scalableimage.o(.constdata__ZTVN8touchgfx13ScalableImageE)
 <LI><a href="#[10f]">touchgfx::Drawable::getVisibleRect(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE) referenced from texturemapper.o(.constdata__ZTVN8touchgfx13TextureMapperE)
 <LI><a href="#[10f]">touchgfx::Drawable::getVisibleRect(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE) referenced from snapshotwidget.o(.constdata__ZTVN8touchgfx14SnapshotWidgetE)
 <LI><a href="#[10f]">touchgfx::Drawable::getVisibleRect(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE) referenced from abstractdatagraph.o(.constdata__ZTVN8touchgfx16DynamicDataGraphE)
 <LI><a href="#[10f]">touchgfx::Drawable::getVisibleRect(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE) referenced from graphelements.o(.constdata__ZTVN8touchgfx16GraphElementLineE)
 <LI><a href="#[10f]">touchgfx::Drawable::getVisibleRect(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE) referenced from abstractdatagraph.o(.constdata__ZTVN8touchgfx17AbstractDataGraphE)
 <LI><a href="#[10f]">touchgfx::Drawable::getVisibleRect(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE) referenced from digitalclock.o(.constdata__ZTVN8touchgfx23TextAreaWithOneWildcardE)
 <LI><a href="#[10f]">touchgfx::Drawable::getVisibleRect(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE) referenced from screen1viewbase.o(.constdata__ZTVN8touchgfx24TextAreaWithTwoWildcardsE)
 <LI><a href="#[10f]">touchgfx::Drawable::getVisibleRect(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE) referenced from textareawithwildcard.o(.constdata__ZTVN8touchgfx24TextAreaWithWildcardBaseE)
 <LI><a href="#[10f]">touchgfx::Drawable::getVisibleRect(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE) referenced from abstractdirectionprogress.o(.constdata__ZTVN8touchgfx25AbstractDirectionProgressE)
 <LI><a href="#[10f]">touchgfx::Drawable::getVisibleRect(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE) referenced from abstractprogressindicator.o(.constdata__ZTVN8touchgfx25AbstractProgressIndicatorE)
 <LI><a href="#[10f]">touchgfx::Drawable::getVisibleRect(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE) referenced from box.o(.constdata__ZTVN8touchgfx3BoxE)
 <LI><a href="#[10f]">touchgfx::Drawable::getVisibleRect(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE) referenced from image.o(.constdata__ZTVN8touchgfx5ImageE)
 <LI><a href="#[10f]">touchgfx::Drawable::getVisibleRect(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE) referenced from screen1viewbase.o(.constdata__ZTVN8touchgfx6WidgetE)
 <LI><a href="#[10f]">touchgfx::Drawable::getVisibleRect(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE) referenced from drawable.o(.constdata__ZTVN8touchgfx8DrawableE)
 <LI><a href="#[10f]">touchgfx::Drawable::getVisibleRect(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE) referenced from textarea.o(.constdata__ZTVN8touchgfx8TextAreaE)
 <LI><a href="#[10f]">touchgfx::Drawable::getVisibleRect(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE) referenced from container.o(.constdata__ZTVN8touchgfx9ContainerE)
 <LI><a href="#[10c]">touchgfx::Drawable::invalidateRect(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE) referenced from tiledimage.o(.constdata__ZTVN8touchgfx10TiledImageE)
 <LI><a href="#[10c]">touchgfx::Drawable::invalidateRect(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE) referenced from screen1viewbase.o(.constdata__ZTVN8touchgfx11GraphScrollILs150EEE)
 <LI><a href="#[10c]">touchgfx::Drawable::invalidateRect(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE) referenced from canvaswidget.o(.constdata__ZTVN8touchgfx12CanvasWidgetE)
 <LI><a href="#[10c]">touchgfx::Drawable::invalidateRect(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE) referenced from digitalclock.o(.constdata__ZTVN8touchgfx12DigitalClockE)
 <LI><a href="#[10c]">touchgfx::Drawable::invalidateRect(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE) referenced from abstractclock.o(.constdata__ZTVN8touchgfx13AbstractClockE)
 <LI><a href="#[10c]">touchgfx::Drawable::invalidateRect(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE) referenced from imageprogress.o(.constdata__ZTVN8touchgfx13ImageProgressE)
 <LI><a href="#[10c]">touchgfx::Drawable::invalidateRect(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE) referenced from scalableimage.o(.constdata__ZTVN8touchgfx13ScalableImageE)
 <LI><a href="#[10c]">touchgfx::Drawable::invalidateRect(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE) referenced from texturemapper.o(.constdata__ZTVN8touchgfx13TextureMapperE)
 <LI><a href="#[10c]">touchgfx::Drawable::invalidateRect(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE) referenced from snapshotwidget.o(.constdata__ZTVN8touchgfx14SnapshotWidgetE)
 <LI><a href="#[10c]">touchgfx::Drawable::invalidateRect(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE) referenced from abstractdatagraph.o(.constdata__ZTVN8touchgfx16DynamicDataGraphE)
 <LI><a href="#[10c]">touchgfx::Drawable::invalidateRect(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE) referenced from graphelements.o(.constdata__ZTVN8touchgfx16GraphElementLineE)
 <LI><a href="#[10c]">touchgfx::Drawable::invalidateRect(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE) referenced from abstractdatagraph.o(.constdata__ZTVN8touchgfx17AbstractDataGraphE)
 <LI><a href="#[10c]">touchgfx::Drawable::invalidateRect(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE) referenced from digitalclock.o(.constdata__ZTVN8touchgfx23TextAreaWithOneWildcardE)
 <LI><a href="#[10c]">touchgfx::Drawable::invalidateRect(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE) referenced from screen1viewbase.o(.constdata__ZTVN8touchgfx24TextAreaWithTwoWildcardsE)
 <LI><a href="#[10c]">touchgfx::Drawable::invalidateRect(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE) referenced from textareawithwildcard.o(.constdata__ZTVN8touchgfx24TextAreaWithWildcardBaseE)
 <LI><a href="#[10c]">touchgfx::Drawable::invalidateRect(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE) referenced from abstractdirectionprogress.o(.constdata__ZTVN8touchgfx25AbstractDirectionProgressE)
 <LI><a href="#[10c]">touchgfx::Drawable::invalidateRect(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE) referenced from abstractprogressindicator.o(.constdata__ZTVN8touchgfx25AbstractProgressIndicatorE)
 <LI><a href="#[10c]">touchgfx::Drawable::invalidateRect(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE) referenced from box.o(.constdata__ZTVN8touchgfx3BoxE)
 <LI><a href="#[10c]">touchgfx::Drawable::invalidateRect(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE) referenced from image.o(.constdata__ZTVN8touchgfx5ImageE)
 <LI><a href="#[10c]">touchgfx::Drawable::invalidateRect(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE) referenced from screen1viewbase.o(.constdata__ZTVN8touchgfx6WidgetE)
 <LI><a href="#[10c]">touchgfx::Drawable::invalidateRect(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE) referenced from drawable.o(.constdata__ZTVN8touchgfx8DrawableE)
 <LI><a href="#[10c]">touchgfx::Drawable::invalidateRect(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE) referenced from textarea.o(.constdata__ZTVN8touchgfx8TextAreaE)
 <LI><a href="#[10c]">touchgfx::Drawable::invalidateRect(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE) referenced from container.o(.constdata__ZTVN8touchgfx9ContainerE)
 <LI><a href="#[110]">touchgfx::Drawable::translateRectToAbsolute(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE) referenced from tiledimage.o(.constdata__ZTVN8touchgfx10TiledImageE)
 <LI><a href="#[110]">touchgfx::Drawable::translateRectToAbsolute(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE) referenced from screen1viewbase.o(.constdata__ZTVN8touchgfx11GraphScrollILs150EEE)
 <LI><a href="#[110]">touchgfx::Drawable::translateRectToAbsolute(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE) referenced from canvaswidget.o(.constdata__ZTVN8touchgfx12CanvasWidgetE)
 <LI><a href="#[110]">touchgfx::Drawable::translateRectToAbsolute(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE) referenced from digitalclock.o(.constdata__ZTVN8touchgfx12DigitalClockE)
 <LI><a href="#[110]">touchgfx::Drawable::translateRectToAbsolute(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE) referenced from abstractclock.o(.constdata__ZTVN8touchgfx13AbstractClockE)
 <LI><a href="#[110]">touchgfx::Drawable::translateRectToAbsolute(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE) referenced from imageprogress.o(.constdata__ZTVN8touchgfx13ImageProgressE)
 <LI><a href="#[110]">touchgfx::Drawable::translateRectToAbsolute(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE) referenced from scalableimage.o(.constdata__ZTVN8touchgfx13ScalableImageE)
 <LI><a href="#[110]">touchgfx::Drawable::translateRectToAbsolute(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE) referenced from texturemapper.o(.constdata__ZTVN8touchgfx13TextureMapperE)
 <LI><a href="#[110]">touchgfx::Drawable::translateRectToAbsolute(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE) referenced from snapshotwidget.o(.constdata__ZTVN8touchgfx14SnapshotWidgetE)
 <LI><a href="#[110]">touchgfx::Drawable::translateRectToAbsolute(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE) referenced from abstractdatagraph.o(.constdata__ZTVN8touchgfx16DynamicDataGraphE)
 <LI><a href="#[110]">touchgfx::Drawable::translateRectToAbsolute(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE) referenced from graphelements.o(.constdata__ZTVN8touchgfx16GraphElementLineE)
 <LI><a href="#[110]">touchgfx::Drawable::translateRectToAbsolute(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE) referenced from abstractdatagraph.o(.constdata__ZTVN8touchgfx17AbstractDataGraphE)
 <LI><a href="#[110]">touchgfx::Drawable::translateRectToAbsolute(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE) referenced from digitalclock.o(.constdata__ZTVN8touchgfx23TextAreaWithOneWildcardE)
 <LI><a href="#[110]">touchgfx::Drawable::translateRectToAbsolute(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE) referenced from screen1viewbase.o(.constdata__ZTVN8touchgfx24TextAreaWithTwoWildcardsE)
 <LI><a href="#[110]">touchgfx::Drawable::translateRectToAbsolute(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE) referenced from textareawithwildcard.o(.constdata__ZTVN8touchgfx24TextAreaWithWildcardBaseE)
 <LI><a href="#[110]">touchgfx::Drawable::translateRectToAbsolute(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE) referenced from abstractdirectionprogress.o(.constdata__ZTVN8touchgfx25AbstractDirectionProgressE)
 <LI><a href="#[110]">touchgfx::Drawable::translateRectToAbsolute(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE) referenced from abstractprogressindicator.o(.constdata__ZTVN8touchgfx25AbstractProgressIndicatorE)
 <LI><a href="#[110]">touchgfx::Drawable::translateRectToAbsolute(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE) referenced from box.o(.constdata__ZTVN8touchgfx3BoxE)
 <LI><a href="#[110]">touchgfx::Drawable::translateRectToAbsolute(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE) referenced from image.o(.constdata__ZTVN8touchgfx5ImageE)
 <LI><a href="#[110]">touchgfx::Drawable::translateRectToAbsolute(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE) referenced from screen1viewbase.o(.constdata__ZTVN8touchgfx6WidgetE)
 <LI><a href="#[110]">touchgfx::Drawable::translateRectToAbsolute(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE) referenced from drawable.o(.constdata__ZTVN8touchgfx8DrawableE)
 <LI><a href="#[110]">touchgfx::Drawable::translateRectToAbsolute(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE) referenced from textarea.o(.constdata__ZTVN8touchgfx8TextAreaE)
 <LI><a href="#[110]">touchgfx::Drawable::translateRectToAbsolute(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE) referenced from container.o(.constdata__ZTVN8touchgfx9ContainerE)
 <LI><a href="#[1e2]">touchgfx::LCD16bpp::framebufferFormat() const</a> from lcd16bpp.o(i._ZNK8touchgfx8LCD16bpp17framebufferFormatEv) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bppE)
 <LI><a href="#[1e3]">touchgfx::LCD16bpp::framebufferStride() const</a> from lcd16bpp.o(i._ZNK8touchgfx8LCD16bpp17framebufferStrideEv) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bppE)
 <LI><a href="#[198]">touchgfx::TextArea::getAlignment() const</a> from textarea.o(i._ZNK8touchgfx8TextArea12getAlignmentEv) referenced from digitalclock.o(.constdata__ZTVN8touchgfx23TextAreaWithOneWildcardE)
 <LI><a href="#[198]">touchgfx::TextArea::getAlignment() const</a> from textarea.o(i._ZNK8touchgfx8TextArea12getAlignmentEv) referenced from screen1viewbase.o(.constdata__ZTVN8touchgfx24TextAreaWithTwoWildcardsE)
 <LI><a href="#[198]">touchgfx::TextArea::getAlignment() const</a> from textarea.o(i._ZNK8touchgfx8TextArea12getAlignmentEv) referenced from textareawithwildcard.o(.constdata__ZTVN8touchgfx24TextAreaWithWildcardBaseE)
 <LI><a href="#[198]">touchgfx::TextArea::getAlignment() const</a> from textarea.o(i._ZNK8touchgfx8TextArea12getAlignmentEv) referenced from textarea.o(.constdata__ZTVN8touchgfx8TextAreaE)
 <LI><a href="#[195]">touchgfx::TextArea::getSolidRect() const</a> from digitalclock.o(i._ZNK8touchgfx8TextArea12getSolidRectEv) referenced from digitalclock.o(.constdata__ZTVN8touchgfx23TextAreaWithOneWildcardE)
 <LI><a href="#[195]">touchgfx::TextArea::getSolidRect() const</a> from digitalclock.o(i._ZNK8touchgfx8TextArea12getSolidRectEv) referenced from screen1viewbase.o(.constdata__ZTVN8touchgfx24TextAreaWithTwoWildcardsE)
 <LI><a href="#[195]">touchgfx::TextArea::getSolidRect() const</a> from digitalclock.o(i._ZNK8touchgfx8TextArea12getSolidRectEv) referenced from textareawithwildcard.o(.constdata__ZTVN8touchgfx24TextAreaWithWildcardBaseE)
 <LI><a href="#[195]">touchgfx::TextArea::getSolidRect() const</a> from digitalclock.o(i._ZNK8touchgfx8TextArea12getSolidRectEv) referenced from textarea.o(.constdata__ZTVN8touchgfx8TextAreaE)
 <LI><a href="#[19a]">touchgfx::TextArea::getTextWidth() const</a> from textarea.o(i._ZNK8touchgfx8TextArea12getTextWidthEv) referenced from digitalclock.o(.constdata__ZTVN8touchgfx23TextAreaWithOneWildcardE)
 <LI><a href="#[19a]">touchgfx::TextArea::getTextWidth() const</a> from textarea.o(i._ZNK8touchgfx8TextArea12getTextWidthEv) referenced from screen1viewbase.o(.constdata__ZTVN8touchgfx24TextAreaWithTwoWildcardsE)
 <LI><a href="#[19a]">touchgfx::TextArea::getTextWidth() const</a> from textarea.o(i._ZNK8touchgfx8TextArea12getTextWidthEv) referenced from textareawithwildcard.o(.constdata__ZTVN8touchgfx24TextAreaWithWildcardBaseE)
 <LI><a href="#[19a]">touchgfx::TextArea::getTextWidth() const</a> from textarea.o(i._ZNK8touchgfx8TextArea12getTextWidthEv) referenced from textarea.o(.constdata__ZTVN8touchgfx8TextAreaE)
 <LI><a href="#[1a2]">touchgfx::TextArea::getWildcard1() const</a> from textarea.o(i._ZNK8touchgfx8TextArea12getWildcard1Ev) referenced from textareawithwildcard.o(.constdata__ZTVN8touchgfx24TextAreaWithWildcardBaseE)
 <LI><a href="#[1a2]">touchgfx::TextArea::getWildcard1() const</a> from textarea.o(i._ZNK8touchgfx8TextArea12getWildcard1Ev) referenced from textarea.o(.constdata__ZTVN8touchgfx8TextAreaE)
 <LI><a href="#[19d]">touchgfx::TextArea::getWildcard2() const</a> from digitalclock.o(i._ZNK8touchgfx8TextArea12getWildcard2Ev) referenced from digitalclock.o(.constdata__ZTVN8touchgfx23TextAreaWithOneWildcardE)
 <LI><a href="#[19d]">touchgfx::TextArea::getWildcard2() const</a> from digitalclock.o(i._ZNK8touchgfx8TextArea12getWildcard2Ev) referenced from textareawithwildcard.o(.constdata__ZTVN8touchgfx24TextAreaWithWildcardBaseE)
 <LI><a href="#[19d]">touchgfx::TextArea::getWildcard2() const</a> from digitalclock.o(i._ZNK8touchgfx8TextArea12getWildcard2Ev) referenced from textarea.o(.constdata__ZTVN8touchgfx8TextAreaE)
 <LI><a href="#[199]">touchgfx::TextArea::getTextHeight() const</a> from textarea.o(i._ZNK8touchgfx8TextArea13getTextHeightEv) referenced from digitalclock.o(.constdata__ZTVN8touchgfx23TextAreaWithOneWildcardE)
 <LI><a href="#[199]">touchgfx::TextArea::getTextHeight() const</a> from textarea.o(i._ZNK8touchgfx8TextArea13getTextHeightEv) referenced from screen1viewbase.o(.constdata__ZTVN8touchgfx24TextAreaWithTwoWildcardsE)
 <LI><a href="#[199]">touchgfx::TextArea::getTextHeight() const</a> from textarea.o(i._ZNK8touchgfx8TextArea13getTextHeightEv) referenced from textareawithwildcard.o(.constdata__ZTVN8touchgfx24TextAreaWithWildcardBaseE)
 <LI><a href="#[199]">touchgfx::TextArea::getTextHeight() const</a> from textarea.o(i._ZNK8touchgfx8TextArea13getTextHeightEv) referenced from textarea.o(.constdata__ZTVN8touchgfx8TextAreaE)
 <LI><a href="#[19b]">touchgfx::TextArea::calculateTextHeight(const unsigned short*, ...) const</a> from textarea.o(i._ZNK8touchgfx8TextArea19calculateTextHeightEPKtz) referenced from digitalclock.o(.constdata__ZTVN8touchgfx23TextAreaWithOneWildcardE)
 <LI><a href="#[19b]">touchgfx::TextArea::calculateTextHeight(const unsigned short*, ...) const</a> from textarea.o(i._ZNK8touchgfx8TextArea19calculateTextHeightEPKtz) referenced from screen1viewbase.o(.constdata__ZTVN8touchgfx24TextAreaWithTwoWildcardsE)
 <LI><a href="#[19b]">touchgfx::TextArea::calculateTextHeight(const unsigned short*, ...) const</a> from textarea.o(i._ZNK8touchgfx8TextArea19calculateTextHeightEPKtz) referenced from textareawithwildcard.o(.constdata__ZTVN8touchgfx24TextAreaWithWildcardBaseE)
 <LI><a href="#[19b]">touchgfx::TextArea::calculateTextHeight(const unsigned short*, ...) const</a> from textarea.o(i._ZNK8touchgfx8TextArea19calculateTextHeightEPKtz) referenced from textarea.o(.constdata__ZTVN8touchgfx8TextAreaE)
 <LI><a href="#[1eb]">touchgfx::TextArea::calculateBoundingArea() const</a> from textarea.o(i._ZNK8touchgfx8TextArea21calculateBoundingAreaEv) referenced from textarea.o(.constdata__ZTVN8touchgfx8TextAreaE)
 <LI><a href="#[1ea]">touchgfx::TextArea::draw(const touchgfx::Rect&) const</a> from textarea.o(i._ZNK8touchgfx8TextArea4drawERKNS_4RectE) referenced from textarea.o(.constdata__ZTVN8touchgfx8TextAreaE)
 <LI><a href="#[152]">touchgfx::ConstFont::getGlyph(unsigned short, const unsigned char*&, unsigned char&) const</a> from constfont.o(i._ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh) referenced from generatedfont.o(.constdata__ZTVN8touchgfx13GeneratedFontE)
 <LI><a href="#[152]">touchgfx::ConstFont::getGlyph(unsigned short, const unsigned char*&, unsigned char&) const</a> from constfont.o(i._ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh) referenced from constfont.o(.constdata__ZTVN8touchgfx9ConstFontE)
 <LI><a href="#[127]">touchgfx::Container::getSolidRect() const</a> from container.o(i._ZNK8touchgfx9Container12getSolidRectEv) referenced from screen1viewbase.o(.constdata__ZTVN8touchgfx11GraphScrollILs150EEE)
 <LI><a href="#[127]">touchgfx::Container::getSolidRect() const</a> from container.o(i._ZNK8touchgfx9Container12getSolidRectEv) referenced from digitalclock.o(.constdata__ZTVN8touchgfx12DigitalClockE)
 <LI><a href="#[127]">touchgfx::Container::getSolidRect() const</a> from container.o(i._ZNK8touchgfx9Container12getSolidRectEv) referenced from abstractclock.o(.constdata__ZTVN8touchgfx13AbstractClockE)
 <LI><a href="#[127]">touchgfx::Container::getSolidRect() const</a> from container.o(i._ZNK8touchgfx9Container12getSolidRectEv) referenced from imageprogress.o(.constdata__ZTVN8touchgfx13ImageProgressE)
 <LI><a href="#[127]">touchgfx::Container::getSolidRect() const</a> from container.o(i._ZNK8touchgfx9Container12getSolidRectEv) referenced from abstractdatagraph.o(.constdata__ZTVN8touchgfx16DynamicDataGraphE)
 <LI><a href="#[127]">touchgfx::Container::getSolidRect() const</a> from container.o(i._ZNK8touchgfx9Container12getSolidRectEv) referenced from abstractdatagraph.o(.constdata__ZTVN8touchgfx17AbstractDataGraphE)
 <LI><a href="#[127]">touchgfx::Container::getSolidRect() const</a> from container.o(i._ZNK8touchgfx9Container12getSolidRectEv) referenced from abstractdirectionprogress.o(.constdata__ZTVN8touchgfx25AbstractDirectionProgressE)
 <LI><a href="#[127]">touchgfx::Container::getSolidRect() const</a> from container.o(i._ZNK8touchgfx9Container12getSolidRectEv) referenced from abstractprogressindicator.o(.constdata__ZTVN8touchgfx25AbstractProgressIndicatorE)
 <LI><a href="#[127]">touchgfx::Container::getSolidRect() const</a> from container.o(i._ZNK8touchgfx9Container12getSolidRectEv) referenced from container.o(.constdata__ZTVN8touchgfx9ContainerE)
 <LI><a href="#[126]">touchgfx::Container::draw(const touchgfx::Rect&) const</a> from container.o(i._ZNK8touchgfx9Container4drawERKNS_4RectE) referenced from screen1viewbase.o(.constdata__ZTVN8touchgfx11GraphScrollILs150EEE)
 <LI><a href="#[126]">touchgfx::Container::draw(const touchgfx::Rect&) const</a> from container.o(i._ZNK8touchgfx9Container4drawERKNS_4RectE) referenced from digitalclock.o(.constdata__ZTVN8touchgfx12DigitalClockE)
 <LI><a href="#[126]">touchgfx::Container::draw(const touchgfx::Rect&) const</a> from container.o(i._ZNK8touchgfx9Container4drawERKNS_4RectE) referenced from abstractclock.o(.constdata__ZTVN8touchgfx13AbstractClockE)
 <LI><a href="#[126]">touchgfx::Container::draw(const touchgfx::Rect&) const</a> from container.o(i._ZNK8touchgfx9Container4drawERKNS_4RectE) referenced from imageprogress.o(.constdata__ZTVN8touchgfx13ImageProgressE)
 <LI><a href="#[126]">touchgfx::Container::draw(const touchgfx::Rect&) const</a> from container.o(i._ZNK8touchgfx9Container4drawERKNS_4RectE) referenced from abstractdatagraph.o(.constdata__ZTVN8touchgfx16DynamicDataGraphE)
 <LI><a href="#[126]">touchgfx::Container::draw(const touchgfx::Rect&) const</a> from container.o(i._ZNK8touchgfx9Container4drawERKNS_4RectE) referenced from abstractdatagraph.o(.constdata__ZTVN8touchgfx17AbstractDataGraphE)
 <LI><a href="#[126]">touchgfx::Container::draw(const touchgfx::Rect&) const</a> from container.o(i._ZNK8touchgfx9Container4drawERKNS_4RectE) referenced from abstractdirectionprogress.o(.constdata__ZTVN8touchgfx25AbstractDirectionProgressE)
 <LI><a href="#[126]">touchgfx::Container::draw(const touchgfx::Rect&) const</a> from container.o(i._ZNK8touchgfx9Container4drawERKNS_4RectE) referenced from abstractprogressindicator.o(.constdata__ZTVN8touchgfx25AbstractProgressIndicatorE)
 <LI><a href="#[126]">touchgfx::Container::draw(const touchgfx::Rect&) const</a> from container.o(i._ZNK8touchgfx9Container4drawERKNS_4RectE) referenced from container.o(.constdata__ZTVN8touchgfx9ContainerE)
 <LI><a href="#[149]">__cxa_pure_virtual</a> from pure_virt.o(i.__cxa_pure_virtual) referenced from canvaswidget.o(.constdata__ZTVN8touchgfx12CanvasWidgetE)
 <LI><a href="#[149]">__cxa_pure_virtual</a> from pure_virt.o(i.__cxa_pure_virtual) referenced from abstractclock.o(.constdata__ZTVN8touchgfx13AbstractClockE)
 <LI><a href="#[149]">__cxa_pure_virtual</a> from pure_virt.o(i.__cxa_pure_virtual) referenced from abstractdatagraph.o(.constdata__ZTVN8touchgfx16DynamicDataGraphE)
 <LI><a href="#[149]">__cxa_pure_virtual</a> from pure_virt.o(i.__cxa_pure_virtual) referenced 8 times from abstractdatagraph.o(.constdata__ZTVN8touchgfx17AbstractDataGraphE)
 <LI><a href="#[149]">__cxa_pure_virtual</a> from pure_virt.o(i.__cxa_pure_virtual) referenced 4 times from abstractpartition.o(.constdata__ZTVN8touchgfx17AbstractPartitionE)
 <LI><a href="#[149]">__cxa_pure_virtual</a> from pure_virt.o(i.__cxa_pure_virtual) referenced from screen1viewbase.o(.constdata__ZTVN8touchgfx21AbstractPainterRGB565E)
 <LI><a href="#[149]">__cxa_pure_virtual</a> from pure_virt.o(i.__cxa_pure_virtual) referenced 6 times from hal.o(.constdata__ZTVN8touchgfx3HALE)
 <LI><a href="#[149]">__cxa_pure_virtual</a> from pure_virt.o(i.__cxa_pure_virtual) referenced from texts.o(.constdata__ZTVN8touchgfx4FontE)
 <LI><a href="#[149]">__cxa_pure_virtual</a> from pure_virt.o(i.__cxa_pure_virtual) referenced 2 times from screen1viewbase.o(.constdata__ZTVN8touchgfx6WidgetE)
 <LI><a href="#[149]">__cxa_pure_virtual</a> from pure_virt.o(i.__cxa_pure_virtual) referenced 3 times from drawable.o(.constdata__ZTVN8touchgfx8DrawableE)
 <LI><a href="#[149]">__cxa_pure_virtual</a> from pure_virt.o(i.__cxa_pure_virtual) referenced 2 times from constfont.o(.constdata__ZTVN8touchgfx9ConstFontE)
 <LI><a href="#[6f]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from startup_stm32f429xx.o(.text)
 <LI><a href="#[1f5]">__sti___15_Application_cpp_63cd8d44</a> from application.o(i.__sti___15_Application_cpp_63cd8d44) referenced from application.o(.init_array)
 <LI><a href="#[1f4]">__sti___21_typedtextdatabase_cpp_05ec7672</a> from typedtextdatabase.o(i.__sti___21_typedtextdatabase_cpp_05ec7672) referenced from typedtextdatabase.o(.init_array)
 <LI><a href="#[1f3]">__sti___23_frontendapplication_cpp_a4e6c903</a> from frontendapplication.o(i.__sti___23_frontendapplication_cpp_a4e6c903) referenced from frontendapplication.o(.init_array)
 <LI><a href="#[1f2]">__sti___25_TouchGFXConfiguration_cpp_f5abfd34</a> from touchgfxconfiguration.o(i.__sti___25_TouchGFXConfiguration_cpp_f5abfd34) referenced from touchgfxconfiguration.o(.init_array)
 <LI><a href="#[1f6]">__sti___7_LCD_cpp_86507772</a> from lcd.o(i.__sti___7_LCD_cpp_86507772) referenced from lcd.o(.init_array)
 <LI><a href="#[a5]">fputc</a> from usart.o(i.fputc) referenced from printfb.o(i.__0printf$bare)
 <LI><a href="#[6d]">main</a> from main.o(i.main) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
 <LI><a href="#[ae]">prvIdleTask</a> from tasks.o(i.prvIdleTask) referenced from tasks.o(i.vTaskStartScheduler)
 <LI><a href="#[ac]">prvTaskExitError</a> from port.o(i.prvTaskExitError) referenced from port.o(i.pxPortInitialiseStack)
 <LI><a href="#[b0]">prvTimerTask</a> from timers.o(i.prvTimerTask) referenced from timers.o(i.xTimerCreateTimerTask)
 <LI><a href="#[75]">temAdc_Handle</a> from freertos.o(i.temAdc_Handle) referenced from freertos.o(i.MX_FREERTOS_Init)
 <LI><a href="#[af]">vEventGroupSetBitsCallback</a> from event_groups.o(i.vEventGroupSetBitsCallback) referenced from event_groups.o(i.xEventGroupSetBitsFromISR)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[6f]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(.text)
</UL>
<P><STRONG><a name="[482]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[1f8]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[215]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[483]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[1fa]"></a>_main_cpp_init$empty</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8a.o(.ARM.Collect$$$$00000009))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + Unknown Stack Size
<LI>Call Chain = _main_cpp_init$empty &rArr; __cpp_initialize__aeabi_
</UL>
<BR>[Calls]<UL><LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cpp_initialize__aeabi_
</UL>

<P><STRONG><a name="[484]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[485]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[486]"></a>__rt_lib_shutdown_fini</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry12b.o(.ARM.Collect$$$$0000000E))

<P><STRONG><a name="[487]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[1fb]"></a>__rt_final_cpp$nonempty</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10b.o(.ARM.Collect$$$$00000010))
<BR><BR>[Stack]<UL><LI>Max Depth = 32 + Unknown Stack Size
<LI>Call Chain = __rt_final_cpp$nonempty &rArr; __cxa_finalize &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_finalize
</UL>

<P><STRONG><a name="[488]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$00000011))

<P><STRONG><a name="[f]"></a>SVC_Handler</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, port.o(.emb_text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[476]"></a>__asm___6_port_c_39a90d8d__prvStartFirstTask</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, port.o(.emb_text))
<BR><BR>[Called By]<UL><LI><a href="#[470]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xPortStartScheduler
</UL>

<P><STRONG><a name="[475]"></a>__asm___6_port_c_39a90d8d__prvEnableVFP</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, port.o(.emb_text))
<BR><BR>[Called By]<UL><LI><a href="#[470]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xPortStartScheduler
</UL>

<P><STRONG><a name="[11]"></a>PendSV_Handler</STRONG> (Thumb, 88 bytes, Stack size 0 bytes, port.o(.emb_text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = PendSV_Handler &rArr; vTaskSwitchContext
</UL>
<BR>[Calls]<UL><LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSwitchContext
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[466]"></a>vPortGetIPSR</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, port.o(.emb_text))
<BR><BR>[Called By]<UL><LI><a href="#[465]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortValidateInterruptPriority
</UL>

<P><STRONG><a name="[9]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>ADC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[28]"></a>CAN1_RX1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[29]"></a>CAN1_SCE_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[53]"></a>CAN2_RX0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[54]"></a>CAN2_RX1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[55]"></a>CAN2_SCE_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[52]"></a>CAN2_TX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[61]"></a>DCMI_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>DMA1_Stream0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>DMA1_Stream1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>DMA1_Stream2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>DMA1_Stream3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>DMA1_Stream4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>DMA1_Stream5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>DMA1_Stream6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[42]"></a>DMA1_Stream7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[4c]"></a>DMA2_Stream1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[4d]"></a>DMA2_Stream2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[4e]"></a>DMA2_Stream3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[4f]"></a>DMA2_Stream4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[57]"></a>DMA2_Stream5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[58]"></a>DMA2_Stream6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[59]"></a>DMA2_Stream7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[50]"></a>ETH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[51]"></a>ETH_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>EXTI0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[3b]"></a>EXTI15_10_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>EXTI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>EXTI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>EXTI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>EXTI4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[2a]"></a>EXTI9_5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>FLASH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[43]"></a>FMC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[63]"></a>FPU_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[62]"></a>HASH_RNG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[33]"></a>I2C1_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[32]"></a>I2C1_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[35]"></a>I2C2_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[34]"></a>I2C2_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[5c]"></a>I2C3_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[5b]"></a>I2C3_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[6b]"></a>LTDC_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[56]"></a>OTG_FS_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[3d]"></a>OTG_FS_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[5e]"></a>OTG_HS_EP1_IN_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[5d]"></a>OTG_HS_EP1_OUT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[60]"></a>OTG_HS_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[5f]"></a>OTG_HS_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>PVD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>RCC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[3c]"></a>RTC_Alarm_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>RTC_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[69]"></a>SAI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[44]"></a>SDIO_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[36]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[37]"></a>SPI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[46]"></a>SPI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[66]"></a>SPI4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[67]"></a>SPI5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[68]"></a>SPI6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>TAMP_STAMP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[2b]"></a>TIM1_BRK_TIM9_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[2e]"></a>TIM1_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[2d]"></a>TIM1_TRG_COM_TIM11_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[2c]"></a>TIM1_UP_TIM10_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[2f]"></a>TIM2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[30]"></a>TIM3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[31]"></a>TIM4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[45]"></a>TIM5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[49]"></a>TIM6_DAC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[3e]"></a>TIM8_BRK_TIM12_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[41]"></a>TIM8_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[40]"></a>TIM8_TRG_COM_TIM14_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[3f]"></a>TIM8_UP_TIM13_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[47]"></a>UART4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[48]"></a>UART5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[64]"></a>UART7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[65]"></a>UART8_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[38]"></a>USART1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[39]"></a>USART2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[3a]"></a>USART3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[5a]"></a>USART6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>WWDG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f429xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[1fe]"></a>__aeabi_uldivmod</STRONG> (Thumb, 98 bytes, Stack size 40 bytes, uldiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetSysClockFreq
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SetConfig
</UL>

<P><STRONG><a name="[446]"></a>__aeabi_memcpy</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, memcpya.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[447]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCopyDataToQueue
<LI><a href="#[445]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCopyDataFromQueue
</UL>

<P><STRONG><a name="[271]"></a>__aeabi_memcpy4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_ConfigLayer
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::drawStringLTR(const touchgfx::Rect&, const touchgfx::Rect&, const touchgfx::LCD::StringVisuals&, const unsigned short*, std::__va_list)
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LockFreeDMA_Queue::pushCopyOf(const touchgfx::BlitOp&)
</UL>

<P><STRONG><a name="[489]"></a>__aeabi_memcpy8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text), UNUSED)

<P><STRONG><a name="[202]"></a>__aeabi_memset</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[44d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvInitialiseNewTask
<LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memset
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>

<P><STRONG><a name="[48a]"></a>__aeabi_memset4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[48b]"></a>__aeabi_memset8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[201]"></a>__aeabi_memclr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[257]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_RTC_Init
<LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_LTDC_Init
<LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_GPIO_Init
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_FMC_Init
<LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_MspInit
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_MspInit
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_MspInit
<LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_FMC_MspInit
<LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_CAN_MspInit
<LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::SnapshotWidget::SnapshotWidget()
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::Application()
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::TextProvider()
<LI><a href="#[3bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const unsigned short*, const char*, std::__va_list)
<LI><a href="#[3ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::snprintfFloats(unsigned short*, unsigned short, const unsigned short*, const char*, const float*)
<LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextureMapper::TextureMapper(const touchgfx::Bitmap&)
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ScalableImage::ScalableImage(const touchgfx::Bitmap&)
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ImageProgress::ImageProgress()
<LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DigitalClock::DigitalClock()
<LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CanvasWidget::CanvasWidget__sub_object()
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::TextArea()
<LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Image::Image(const touchgfx::Bitmap&)
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Box::Box()
<LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractProgressIndicator::AbstractProgressIndicator()
</UL>

<P><STRONG><a name="[48c]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[203]"></a>memset</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[1f7]"></a>__cpp_initialize__aeabi_</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, cpp_init.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __cpp_initialize__aeabi_
</UL>
<BR>[Called By]<UL><LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_cpp_init$empty
</UL>

<P><STRONG><a name="[204]"></a>__aeabi_atexit</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, aeabi_atexit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = __aeabi_atexit &rArr; malloc
</UL>
<BR>[Calls]<UL><LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_ddtor_pointer_addr
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
</UL>
<BR>[Called By]<UL><LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___25_TouchGFXConfiguration_cpp_f5abfd34
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___23_frontendapplication_cpp_a4e6c903
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx_init
<LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableDecompressorL8_All()
<LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_verdana_80_4bpp()
<LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_verdana_40_4bpp()
<LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_verdana_30_4bpp()
<LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_verdana_25_4bpp()
<LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_verdana_15_4bpp()
<LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_verdana_155_4bpp()
<LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_iconfont_32_4bpp()
<LI><a href="#[3da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperRGB565_NonOpaque_BilinearInterpolation()
<LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperRGB565_Opaque_BilinearInterpolation()
<LI><a href="#[3d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperL8_ARGB8888_BilinearInterpolation()
<LI><a href="#[3db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperRGB565_NonOpaque_NearestNeighbor()
<LI><a href="#[3d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperL8_RGB888_BilinearInterpolation()
<LI><a href="#[3d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperL8_RGB565_BilinearInterpolation()
<LI><a href="#[3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperARGB8888_BilinearInterpolation()
<LI><a href="#[3d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperRGB565_Opaque_NearestNeighbor()
<LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperL8_ARGB8888_NearestNeighbor()
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperL8_RGB888_NearestNeighbor()
<LI><a href="#[3d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperL8_RGB565_NearestNeighbor()
<LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperARGB8888_NearestNeighbor()
<LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperA4_BilinearInterpolation()
<LI><a href="#[3cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperA4_NearestNeighbor()
</UL>

<P><STRONG><a name="[207]"></a>__aeabi_dadd</STRONG> (Thumb, 322 bytes, Stack size 48 bytes, dadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_lasr
<LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
<LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1View::Screen1Adc1Num(unsigned char*)
</UL>

<P><STRONG><a name="[20b]"></a>__aeabi_dsub</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;temAdc_Handle
</UL>

<P><STRONG><a name="[20c]"></a>__aeabi_drsub</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = __aeabi_drsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1View::Screen1gpsNum(double&)
</UL>

<P><STRONG><a name="[20d]"></a>__aeabi_dmul</STRONG> (Thumb, 228 bytes, Stack size 48 bytes, dmul.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;temAdc_Handle
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1View::Screen1Adc1Num(unsigned char*)
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1View::Screen1gpsNum(double&)
</UL>

<P><STRONG><a name="[20e]"></a>__aeabi_ddiv</STRONG> (Thumb, 222 bytes, Stack size 32 bytes, ddiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = __aeabi_ddiv &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;temAdc_Handle
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1View::Screen1Adc1Num(unsigned char*)
</UL>

<P><STRONG><a name="[20f]"></a>__aeabi_ui2d</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, dfltui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = __aeabi_ui2d &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;temAdc_Handle
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1View::Screen1Adc1Num(unsigned char*)
</UL>

<P><STRONG><a name="[210]"></a>__aeabi_d2iz</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, dfixi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_d2iz
</UL>
<BR>[Calls]<UL><LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
</UL>
<BR>[Called By]<UL><LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1View::Screen1gpsNum(double&)
</UL>

<P><STRONG><a name="[211]"></a>__aeabi_d2uiz</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, dfixui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_d2uiz
</UL>
<BR>[Calls]<UL><LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
</UL>
<BR>[Called By]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;temAdc_Handle
</UL>

<P><STRONG><a name="[2c4]"></a>__aeabi_f2d</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, f2d.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Speed_Handle
</UL>

<P><STRONG><a name="[212]"></a>__aeabi_d2f</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, d2f.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_d2f
</UL>
<BR>[Calls]<UL><LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_round
</UL>
<BR>[Called By]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1View::Screen1Adc1Num(unsigned char*)
</UL>

<P><STRONG><a name="[200]"></a>__aeabi_llsl</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, llshl.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>

<P><STRONG><a name="[48d]"></a>_ll_shift_l</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llshl.o(.text), UNUSED)

<P><STRONG><a name="[1ff]"></a>__aeabi_llsr</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, llushr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>

<P><STRONG><a name="[48e]"></a>_ll_ushift_r</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llushr.o(.text), UNUSED)

<P><STRONG><a name="[208]"></a>__aeabi_lasr</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, llsshr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[48f]"></a>_ll_sshift_r</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llsshr.o(.text), UNUSED)

<P><STRONG><a name="[490]"></a>__I$use$fp</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, iusefp.o(.text), UNUSED)

<P><STRONG><a name="[206]"></a>__rt_ddtor_pointer_addr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, cpp_dtor.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_finalize
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_atexit
</UL>

<P><STRONG><a name="[41b]"></a>__rt_SIGPVFN</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, cpp_signal.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_pure_virtual
</UL>

<P><STRONG><a name="[1fc]"></a>__cxa_finalize</STRONG> (Thumb, 66 bytes, Stack size 24 bytes, cxa_finalize.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __cxa_finalize &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_ddtor_pointer_addr
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
</UL>
<BR>[Called By]<UL><LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_final_cpp$nonempty
</UL>

<P><STRONG><a name="[213]"></a>_float_round</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, fepilogue.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
</UL>

<P><STRONG><a name="[491]"></a>_float_epilogue</STRONG> (Thumb, 92 bytes, Stack size 4 bytes, fepilogue.o(.text), UNUSED)

<P><STRONG><a name="[20a]"></a>_double_round</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, depilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>

<P><STRONG><a name="[209]"></a>_double_epilogue</STRONG> (Thumb, 156 bytes, Stack size 32 bytes, depilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[1f9]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[492]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[493]"></a>__rt_lib_shutdown_cpp_2</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, cpp_final.o(.text), UNUSED)

<P><STRONG><a name="[494]"></a>__decompress</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __dczerorl.o(.text), UNUSED)

<P><STRONG><a name="[495]"></a>__decompress0</STRONG> (Thumb, 58 bytes, Stack size unknown bytes, __dczerorl.o(.text), UNUSED)

<P><STRONG><a name="[79]"></a>ADC1_Handle</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, freertos.o(i.ADC1_Handle))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = ADC1_Handle &rArr; osEventFlagsWait &rArr; xEventGroupWaitBits &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osEventFlagsWait
<LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osDelay
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_Num
</UL>
<BR>[Address Reference Count : 1]<UL><LI> freertos.o(i.MX_FREERTOS_Init)
</UL>
<P><STRONG><a name="[217]"></a>ADC1_Num</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, screen1view.o(i.ADC1_Num))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = ADC1_Num &rArr; Screen1View::Screen1Adc1Num(unsigned char*) &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1View::Screen1Adc1Num(unsigned char*)
</UL>
<BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_Handle
</UL>

<P><STRONG><a name="[7a]"></a>ADC2_Handle</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, freertos.o(i.ADC2_Handle))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = ADC2_Handle &rArr; osEventFlagsWait &rArr; xEventGroupWaitBits &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osEventFlagsWait
<LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osDelay
<LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC2_Num
</UL>
<BR>[Address Reference Count : 1]<UL><LI> freertos.o(i.MX_FREERTOS_Init)
</UL>
<P><STRONG><a name="[21a]"></a>ADC2_Num</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, screen1view.o(i.ADC2_Num))
<BR><BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC2_Handle
</UL>

<P><STRONG><a name="[7f]"></a>BspInit_Handle</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, freertos.o(i.BspInit_Handle))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = BspInit_Handle &rArr; vTaskDelete &rArr; prvDeleteTCB &rArr; vPortFree &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskDelete
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_CAN_Start
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_CAN_ActivateNotification
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_ADC_Start_DMA
</UL>
<BR>[Address Reference Count : 1]<UL><LI> freertos.o(i.MX_FREERTOS_Init)
</UL>
<P><STRONG><a name="[d]"></a>BusFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_it.o(i.BusFault_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[27]"></a>CAN1_RX0_IRQHandler</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f4xx_it.o(i.CAN1_RX0_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = CAN1_RX0_IRQHandler &rArr; HAL_CAN_IRQHandler &rArr; HAL_CAN_RxFifo0MsgPendingCallback &rArr; osSemaphoreRelease &rArr; xQueueGenericSend &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_CAN_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[26]"></a>CAN1_TX_IRQHandler</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f4xx_it.o(i.CAN1_TX_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = CAN1_TX_IRQHandler &rArr; HAL_CAN_IRQHandler &rArr; HAL_CAN_RxFifo0MsgPendingCallback &rArr; osSemaphoreRelease &rArr; xQueueGenericSend &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_CAN_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[336]"></a>CRC_Lock</STRONG> (Thumb, 152 bytes, Stack size 4 bytes, stm32_crc_lock.o(i.CRC_Lock))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = CRC_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::Application()
</UL>

<P><STRONG><a name="[223]"></a>CT_IIC_Ack</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, ctiic.o(i.CT_IIC_Ack))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = CT_IIC_Ack &rArr; delay_us
</UL>
<BR>[Calls]<UL><LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_us
</UL>
<BR>[Called By]<UL><LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CT_IIC_Read_Byte
</UL>

<P><STRONG><a name="[225]"></a>CT_IIC_Init</STRONG> (Thumb, 88 bytes, Stack size 32 bytes, ctiic.o(i.CT_IIC_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = CT_IIC_Init &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FT5206_Init
</UL>

<P><STRONG><a name="[227]"></a>CT_IIC_NAck</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, ctiic.o(i.CT_IIC_NAck))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = CT_IIC_NAck &rArr; delay_us
</UL>
<BR>[Calls]<UL><LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_us
</UL>
<BR>[Called By]<UL><LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CT_IIC_Read_Byte
</UL>

<P><STRONG><a name="[228]"></a>CT_IIC_Read_Byte</STRONG> (Thumb, 108 bytes, Stack size 32 bytes, ctiic.o(i.CT_IIC_Read_Byte))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = CT_IIC_Read_Byte &rArr; CT_IIC_NAck &rArr; delay_us
</UL>
<BR>[Calls]<UL><LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CT_IIC_NAck
<LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CT_IIC_Ack
<LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_us
</UL>
<BR>[Called By]<UL><LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FT5206_RD_Reg
</UL>

<P><STRONG><a name="[229]"></a>CT_IIC_Send_Byte</STRONG> (Thumb, 96 bytes, Stack size 32 bytes, ctiic.o(i.CT_IIC_Send_Byte))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = CT_IIC_Send_Byte &rArr; delay_us
</UL>
<BR>[Calls]<UL><LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_us
</UL>
<BR>[Called By]<UL><LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FT5206_RD_Reg
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FT5206_WR_Reg
</UL>

<P><STRONG><a name="[22a]"></a>CT_IIC_Start</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, ctiic.o(i.CT_IIC_Start))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = CT_IIC_Start &rArr; delay_us
</UL>
<BR>[Calls]<UL><LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_us
</UL>
<BR>[Called By]<UL><LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FT5206_RD_Reg
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FT5206_WR_Reg
</UL>

<P><STRONG><a name="[22b]"></a>CT_IIC_Stop</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, ctiic.o(i.CT_IIC_Stop))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = CT_IIC_Stop &rArr; delay_us
</UL>
<BR>[Calls]<UL><LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_us
</UL>
<BR>[Called By]<UL><LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FT5206_RD_Reg
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FT5206_WR_Reg
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CT_IIC_Wait_Ack
</UL>

<P><STRONG><a name="[22c]"></a>CT_IIC_Wait_Ack</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, ctiic.o(i.CT_IIC_Wait_Ack))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = CT_IIC_Wait_Ack &rArr; CT_IIC_Stop &rArr; delay_us
</UL>
<BR>[Calls]<UL><LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CT_IIC_Stop
<LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_us
</UL>
<BR>[Called By]<UL><LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FT5206_RD_Reg
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FT5206_WR_Reg
</UL>

<P><STRONG><a name="[231]"></a>CanNum</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, screen1view.o(i.CanNum))
<BR><BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Can_Rx_Handle
</UL>

<P><STRONG><a name="[7d]"></a>CanTX_Handle</STRONG> (Thumb, 108 bytes, Stack size 8 bytes, freertos.o(i.CanTX_Handle))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = CanTX_Handle &rArr; osEventFlagsWait &rArr; xEventGroupWaitBits &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osEventFlagsWait
<LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osDelay
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_CAN_GetTxMailboxesFreeLevel
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_CAN_AddTxMessage
<LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> freertos.o(i.MX_FREERTOS_Init)
</UL>
<P><STRONG><a name="[74]"></a>Can_Rx_Handle</STRONG> (Thumb, 62 bytes, Stack size 0 bytes, freertos.o(i.Can_Rx_Handle))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = Can_Rx_Handle &rArr; osSemaphoreAcquire &rArr; xQueueSemaphoreTake &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osSemaphoreAcquire
<LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osDelay
<LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CanNum
</UL>
<BR>[Address Reference Count : 1]<UL><LI> freertos.o(i.MX_FREERTOS_Init)
</UL>
<P><STRONG><a name="[6c]"></a>DMA2D_IRQHandler</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f4xx_it.o(i.DMA2D_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = DMA2D_IRQHandler &rArr; HAL_DMA2D_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA2D_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[4b]"></a>DMA2_Stream0_IRQHandler</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f4xx_it.o(i.DMA2_Stream0_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = DMA2_Stream0_IRQHandler &rArr; HAL_DMA_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[234]"></a>DTU_C_Num</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, screen1view.o(i.DTU_C_Num))
<BR><BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dtu_datHandle
</UL>

<P><STRONG><a name="[10]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_it.o(i.DebugMon_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[7c]"></a>Dtu_datHandle</STRONG> (Thumb, 128 bytes, Stack size 24 bytes, freertos.o(i.Dtu_datHandle))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = Dtu_datHandle &rArr; osEventFlagsWait &rArr; xEventGroupWaitBits &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osEventFlagsWait
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osEventFlagsSet
<LI><a href="#[239]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Updattim
<LI><a href="#[236]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_SetTime
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_SetDate
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_DST_Add1Hour
<LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DTU_C_Num
</UL>
<BR>[Address Reference Count : 1]<UL><LI> freertos.o(i.MX_FREERTOS_Init)
</UL>
<P><STRONG><a name="[246]"></a>Error_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, main.o(i.Error_Handler))
<BR><BR>[Called By]<UL><LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_USART1_UART_Init
<LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_RTC_Init
<LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_LTDC_Init
<LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_IWDG_Init
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_FMC_Init
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_DMA2D_Init
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_CRC_Init
<LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_CAN1_Init
<LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_ADC1_Init
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_MspInit
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_MspInit
<LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_ADC_MspInit
</UL>

<P><STRONG><a name="[290]"></a>FMC_SDRAM_Init</STRONG> (Thumb, 102 bytes, Stack size 20 bytes, stm32f4xx_ll_fmc.o(i.FMC_SDRAM_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = FMC_SDRAM_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SDRAM_Init
</UL>

<P><STRONG><a name="[293]"></a>FMC_SDRAM_ProgramRefreshRate</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f4xx_ll_fmc.o(i.FMC_SDRAM_ProgramRefreshRate))
<BR><BR>[Called By]<UL><LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SDRAM_ProgramRefreshRate
</UL>

<P><STRONG><a name="[23a]"></a>FMC_SDRAM_SendCommand</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, stm32f4xx_ll_fmc.o(i.FMC_SDRAM_SendCommand))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = FMC_SDRAM_SendCommand
</UL>
<BR>[Calls]<UL><LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SDRAM_SendCommand
</UL>

<P><STRONG><a name="[291]"></a>FMC_SDRAM_Timing_Init</STRONG> (Thumb, 154 bytes, Stack size 20 bytes, stm32f4xx_ll_fmc.o(i.FMC_SDRAM_Timing_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = FMC_SDRAM_Timing_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SDRAM_Init
</UL>

<P><STRONG><a name="[23c]"></a>FT5206_Init</STRONG> (Thumb, 216 bytes, Stack size 48 bytes, ft5206.o(i.FT5206_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = FT5206_Init &rArr; FT5206_RD_Reg &rArr; CT_IIC_Read_Byte &rArr; CT_IIC_NAck &rArr; delay_us
</UL>
<BR>[Calls]<UL><LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
<LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FT5206_RD_Reg
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FT5206_WR_Reg
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CT_IIC_Init
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
</UL>
<BR>[Called By]<UL><LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32TouchController::init()
</UL>

<P><STRONG><a name="[23f]"></a>FT5206_RD_Reg</STRONG> (Thumb, 86 bytes, Stack size 24 bytes, ft5206.o(i.FT5206_RD_Reg))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = FT5206_RD_Reg &rArr; CT_IIC_Read_Byte &rArr; CT_IIC_NAck &rArr; delay_us
</UL>
<BR>[Calls]<UL><LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CT_IIC_Wait_Ack
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CT_IIC_Stop
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CT_IIC_Start
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CT_IIC_Send_Byte
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CT_IIC_Read_Byte
</UL>
<BR>[Called By]<UL><LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FT5206_Init
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32TouchController::sampleTouch(int&, int&)
</UL>

<P><STRONG><a name="[23e]"></a>FT5206_WR_Reg</STRONG> (Thumb, 72 bytes, Stack size 24 bytes, ft5206.o(i.FT5206_WR_Reg))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = FT5206_WR_Reg &rArr; CT_IIC_Wait_Ack &rArr; CT_IIC_Stop &rArr; delay_us
</UL>
<BR>[Calls]<UL><LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CT_IIC_Wait_Ack
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CT_IIC_Stop
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CT_IIC_Start
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CT_IIC_Send_Byte
</UL>
<BR>[Called By]<UL><LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FT5206_Init
</UL>

<P><STRONG><a name="[2c2]"></a>GPIO_AF_Set</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, sys.o(i.GPIO_AF_Set))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GPIO_AF_Set
</UL>
<BR>[Called By]<UL><LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI5_Init
</UL>

<P><STRONG><a name="[2c1]"></a>GPIO_Set</STRONG> (Thumb, 156 bytes, Stack size 36 bytes, sys.o(i.GPIO_Set))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = GPIO_Set
</UL>
<BR>[Called By]<UL><LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25QXX_Init
<LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI5_Init
</UL>

<P><STRONG><a name="[240]"></a>GpsNum</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, screen1view.o(i.GpsNum))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = GpsNum &rArr; Screen1View::Screen1gpsNum(double&) &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1View::Screen1gpsNum(double&)
</UL>
<BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Speed_Handle
</UL>

<P><STRONG><a name="[2a6]"></a>HAL_ADC_ConfigChannel</STRONG> (Thumb, 334 bytes, Stack size 20 bytes, stm32f4xx_hal_adc.o(i.HAL_ADC_ConfigChannel))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = HAL_ADC_ConfigChannel
</UL>
<BR>[Called By]<UL><LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_ADC1_Init
</UL>

<P><STRONG><a name="[21c]"></a>HAL_ADC_ConvCpltCallback</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, adc.o(i.HAL_ADC_ConvCpltCallback))
<BR><BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_DMAConvCplt
</UL>

<P><STRONG><a name="[21d]"></a>HAL_ADC_ConvHalfCpltCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_hal_adc.o(i.HAL_ADC_ConvHalfCpltCallback))
<BR><BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_DMAHalfConvCplt
</UL>

<P><STRONG><a name="[21b]"></a>HAL_ADC_ErrorCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_hal_adc.o(i.HAL_ADC_ErrorCallback))
<BR><BR>[Called By]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_DMAError
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_DMAConvCplt
</UL>

<P><STRONG><a name="[242]"></a>HAL_ADC_Init</STRONG> (Thumb, 84 bytes, Stack size 16 bytes, stm32f4xx_hal_adc.o(i.HAL_ADC_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = HAL_ADC_Init &rArr; HAL_ADC_MspInit &rArr; HAL_DMA_Init &rArr; DMA_CheckFifoParam
</UL>
<BR>[Calls]<UL><LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_ADC_MspInit
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_ADC1_Init
</UL>

<P><STRONG><a name="[243]"></a>HAL_ADC_MspInit</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, adc.o(i.HAL_ADC_MspInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = HAL_ADC_MspInit &rArr; HAL_DMA_Init &rArr; DMA_CheckFifoParam
</UL>
<BR>[Calls]<UL><LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_Handler
<LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_ADC_Init
</UL>

<P><STRONG><a name="[21e]"></a>HAL_ADC_Start_DMA</STRONG> (Thumb, 302 bytes, Stack size 24 bytes, stm32f4xx_hal_adc.o(i.HAL_ADC_Start_DMA))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = HAL_ADC_Start_DMA &rArr; HAL_DMA_Start_IT &rArr; DMA_SetConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_Start_IT
</UL>
<BR>[Called By]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;temAdc_Handle
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BspInit_Handle
</UL>

<P><STRONG><a name="[21f]"></a>HAL_CAN_ActivateNotification</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, stm32f4xx_hal_can.o(i.HAL_CAN_ActivateNotification))
<BR><BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BspInit_Handle
</UL>

<P><STRONG><a name="[22e]"></a>HAL_CAN_AddTxMessage</STRONG> (Thumb, 220 bytes, Stack size 20 bytes, stm32f4xx_hal_can.o(i.HAL_CAN_AddTxMessage))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = HAL_CAN_AddTxMessage
</UL>
<BR>[Called By]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CanTX_Handle
</UL>

<P><STRONG><a name="[2a8]"></a>HAL_CAN_ConfigFilter</STRONG> (Thumb, 262 bytes, Stack size 8 bytes, stm32f4xx_hal_can.o(i.HAL_CAN_ConfigFilter))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HAL_CAN_ConfigFilter
</UL>
<BR>[Called By]<UL><LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_CAN1_Init
</UL>

<P><STRONG><a name="[254]"></a>HAL_CAN_ErrorCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_hal_can.o(i.HAL_CAN_ErrorCallback))
<BR><BR>[Called By]<UL><LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_CAN_IRQHandler
</UL>

<P><STRONG><a name="[25a]"></a>HAL_CAN_GetRxMessage</STRONG> (Thumb, 232 bytes, Stack size 12 bytes, stm32f4xx_hal_can.o(i.HAL_CAN_GetRxMessage))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = HAL_CAN_GetRxMessage
</UL>
<BR>[Called By]<UL><LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_CAN_RxFifo0MsgPendingCallback
</UL>

<P><STRONG><a name="[22d]"></a>HAL_CAN_GetTxMailboxesFreeLevel</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, stm32f4xx_hal_can.o(i.HAL_CAN_GetTxMailboxesFreeLevel))
<BR><BR>[Called By]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CanTX_Handle
</UL>

<P><STRONG><a name="[222]"></a>HAL_CAN_IRQHandler</STRONG> (Thumb, 508 bytes, Stack size 40 bytes, stm32f4xx_hal_can.o(i.HAL_CAN_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = HAL_CAN_IRQHandler &rArr; HAL_CAN_RxFifo0MsgPendingCallback &rArr; osSemaphoreRelease &rArr; xQueueGenericSend &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_CAN_RxFifo0MsgPendingCallback
<LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_CAN_WakeUpFromRxMsgCallback
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_CAN_TxMailbox2CompleteCallback
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_CAN_TxMailbox2AbortCallback
<LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_CAN_TxMailbox1CompleteCallback
<LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_CAN_TxMailbox1AbortCallback
<LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_CAN_TxMailbox0CompleteCallback
<LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_CAN_TxMailbox0AbortCallback
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_CAN_SleepCallback
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_CAN_RxFifo1MsgPendingCallback
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_CAN_RxFifo1FullCallback
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_CAN_RxFifo0FullCallback
<LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_CAN_ErrorCallback
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAN1_TX_IRQHandler
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAN1_RX0_IRQHandler
</UL>

<P><STRONG><a name="[255]"></a>HAL_CAN_Init</STRONG> (Thumb, 282 bytes, Stack size 16 bytes, stm32f4xx_hal_can.o(i.HAL_CAN_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = HAL_CAN_Init &rArr; HAL_CAN_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_CAN_MspInit
<LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_CAN1_Init
</UL>

<P><STRONG><a name="[256]"></a>HAL_CAN_MspInit</STRONG> (Thumb, 126 bytes, Stack size 32 bytes, can.o(i.HAL_CAN_MspInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = HAL_CAN_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
<LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_EnableIRQ
<LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_CAN_Init
</UL>

<P><STRONG><a name="[24e]"></a>HAL_CAN_RxFifo0FullCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_hal_can.o(i.HAL_CAN_RxFifo0FullCallback))
<BR><BR>[Called By]<UL><LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_CAN_IRQHandler
</UL>

<P><STRONG><a name="[24f]"></a>HAL_CAN_RxFifo0MsgPendingCallback</STRONG> (Thumb, 398 bytes, Stack size 16 bytes, freertos.o(i.HAL_CAN_RxFifo0MsgPendingCallback))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = HAL_CAN_RxFifo0MsgPendingCallback &rArr; osSemaphoreRelease &rArr; xQueueGenericSend &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osSemaphoreRelease
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osEventFlagsSet
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_CAN_GetRxMessage
</UL>
<BR>[Called By]<UL><LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_CAN_IRQHandler
</UL>

<P><STRONG><a name="[250]"></a>HAL_CAN_RxFifo1FullCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_hal_can.o(i.HAL_CAN_RxFifo1FullCallback))
<BR><BR>[Called By]<UL><LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_CAN_IRQHandler
</UL>

<P><STRONG><a name="[251]"></a>HAL_CAN_RxFifo1MsgPendingCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_hal_can.o(i.HAL_CAN_RxFifo1MsgPendingCallback))
<BR><BR>[Called By]<UL><LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_CAN_IRQHandler
</UL>

<P><STRONG><a name="[252]"></a>HAL_CAN_SleepCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_hal_can.o(i.HAL_CAN_SleepCallback))
<BR><BR>[Called By]<UL><LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_CAN_IRQHandler
</UL>

<P><STRONG><a name="[220]"></a>HAL_CAN_Start</STRONG> (Thumb, 88 bytes, Stack size 16 bytes, stm32f4xx_hal_can.o(i.HAL_CAN_Start))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_CAN_Start
</UL>
<BR>[Calls]<UL><LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BspInit_Handle
</UL>

<P><STRONG><a name="[249]"></a>HAL_CAN_TxMailbox0AbortCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_hal_can.o(i.HAL_CAN_TxMailbox0AbortCallback))
<BR><BR>[Called By]<UL><LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_CAN_IRQHandler
</UL>

<P><STRONG><a name="[248]"></a>HAL_CAN_TxMailbox0CompleteCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_hal_can.o(i.HAL_CAN_TxMailbox0CompleteCallback))
<BR><BR>[Called By]<UL><LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_CAN_IRQHandler
</UL>

<P><STRONG><a name="[24b]"></a>HAL_CAN_TxMailbox1AbortCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_hal_can.o(i.HAL_CAN_TxMailbox1AbortCallback))
<BR><BR>[Called By]<UL><LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_CAN_IRQHandler
</UL>

<P><STRONG><a name="[24a]"></a>HAL_CAN_TxMailbox1CompleteCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_hal_can.o(i.HAL_CAN_TxMailbox1CompleteCallback))
<BR><BR>[Called By]<UL><LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_CAN_IRQHandler
</UL>

<P><STRONG><a name="[24d]"></a>HAL_CAN_TxMailbox2AbortCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_hal_can.o(i.HAL_CAN_TxMailbox2AbortCallback))
<BR><BR>[Called By]<UL><LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_CAN_IRQHandler
</UL>

<P><STRONG><a name="[24c]"></a>HAL_CAN_TxMailbox2CompleteCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_hal_can.o(i.HAL_CAN_TxMailbox2CompleteCallback))
<BR><BR>[Called By]<UL><LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_CAN_IRQHandler
</UL>

<P><STRONG><a name="[253]"></a>HAL_CAN_WakeUpFromRxMsgCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_hal_can.o(i.HAL_CAN_WakeUpFromRxMsgCallback))
<BR><BR>[Called By]<UL><LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_CAN_IRQHandler
</UL>

<P><STRONG><a name="[25c]"></a>HAL_CRC_Init</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, stm32f4xx_hal_crc.o(i.HAL_CRC_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_CRC_Init &rArr; HAL_CRC_MspInit
</UL>
<BR>[Calls]<UL><LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_CRC_MspInit
</UL>
<BR>[Called By]<UL><LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_CRC_Init
</UL>

<P><STRONG><a name="[25d]"></a>HAL_CRC_MspInit</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, crc.o(i.HAL_CRC_MspInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HAL_CRC_MspInit
</UL>
<BR>[Called By]<UL><LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_CRC_Init
</UL>

<P><STRONG><a name="[25f]"></a>HAL_DMA2D_CLUTLoadingCpltCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_hal_dma2d.o(i.HAL_DMA2D_CLUTLoadingCpltCallback))
<BR><BR>[Called By]<UL><LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA2D_IRQHandler
</UL>

<P><STRONG><a name="[2ab]"></a>HAL_DMA2D_ConfigLayer</STRONG> (Thumb, 158 bytes, Stack size 16 bytes, stm32f4xx_hal_dma2d.o(i.HAL_DMA2D_ConfigLayer))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_DMA2D_ConfigLayer
</UL>
<BR>[Called By]<UL><LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_DMA2D_Init
</UL>

<P><STRONG><a name="[232]"></a>HAL_DMA2D_IRQHandler</STRONG> (Thumb, 286 bytes, Stack size 32 bytes, stm32f4xx_hal_dma2d.o(i.HAL_DMA2D_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = HAL_DMA2D_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA2D_LineEventCallback
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA2D_CLUTLoadingCpltCallback
</UL>
<BR>[Called By]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA2D_IRQHandler
</UL>

<P><STRONG><a name="[260]"></a>HAL_DMA2D_Init</STRONG> (Thumb, 90 bytes, Stack size 16 bytes, stm32f4xx_hal_dma2d.o(i.HAL_DMA2D_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = HAL_DMA2D_Init &rArr; HAL_DMA2D_MspInit &rArr; HAL_NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA2D_MspInit
</UL>
<BR>[Called By]<UL><LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_DMA2D_Init
</UL>

<P><STRONG><a name="[25e]"></a>HAL_DMA2D_LineEventCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_hal_dma2d.o(i.HAL_DMA2D_LineEventCallback))
<BR><BR>[Called By]<UL><LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA2D_IRQHandler
</UL>

<P><STRONG><a name="[261]"></a>HAL_DMA2D_MspInit</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, dma2d.o(i.HAL_DMA2D_MspInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = HAL_DMA2D_MspInit &rArr; HAL_NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_EnableIRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA2D_Init
</UL>

<P><STRONG><a name="[233]"></a>HAL_DMA_IRQHandler</STRONG> (Thumb, 412 bytes, Stack size 32 bytes, stm32f4xx_hal_dma.o(i.HAL_DMA_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = HAL_DMA_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA2_Stream0_IRQHandler
</UL>

<P><STRONG><a name="[245]"></a>HAL_DMA_Init</STRONG> (Thumb, 206 bytes, Stack size 24 bytes, stm32f4xx_hal_dma.o(i.HAL_DMA_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = HAL_DMA_Init &rArr; DMA_CheckFifoParam
</UL>
<BR>[Calls]<UL><LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_CheckFifoParam
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_CalcBaseAndBitshift
<LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_ADC_MspInit
</UL>

<P><STRONG><a name="[247]"></a>HAL_DMA_Start_IT</STRONG> (Thumb, 110 bytes, Stack size 24 bytes, stm32f4xx_hal_dma.o(i.HAL_DMA_Start_IT))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = HAL_DMA_Start_IT &rArr; DMA_SetConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_SetConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_ADC_Start_DMA
</UL>

<P><STRONG><a name="[265]"></a>HAL_Delay</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, stm32f4xx_hal.o(i.HAL_Delay))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_Delay
</UL>
<BR>[Calls]<UL><LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDRAM_Initialization_Sequence
</UL>

<P><STRONG><a name="[226]"></a>HAL_GPIO_Init</STRONG> (Thumb, 510 bytes, Stack size 40 bytes, stm32f4xx_hal_gpio.o(i.HAL_GPIO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = HAL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_GPIO_Init
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_MspInit
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_MspInit
<LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_FMC_MspInit
<LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_CAN_MspInit
<LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FT5206_Init
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CT_IIC_Init
</UL>

<P><STRONG><a name="[2b4]"></a>HAL_GPIO_WritePin</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f4xx_hal_gpio.o(i.HAL_GPIO_WritePin))
<BR><BR>[Called By]<UL><LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_GPIO_Init
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXHAL::initialize()
</UL>

<P><STRONG><a name="[23b]"></a>HAL_GetTick</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f4xx_hal.o(i.HAL_GetTick))
<BR><BR>[Called By]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_CAN_Start
<LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_OscConfig
<LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_ClockConfig
<LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PWREx_EnableOverDrive
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Transmit
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_SetAlarm
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_PeriphCLKConfig
<LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_IWDG_Init
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_CAN_Init
<LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_Init
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Delay
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FMC_SDRAM_SendCommand
<LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_EnterInitMode
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_WaitForSynchro
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_WaitOnFlagUntilTimeout
</UL>

<P><STRONG><a name="[267]"></a>HAL_IWDG_Init</STRONG> (Thumb, 90 bytes, Stack size 16 bytes, stm32f4xx_hal_iwdg.o(i.HAL_IWDG_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_IWDG_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_IWDG_Init
</UL>

<P><STRONG><a name="[29f]"></a>HAL_IncTick</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32f4xx_hal.o(i.HAL_IncTick))
<BR><BR>[Called By]<UL><LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_PeriodElapsedCallback
</UL>

<P><STRONG><a name="[268]"></a>HAL_Init</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, stm32f4xx_hal.o(i.HAL_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = HAL_Init &rArr; HAL_InitTick &rArr; HAL_TIM_Base_Init &rArr; TIM_Base_SetConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
<LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_MspInit
<LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriorityGrouping
</UL>
<BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[26a]"></a>HAL_InitTick</STRONG> (Thumb, 132 bytes, Stack size 40 bytes, stm32f4xx_hal_timebase_tim.o(i.HAL_InitTick))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = HAL_InitTick &rArr; HAL_TIM_Base_Init &rArr; TIM_Base_SetConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_Base_Start_IT
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_Base_Init
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetPCLK1Freq
<LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetClockConfig
<LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_EnableIRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_ClockConfig
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init
</UL>

<P><STRONG><a name="[270]"></a>HAL_LTDC_ConfigLayer</STRONG> (Thumb, 82 bytes, Stack size 24 bytes, stm32f4xx_hal_ltdc.o(i.HAL_LTDC_ConfigLayer))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = HAL_LTDC_ConfigLayer &rArr; LTDC_SetConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTDC_SetConfig
<LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_LTDC_Init
</UL>

<P><STRONG><a name="[274]"></a>HAL_LTDC_ErrorCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_hal_ltdc.o(i.HAL_LTDC_ErrorCallback))
<BR><BR>[Called By]<UL><LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_IRQHandler
</UL>

<P><STRONG><a name="[273]"></a>HAL_LTDC_IRQHandler</STRONG> (Thumb, 202 bytes, Stack size 24 bytes, stm32f4xx_hal_ltdc.o(i.HAL_LTDC_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = HAL_LTDC_IRQHandler &rArr; HAL_LTDC_LineEventCallback &rArr; touchgfx::OSWrappers::signalVSync() &rArr; osMessageQueuePut &rArr; xQueueGenericSend &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_LineEventCallback
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_ReloadEventCallback
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_ErrorCallback
</UL>
<BR>[Called By]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTDC_IRQHandler
</UL>

<P><STRONG><a name="[277]"></a>HAL_LTDC_Init</STRONG> (Thumb, 238 bytes, Stack size 16 bytes, stm32f4xx_hal_ltdc.o(i.HAL_LTDC_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = HAL_LTDC_Init &rArr; HAL_LTDC_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_MspInit
</UL>
<BR>[Called By]<UL><LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_LTDC_Init
</UL>

<P><STRONG><a name="[275]"></a>HAL_LTDC_LineEventCallback</STRONG> (Thumb, 82 bytes, Stack size 8 bytes, touchgfxgeneratedhal.o(i.HAL_LTDC_LineEventCallback))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = HAL_LTDC_LineEventCallback &rArr; touchgfx::OSWrappers::signalVSync() &rArr; osMessageQueuePut &rArr; xQueueGenericSend &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GPIO::clear(touchgfx::GPIO::GPIO_ID)
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GPIO::set(touchgfx::GPIO::GPIO_ID)
<LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::swapFrameBuffers()
<LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::OSWrappers::signalVSync()
<LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_ProgramLineEvent
</UL>
<BR>[Called By]<UL><LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_IRQHandler
</UL>

<P><STRONG><a name="[278]"></a>HAL_LTDC_MspInit</STRONG> (Thumb, 256 bytes, Stack size 96 bytes, ltdc.o(i.HAL_LTDC_MspInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = HAL_LTDC_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_Handler
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_PeriphCLKConfig
<LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_EnableIRQ
<LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_Init
</UL>

<P><STRONG><a name="[279]"></a>HAL_LTDC_ProgramLineEvent</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, stm32f4xx_hal_ltdc.o(i.HAL_LTDC_ProgramLineEvent))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HAL_LTDC_ProgramLineEvent
</UL>
<BR>[Called By]<UL><LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_LineEventCallback
</UL>

<P><STRONG><a name="[276]"></a>HAL_LTDC_ReloadEventCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_hal_ltdc.o(i.HAL_LTDC_ReloadEventCallback))
<BR><BR>[Called By]<UL><LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_IRQHandler
</UL>

<P><STRONG><a name="[26b]"></a>HAL_MspInit</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, stm32f4xx_hal_msp.o(i.HAL_MspInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = HAL_MspInit &rArr; HAL_NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init
</UL>

<P><STRONG><a name="[259]"></a>HAL_NVIC_EnableIRQ</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f4xx_hal_cortex.o(i.HAL_NVIC_EnableIRQ))
<BR><BR>[Called By]<UL><LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_DMA_Init
<LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_MspInit
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA2D_MspInit
<LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_CAN_MspInit
</UL>

<P><STRONG><a name="[258]"></a>HAL_NVIC_SetPriority</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, stm32f4xx_hal_cortex.o(i.HAL_NVIC_SetPriority))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_DMA_Init
<LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
<LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_MspInit
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_MspInit
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA2D_MspInit
<LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_CAN_MspInit
</UL>

<P><STRONG><a name="[269]"></a>HAL_NVIC_SetPriorityGrouping</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f4xx_hal_cortex.o(i.HAL_NVIC_SetPriorityGrouping))
<BR><BR>[Called By]<UL><LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init
</UL>

<P><STRONG><a name="[280]"></a>HAL_PWREx_EnableOverDrive</STRONG> (Thumb, 98 bytes, Stack size 32 bytes, stm32f4xx_hal_pwr_ex.o(i.HAL_PWREx_EnableOverDrive))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = HAL_PWREx_EnableOverDrive
</UL>
<BR>[Calls]<UL><LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
</UL>

<P><STRONG><a name="[27e]"></a>HAL_RCCEx_PeriphCLKConfig</STRONG> (Thumb, 560 bytes, Stack size 40 bytes, stm32f4xx_hal_rcc_ex.o(i.HAL_RCCEx_PeriphCLKConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = HAL_RCCEx_PeriphCLKConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_MspInit
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_MspInit
</UL>

<P><STRONG><a name="[281]"></a>HAL_RCC_ClockConfig</STRONG> (Thumb, 288 bytes, Stack size 32 bytes, stm32f4xx_hal_rcc.o(i.HAL_RCC_ClockConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = HAL_RCC_ClockConfig &rArr; HAL_InitTick &rArr; HAL_TIM_Base_Init &rArr; TIM_Base_SetConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetSysClockFreq
<LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
<LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
</UL>

<P><STRONG><a name="[26c]"></a>HAL_RCC_GetClockConfig</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, stm32f4xx_hal_rcc.o(i.HAL_RCC_GetClockConfig))
<BR><BR>[Called By]<UL><LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
</UL>

<P><STRONG><a name="[26d]"></a>HAL_RCC_GetPCLK1Freq</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f4xx_hal_rcc.o(i.HAL_RCC_GetPCLK1Freq))
<BR><BR>[Called By]<UL><LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SetConfig
</UL>

<P><STRONG><a name="[2cb]"></a>HAL_RCC_GetPCLK2Freq</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f4xx_hal_rcc.o(i.HAL_RCC_GetPCLK2Freq))
<BR><BR>[Called By]<UL><LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SetConfig
</UL>

<P><STRONG><a name="[282]"></a>HAL_RCC_GetSysClockFreq</STRONG> (Thumb, 88 bytes, Stack size 8 bytes, stm32f4xx_hal_rcc.o(i.HAL_RCC_GetSysClockFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = HAL_RCC_GetSysClockFreq &rArr; __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_ClockConfig
</UL>

<P><STRONG><a name="[283]"></a>HAL_RCC_OscConfig</STRONG> (Thumb, 856 bytes, Stack size 40 bytes, stm32f4xx_hal_rcc.o(i.HAL_RCC_OscConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = HAL_RCC_OscConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
</UL>

<P><STRONG><a name="[237]"></a>HAL_RTC_DST_Add1Hour</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, stm32f4xx_hal_rtc.o(i.HAL_RTC_DST_Add1Hour))
<BR><BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dtu_datHandle
</UL>

<P><STRONG><a name="[284]"></a>HAL_RTC_GetDate</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, stm32f4xx_hal_rtc.o(i.HAL_RTC_GetDate))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HAL_RTC_GetDate
</UL>
<BR>[Calls]<UL><LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Bcd2ToByte
</UL>
<BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Handle
</UL>

<P><STRONG><a name="[286]"></a>HAL_RTC_GetTime</STRONG> (Thumb, 78 bytes, Stack size 8 bytes, stm32f4xx_hal_rtc.o(i.HAL_RTC_GetTime))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HAL_RTC_GetTime
</UL>
<BR>[Calls]<UL><LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Bcd2ToByte
</UL>
<BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Handle
</UL>

<P><STRONG><a name="[287]"></a>HAL_RTC_Init</STRONG> (Thumb, 136 bytes, Stack size 8 bytes, stm32f4xx_hal_rtc.o(i.HAL_RTC_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = HAL_RTC_Init &rArr; HAL_RTC_MspInit &rArr; HAL_RCCEx_PeriphCLKConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_MspInit
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_ExitInitMode
<LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_EnterInitMode
</UL>
<BR>[Called By]<UL><LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_RTC_Init
</UL>

<P><STRONG><a name="[288]"></a>HAL_RTC_MspInit</STRONG> (Thumb, 52 bytes, Stack size 56 bytes, rtc.o(i.HAL_RTC_MspInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = HAL_RTC_MspInit &rArr; HAL_RCCEx_PeriphCLKConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_Handler
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_PeriphCLKConfig
<LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_Init
</UL>

<P><STRONG><a name="[28b]"></a>HAL_RTC_SetAlarm</STRONG> (Thumb, 364 bytes, Stack size 40 bytes, stm32f4xx_hal_rtc.o(i.HAL_RTC_SetAlarm))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = HAL_RTC_SetAlarm
</UL>
<BR>[Calls]<UL><LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_ByteToBcd2
</UL>
<BR>[Called By]<UL><LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_RTC_Init
</UL>

<P><STRONG><a name="[235]"></a>HAL_RTC_SetDate</STRONG> (Thumb, 146 bytes, Stack size 16 bytes, stm32f4xx_hal_rtc.o(i.HAL_RTC_SetDate))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = HAL_RTC_SetDate &rArr; RTC_ExitInitMode &rArr; HAL_RTC_WaitForSynchro
</UL>
<BR>[Calls]<UL><LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_ExitInitMode
<LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_EnterInitMode
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_ByteToBcd2
</UL>
<BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dtu_datHandle
<LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_RTC_Init
</UL>

<P><STRONG><a name="[236]"></a>HAL_RTC_SetTime</STRONG> (Thumb, 186 bytes, Stack size 24 bytes, stm32f4xx_hal_rtc.o(i.HAL_RTC_SetTime))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = HAL_RTC_SetTime &rArr; RTC_ExitInitMode &rArr; HAL_RTC_WaitForSynchro
</UL>
<BR>[Calls]<UL><LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_ExitInitMode
<LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_EnterInitMode
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_ByteToBcd2
</UL>
<BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dtu_datHandle
<LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_RTC_Init
</UL>

<P><STRONG><a name="[28d]"></a>HAL_RTC_WaitForSynchro</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, stm32f4xx_hal_rtc.o(i.HAL_RTC_WaitForSynchro))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_RTC_WaitForSynchro
</UL>
<BR>[Calls]<UL><LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_ExitInitMode
</UL>

<P><STRONG><a name="[28e]"></a>HAL_SDRAM_Init</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, stm32f4xx_hal_sdram.o(i.HAL_SDRAM_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = HAL_SDRAM_Init &rArr; HAL_SDRAM_MspInit &rArr; HAL_FMC_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SDRAM_MspInit
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FMC_SDRAM_Timing_Init
<LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FMC_SDRAM_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_FMC_Init
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDRAM_Init
</UL>

<P><STRONG><a name="[28f]"></a>HAL_SDRAM_MspInit</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, fmc.o(i.HAL_SDRAM_MspInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = HAL_SDRAM_MspInit &rArr; HAL_FMC_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_FMC_MspInit
</UL>
<BR>[Called By]<UL><LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SDRAM_Init
</UL>

<P><STRONG><a name="[292]"></a>HAL_SDRAM_ProgramRefreshRate</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, stm32f4xx_hal_sdram.o(i.HAL_SDRAM_ProgramRefreshRate))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HAL_SDRAM_ProgramRefreshRate
</UL>
<BR>[Calls]<UL><LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FMC_SDRAM_ProgramRefreshRate
</UL>
<BR>[Called By]<UL><LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDRAM_Initialization_Sequence
</UL>

<P><STRONG><a name="[294]"></a>HAL_SDRAM_SendCommand</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, stm32f4xx_hal_sdram.o(i.HAL_SDRAM_SendCommand))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = HAL_SDRAM_SendCommand &rArr; FMC_SDRAM_SendCommand
</UL>
<BR>[Calls]<UL><LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FMC_SDRAM_SendCommand
</UL>
<BR>[Called By]<UL><LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDRAM_Send_Cmd
</UL>

<P><STRONG><a name="[29c]"></a>HAL_TIMEx_BreakCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_hal_tim_ex.o(i.HAL_TIMEx_BreakCallback))
<BR><BR>[Called By]<UL><LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IRQHandler
</UL>

<P><STRONG><a name="[29e]"></a>HAL_TIMEx_CommutCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_hal_tim_ex.o(i.HAL_TIMEx_CommutCallback))
<BR><BR>[Called By]<UL><LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IRQHandler
</UL>

<P><STRONG><a name="[26e]"></a>HAL_TIM_Base_Init</STRONG> (Thumb, 90 bytes, Stack size 8 bytes, stm32f4xx_hal_tim.o(i.HAL_TIM_Base_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = HAL_TIM_Base_Init &rArr; TIM_Base_SetConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_Base_MspInit
<LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Base_SetConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
</UL>

<P><STRONG><a name="[295]"></a>HAL_TIM_Base_MspInit</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_hal_tim.o(i.HAL_TIM_Base_MspInit))
<BR><BR>[Called By]<UL><LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_Base_Init
</UL>

<P><STRONG><a name="[26f]"></a>HAL_TIM_Base_Start_IT</STRONG> (Thumb, 100 bytes, Stack size 0 bytes, stm32f4xx_hal_tim.o(i.HAL_TIM_Base_Start_IT))
<BR><BR>[Called By]<UL><LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
</UL>

<P><STRONG><a name="[298]"></a>HAL_TIM_IC_CaptureCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_hal_tim.o(i.HAL_TIM_IC_CaptureCallback))
<BR><BR>[Called By]<UL><LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IRQHandler
</UL>

<P><STRONG><a name="[297]"></a>HAL_TIM_IRQHandler</STRONG> (Thumb, 358 bytes, Stack size 16 bytes, stm32f4xx_hal_tim.o(i.HAL_TIM_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_TIM_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_PeriodElapsedCallback
<LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_TriggerCallback
<LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_PWM_PulseFinishedCallback
<LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_OC_DelayElapsedCallback
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IC_CaptureCallback
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIMEx_CommutCallback
<LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIMEx_BreakCallback
</UL>
<BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM7_IRQHandler
</UL>

<P><STRONG><a name="[299]"></a>HAL_TIM_OC_DelayElapsedCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_hal_tim.o(i.HAL_TIM_OC_DelayElapsedCallback))
<BR><BR>[Called By]<UL><LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IRQHandler
</UL>

<P><STRONG><a name="[29a]"></a>HAL_TIM_PWM_PulseFinishedCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_hal_tim.o(i.HAL_TIM_PWM_PulseFinishedCallback))
<BR><BR>[Called By]<UL><LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IRQHandler
</UL>

<P><STRONG><a name="[29b]"></a>HAL_TIM_PeriodElapsedCallback</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, main.o(i.HAL_TIM_PeriodElapsedCallback))
<BR><BR>[Calls]<UL><LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_IncTick
</UL>
<BR>[Called By]<UL><LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IRQHandler
</UL>

<P><STRONG><a name="[29d]"></a>HAL_TIM_TriggerCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_hal_tim.o(i.HAL_TIM_TriggerCallback))
<BR><BR>[Called By]<UL><LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IRQHandler
</UL>

<P><STRONG><a name="[2a0]"></a>HAL_UART_Init</STRONG> (Thumb, 98 bytes, Stack size 16 bytes, stm32f4xx_hal_uart.o(i.HAL_UART_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = HAL_UART_Init &rArr; HAL_UART_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_MspInit
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SetConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_USART1_UART_Init
</UL>

<P><STRONG><a name="[2a1]"></a>HAL_UART_MspInit</STRONG> (Thumb, 94 bytes, Stack size 32 bytes, usart.o(i.HAL_UART_MspInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = HAL_UART_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
<LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Init
</UL>

<P><STRONG><a name="[2a3]"></a>HAL_UART_Transmit</STRONG> (Thumb, 178 bytes, Stack size 32 bytes, stm32f4xx_hal_uart.o(i.HAL_UART_Transmit))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = HAL_UART_Transmit &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Called By]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fputc
</UL>

<P><STRONG><a name="[b]"></a>HardFault_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f4xx_it.o(i.HardFault_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[76]"></a>IWDG_Handle</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, freertos.o(i.IWDG_Handle))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = IWDG_Handle &rArr; osDelay &rArr; vTaskDelay &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osDelay
</UL>
<BR>[Address Reference Count : 1]<UL><LI> freertos.o(i.MX_FREERTOS_Init)
</UL>
<P><STRONG><a name="[6a]"></a>LTDC_IRQHandler</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f4xx_it.o(i.LTDC_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = LTDC_IRQHandler &rArr; HAL_LTDC_IRQHandler &rArr; HAL_LTDC_LineEventCallback &rArr; touchgfx::OSWrappers::signalVSync() &rArr; osMessageQueuePut &rArr; xQueueGenericSend &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[2a5]"></a>MX_ADC1_Init</STRONG> (Thumb, 90 bytes, Stack size 24 bytes, adc.o(i.MX_ADC1_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = MX_ADC1_Init &rArr; HAL_ADC_Init &rArr; HAL_ADC_MspInit &rArr; HAL_DMA_Init &rArr; DMA_CheckFifoParam
</UL>
<BR>[Calls]<UL><LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_Handler
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_ADC_Init
<LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_ADC_ConfigChannel
</UL>
<BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[2a7]"></a>MX_CAN1_Init</STRONG> (Thumb, 84 bytes, Stack size 56 bytes, can.o(i.MX_CAN1_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = MX_CAN1_Init &rArr; HAL_CAN_Init &rArr; HAL_CAN_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_Handler
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_CAN_Init
<LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_CAN_ConfigFilter
</UL>
<BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[2a9]"></a>MX_CRC_Init</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, crc.o(i.MX_CRC_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = MX_CRC_Init &rArr; HAL_CRC_Init &rArr; HAL_CRC_MspInit
</UL>
<BR>[Calls]<UL><LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_Handler
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_CRC_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[2aa]"></a>MX_DMA2D_Init</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, dma2d.o(i.MX_DMA2D_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = MX_DMA2D_Init &rArr; HAL_DMA2D_Init &rArr; HAL_DMA2D_MspInit &rArr; HAL_NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_Handler
<LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA2D_Init
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA2D_ConfigLayer
</UL>
<BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[2ac]"></a>MX_DMA_Init</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, dma.o(i.MX_DMA_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = MX_DMA_Init &rArr; HAL_NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_EnableIRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[2ad]"></a>MX_FMC_Init</STRONG> (Thumb, 100 bytes, Stack size 32 bytes, fmc.o(i.MX_FMC_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = MX_FMC_Init &rArr; SDRAM_Init &rArr; HAL_SDRAM_Init &rArr; HAL_SDRAM_MspInit &rArr; HAL_FMC_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_Handler
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDRAM_Init
<LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SDRAM_Init
<LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[2af]"></a>MX_FREERTOS_Init</STRONG> (Thumb, 218 bytes, Stack size 8 bytes, freertos.o(i.MX_FREERTOS_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = MX_FREERTOS_Init &rArr; osThreadNew &rArr; xTaskCreate &rArr; pvPortMalloc &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osThreadNew
<LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osSemaphoreNew
<LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osEventFlagsNew
</UL>
<BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[2b3]"></a>MX_GPIO_Init</STRONG> (Thumb, 198 bytes, Stack size 40 bytes, gpio.o(i.MX_GPIO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = MX_GPIO_Init &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
<LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
<LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[2b5]"></a>MX_IWDG_Init</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, iwdg.o(i.MX_IWDG_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = MX_IWDG_Init &rArr; HAL_IWDG_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_Handler
<LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_IWDG_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[2b6]"></a>MX_LTDC_Init</STRONG> (Thumb, 162 bytes, Stack size 64 bytes, ltdc.o(i.MX_LTDC_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = MX_LTDC_Init &rArr; HAL_LTDC_Init &rArr; HAL_LTDC_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_Handler
<LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_Init
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_ConfigLayer
<LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[2b7]"></a>MX_RTC_Init</STRONG> (Thumb, 190 bytes, Stack size 80 bytes, rtc.o(i.MX_RTC_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = MX_RTC_Init &rArr; HAL_RTC_Init &rArr; HAL_RTC_MspInit &rArr; HAL_RCCEx_PeriphCLKConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[236]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_SetTime
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_SetDate
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_Handler
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_SetAlarm
<LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_Init
<LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[2b8]"></a>MX_TouchGFX_Init</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, app_touchgfx.o(i.MX_TouchGFX_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = MX_TouchGFX_Init &rArr; touchgfx_init &rArr; TouchGFXHAL::initialize() &rArr; TouchGFXGeneratedHAL::initialize() &rArr; touchgfx::HAL::initialize() &rArr; touchgfx::OSWrappers::initialize() &rArr; osSemaphoreNew &rArr; xQueueGenericSend &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx_init
<LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx_components_init
</UL>
<BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[424]"></a>MX_TouchGFX_PreOSInit</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, app_touchgfx.o(i.MX_TouchGFX_PreOSInit))
<BR><BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[2bb]"></a>MX_USART1_UART_Init</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, usart.o(i.MX_USART1_UART_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = MX_USART1_UART_Init &rArr; HAL_UART_Init &rArr; HAL_UART_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_Handler
<LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[c]"></a>MemManage_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_it.o(i.MemManage_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_it.o(i.NMI_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[285]"></a>RTC_Bcd2ToByte</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f4xx_hal_rtc.o(i.RTC_Bcd2ToByte))
<BR><BR>[Called By]<UL><LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_GetTime
<LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_GetDate
</UL>

<P><STRONG><a name="[28c]"></a>RTC_ByteToBcd2</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f4xx_hal_rtc.o(i.RTC_ByteToBcd2))
<BR><BR>[Called By]<UL><LI><a href="#[236]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_SetTime
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_SetDate
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_SetAlarm
</UL>

<P><STRONG><a name="[289]"></a>RTC_EnterInitMode</STRONG> (Thumb, 72 bytes, Stack size 24 bytes, stm32f4xx_hal_rtc.o(i.RTC_EnterInitMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = RTC_EnterInitMode
</UL>
<BR>[Calls]<UL><LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[236]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_SetTime
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_SetDate
<LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_Init
</UL>

<P><STRONG><a name="[28a]"></a>RTC_ExitInitMode</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, stm32f4xx_hal_rtc.o(i.RTC_ExitInitMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = RTC_ExitInitMode &rArr; HAL_RTC_WaitForSynchro
</UL>
<BR>[Calls]<UL><LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_WaitForSynchro
</UL>
<BR>[Called By]<UL><LI><a href="#[236]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_SetTime
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_SetDate
<LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_Init
</UL>

<P><STRONG><a name="[7b]"></a>RTC_Handle</STRONG> (Thumb, 60 bytes, Stack size 32 bytes, freertos.o(i.RTC_Handle))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = RTC_Handle &rArr; osDelay &rArr; vTaskDelay &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osDelay
<LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RtcNum
<LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_GetTime
<LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_GetDate
</UL>
<BR>[Address Reference Count : 1]<UL><LI> freertos.o(i.MX_FREERTOS_Init)
</UL>
<P><STRONG><a name="[2bc]"></a>RtcNum</STRONG> (Thumb, 34 bytes, Stack size 28 bytes, screen1view.o(i.RtcNum))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = RtcNum &rArr; Screen1View::Screen1RtcNum(unsigned char&, unsigned char&, unsigned char&, unsigned char&, unsigned char&)
</UL>
<BR>[Calls]<UL><LI><a href="#[2bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1View::Screen1RtcNum(unsigned char&, unsigned char&, unsigned char&, unsigned char&, unsigned char&)
</UL>
<BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Handle
</UL>

<P><STRONG><a name="[2ae]"></a>SDRAM_Init</STRONG> (Thumb, 86 bytes, Stack size 32 bytes, sdram.o(i.SDRAM_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = SDRAM_Init &rArr; HAL_SDRAM_Init &rArr; HAL_SDRAM_MspInit &rArr; HAL_FMC_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SDRAM_Init
<LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDRAM_Initialization_Sequence
</UL>
<BR>[Called By]<UL><LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_FMC_Init
</UL>

<P><STRONG><a name="[2be]"></a>SDRAM_Initialization_Sequence</STRONG> (Thumb, 72 bytes, Stack size 8 bytes, sdram.o(i.SDRAM_Initialization_Sequence))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = SDRAM_Initialization_Sequence &rArr; SDRAM_Send_Cmd &rArr; HAL_SDRAM_SendCommand &rArr; FMC_SDRAM_SendCommand
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Delay
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SDRAM_ProgramRefreshRate
<LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDRAM_Send_Cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDRAM_Init
</UL>

<P><STRONG><a name="[2bf]"></a>SDRAM_Send_Cmd</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, sdram.o(i.SDRAM_Send_Cmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = SDRAM_Send_Cmd &rArr; HAL_SDRAM_SendCommand &rArr; FMC_SDRAM_SendCommand
</UL>
<BR>[Calls]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SDRAM_SendCommand
</UL>
<BR>[Called By]<UL><LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SDRAM_Initialization_Sequence
</UL>

<P><STRONG><a name="[2c0]"></a>SPI5_Init</STRONG> (Thumb, 124 bytes, Stack size 16 bytes, spi.o(i.SPI5_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = SPI5_Init &rArr; GPIO_Set
</UL>
<BR>[Calls]<UL><LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI5_ReadWriteByte
<LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Set
<LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_AF_Set
</UL>
<BR>[Called By]<UL><LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25QXX_Init
</UL>

<P><STRONG><a name="[2c3]"></a>SPI5_ReadWriteByte</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, spi.o(i.SPI5_ReadWriteByte))
<BR><BR>[Called By]<UL><LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25QXX_Read
<LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25QXX_Init
<LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25QXX_ReadSR
<LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25QXX_ReadID
<LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI5_Init
</UL>

<P><STRONG><a name="[2cd]"></a>SPI5_SetSpeed</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, spi.o(i.SPI5_SetSpeed))
<BR><BR>[Called By]<UL><LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25QXX_Init
</UL>

<P><STRONG><a name="[77]"></a>Speed_Handle</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, freertos.o(i.Speed_Handle))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = Speed_Handle &rArr; GpsNum &rArr; Screen1View::Screen1gpsNum(double&) &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osEventFlagsWait
<LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GpsNum
</UL>
<BR>[Address Reference Count : 1]<UL><LI> freertos.o(i.MX_FREERTOS_Init)
</UL>
<P><STRONG><a name="[12]"></a>SysTick_Handler</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, cmsis_os2.o(i.SysTick_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = SysTick_Handler &rArr; xPortSysTickHandler &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGetSchedulerState
<LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xPortSysTickHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[2c7]"></a>SystemClock_Config</STRONG> (Thumb, 160 bytes, Stack size 88 bytes, main.o(i.SystemClock_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 188<LI>Call Chain = SystemClock_Config &rArr; HAL_RCC_ClockConfig &rArr; HAL_InitTick &rArr; HAL_TIM_Base_Init &rArr; TIM_Base_SetConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_OscConfig
<LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_ClockConfig
<LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PWREx_EnableOverDrive
<LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[6e]"></a>SystemInit</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, system_stm32f4xx.o(i.SystemInit))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(.text)
</UL>
<P><STRONG><a name="[4a]"></a>TIM7_IRQHandler</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f4xx_it.o(i.TIM7_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = TIM7_IRQHandler &rArr; HAL_TIM_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[296]"></a>TIM_Base_SetConfig</STRONG> (Thumb, 156 bytes, Stack size 20 bytes, stm32f4xx_hal_tim.o(i.TIM_Base_SetConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = TIM_Base_SetConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_Base_Init
</UL>

<P><STRONG><a name="[73]"></a>TouchGFX_Task</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, app_touchgfx.o(i.TouchGFX_Task))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = TouchGFX_Task &rArr; touchgfx_taskEntry &rArr; touchgfx::HAL::taskEntry() &rArr; touchgfx::OSWrappers::waitForVSync() &rArr; osMessageQueueGet &rArr; xQueueReceive &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx_taskEntry
</UL>
<BR>[Address Reference Count : 1]<UL><LI> freertos.o(i.MX_FREERTOS_Init)
</UL>
<P><STRONG><a name="[461]"></a>TpNum</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, screen1view.o(i.TpNum))
<BR><BR>[Called By]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;temAdc_Handle
</UL>

<P><STRONG><a name="[2c9]"></a>Tyre_Num</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, screen1view.o(i.Tyre_Num))
<BR><BR>[Calls]<UL><LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1View::Screen1TyreNum(unsigned char*)
</UL>
<BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Tyresp_Handle
</UL>

<P><STRONG><a name="[7e]"></a>Tyresp_Handle</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, freertos.o(i.Tyresp_Handle))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = Tyresp_Handle &rArr; osEventFlagsWait &rArr; xEventGroupWaitBits &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osEventFlagsWait
<LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osDelay
<LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Tyre_Num
</UL>
<BR>[Address Reference Count : 1]<UL><LI> freertos.o(i.MX_FREERTOS_Init)
</UL>
<P><STRONG><a name="[239]"></a>Updattim</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, screen1view.o(i.Updattim))
<BR><BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dtu_datHandle
</UL>

<P><STRONG><a name="[e]"></a>UsageFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_it.o(i.UsageFault_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f429xx.o(RESET)
</UL>
<P><STRONG><a name="[2cc]"></a>W25QXX_Init</STRONG> (Thumb, 86 bytes, Stack size 24 bytes, w25qxx.o(i.W25QXX_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = W25QXX_Init &rArr; SPI5_Init &rArr; GPIO_Set
</UL>
<BR>[Calls]<UL><LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25QXX_ReadSR
<LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25QXX_ReadID
<LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI5_SetSpeed
<LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI5_ReadWriteByte
<LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI5_Init
<LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Set
</UL>
<BR>[Called By]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXHAL::initialize()
</UL>

<P><STRONG><a name="[2d0]"></a>W25QXX_Read</STRONG> (Thumb, 80 bytes, Stack size 24 bytes, w25qxx.o(i.W25QXX_Read))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = W25QXX_Read
</UL>
<BR>[Calls]<UL><LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI5_ReadWriteByte
</UL>
<BR>[Called By]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXHAL::blockCopy(void*, const void*, unsigned)
</UL>

<P><STRONG><a name="[2ce]"></a>W25QXX_ReadID</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, w25qxx.o(i.W25QXX_ReadID))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = W25QXX_ReadID
</UL>
<BR>[Calls]<UL><LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI5_ReadWriteByte
</UL>
<BR>[Called By]<UL><LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25QXX_Init
</UL>

<P><STRONG><a name="[2cf]"></a>W25QXX_ReadSR</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, w25qxx.o(i.W25QXX_ReadSR))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = W25QXX_ReadSR
</UL>
<BR>[Calls]<UL><LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI5_ReadWriteByte
</UL>
<BR>[Called By]<UL><LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25QXX_Init
</UL>

<P><STRONG><a name="[2d1]"></a>WitNum</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, screen1view.o(i.WitNum))
<BR><BR>[Called By]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Wit_DatHandle
</UL>

<P><STRONG><a name="[78]"></a>Wit_DatHandle</STRONG> (Thumb, 96 bytes, Stack size 24 bytes, freertos.o(i.Wit_DatHandle))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = Wit_DatHandle &rArr; osEventFlagsWait &rArr; xEventGroupWaitBits &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osEventFlagsWait
<LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WitNum
</UL>
<BR>[Address Reference Count : 1]<UL><LI> freertos.o(i.MX_FREERTOS_Init)
</UL>
<P><STRONG><a name="[2d2]"></a>getFont_verdana_15_4bpp()</STRONG> (Thumb, 92 bytes, Stack size 56 bytes, table_verdana_15_4bpp.o(i._Z23getFont_verdana_15_4bppv))
<BR><BR>[Stack]<UL><LI>Max Depth = 164<LI>Call Chain = getFont_verdana_15_4bpp() &rArr; touchgfx::GeneratedFont::GeneratedFont(const touchgfx::GlyphNode*, unsigned short, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, const unsigned char*const *, const touchgfx::KerningNode*, unsigned short, unsigned short, const unsigned short*, const touchgfx::FontContextualFormsTable*) &rArr; touchgfx::ConstFont::ConstFont__sub_object(const touchgfx::GlyphNode*, unsigned short, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned short, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GeneratedFont::GeneratedFont(const touchgfx::GlyphNode*, unsigned short, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, const unsigned char*const *, const touchgfx::KerningNode*, unsigned short, unsigned short, const unsigned short*, const touchgfx::FontContextualFormsTable*)
<LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_acquire
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_atexit
</UL>
<BR>[Called By]<UL><LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___21_typedtextdatabase_cpp_05ec7672
</UL>

<P><STRONG><a name="[2d5]"></a>getFont_verdana_25_4bpp()</STRONG> (Thumb, 92 bytes, Stack size 56 bytes, table_verdana_25_4bpp.o(i._Z23getFont_verdana_25_4bppv))
<BR><BR>[Stack]<UL><LI>Max Depth = 164<LI>Call Chain = getFont_verdana_25_4bpp() &rArr; touchgfx::GeneratedFont::GeneratedFont(const touchgfx::GlyphNode*, unsigned short, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, const unsigned char*const *, const touchgfx::KerningNode*, unsigned short, unsigned short, const unsigned short*, const touchgfx::FontContextualFormsTable*) &rArr; touchgfx::ConstFont::ConstFont__sub_object(const touchgfx::GlyphNode*, unsigned short, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned short, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GeneratedFont::GeneratedFont(const touchgfx::GlyphNode*, unsigned short, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, const unsigned char*const *, const touchgfx::KerningNode*, unsigned short, unsigned short, const unsigned short*, const touchgfx::FontContextualFormsTable*)
<LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_acquire
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_atexit
</UL>
<BR>[Called By]<UL><LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___21_typedtextdatabase_cpp_05ec7672
</UL>

<P><STRONG><a name="[2d6]"></a>getFont_verdana_30_4bpp()</STRONG> (Thumb, 92 bytes, Stack size 56 bytes, table_verdana_30_4bpp.o(i._Z23getFont_verdana_30_4bppv))
<BR><BR>[Stack]<UL><LI>Max Depth = 164<LI>Call Chain = getFont_verdana_30_4bpp() &rArr; touchgfx::GeneratedFont::GeneratedFont(const touchgfx::GlyphNode*, unsigned short, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, const unsigned char*const *, const touchgfx::KerningNode*, unsigned short, unsigned short, const unsigned short*, const touchgfx::FontContextualFormsTable*) &rArr; touchgfx::ConstFont::ConstFont__sub_object(const touchgfx::GlyphNode*, unsigned short, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned short, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GeneratedFont::GeneratedFont(const touchgfx::GlyphNode*, unsigned short, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, const unsigned char*const *, const touchgfx::KerningNode*, unsigned short, unsigned short, const unsigned short*, const touchgfx::FontContextualFormsTable*)
<LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_acquire
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_atexit
</UL>
<BR>[Called By]<UL><LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___21_typedtextdatabase_cpp_05ec7672
</UL>

<P><STRONG><a name="[2d7]"></a>getFont_verdana_40_4bpp()</STRONG> (Thumb, 92 bytes, Stack size 56 bytes, table_verdana_40_4bpp.o(i._Z23getFont_verdana_40_4bppv))
<BR><BR>[Stack]<UL><LI>Max Depth = 164<LI>Call Chain = getFont_verdana_40_4bpp() &rArr; touchgfx::GeneratedFont::GeneratedFont(const touchgfx::GlyphNode*, unsigned short, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, const unsigned char*const *, const touchgfx::KerningNode*, unsigned short, unsigned short, const unsigned short*, const touchgfx::FontContextualFormsTable*) &rArr; touchgfx::ConstFont::ConstFont__sub_object(const touchgfx::GlyphNode*, unsigned short, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned short, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GeneratedFont::GeneratedFont(const touchgfx::GlyphNode*, unsigned short, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, const unsigned char*const *, const touchgfx::KerningNode*, unsigned short, unsigned short, const unsigned short*, const touchgfx::FontContextualFormsTable*)
<LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_acquire
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_atexit
</UL>
<BR>[Called By]<UL><LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___21_typedtextdatabase_cpp_05ec7672
</UL>

<P><STRONG><a name="[2d8]"></a>getFont_verdana_80_4bpp()</STRONG> (Thumb, 92 bytes, Stack size 56 bytes, table_verdana_80_4bpp.o(i._Z23getFont_verdana_80_4bppv))
<BR><BR>[Stack]<UL><LI>Max Depth = 164<LI>Call Chain = getFont_verdana_80_4bpp() &rArr; touchgfx::GeneratedFont::GeneratedFont(const touchgfx::GlyphNode*, unsigned short, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, const unsigned char*const *, const touchgfx::KerningNode*, unsigned short, unsigned short, const unsigned short*, const touchgfx::FontContextualFormsTable*) &rArr; touchgfx::ConstFont::ConstFont__sub_object(const touchgfx::GlyphNode*, unsigned short, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned short, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GeneratedFont::GeneratedFont(const touchgfx::GlyphNode*, unsigned short, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, const unsigned char*const *, const touchgfx::KerningNode*, unsigned short, unsigned short, const unsigned short*, const touchgfx::FontContextualFormsTable*)
<LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_acquire
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_atexit
</UL>
<BR>[Called By]<UL><LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___21_typedtextdatabase_cpp_05ec7672
</UL>

<P><STRONG><a name="[2d9]"></a>getFont_iconfont_32_4bpp()</STRONG> (Thumb, 94 bytes, Stack size 56 bytes, table_iconfont_32_4bpp.o(i._Z24getFont_iconfont_32_4bppv))
<BR><BR>[Stack]<UL><LI>Max Depth = 164<LI>Call Chain = getFont_iconfont_32_4bpp() &rArr; touchgfx::GeneratedFont::GeneratedFont(const touchgfx::GlyphNode*, unsigned short, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, const unsigned char*const *, const touchgfx::KerningNode*, unsigned short, unsigned short, const unsigned short*, const touchgfx::FontContextualFormsTable*) &rArr; touchgfx::ConstFont::ConstFont__sub_object(const touchgfx::GlyphNode*, unsigned short, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned short, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GeneratedFont::GeneratedFont(const touchgfx::GlyphNode*, unsigned short, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, const unsigned char*const *, const touchgfx::KerningNode*, unsigned short, unsigned short, const unsigned short*, const touchgfx::FontContextualFormsTable*)
<LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_acquire
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_atexit
</UL>
<BR>[Called By]<UL><LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___21_typedtextdatabase_cpp_05ec7672
</UL>

<P><STRONG><a name="[2da]"></a>getFont_verdana_155_4bpp()</STRONG> (Thumb, 92 bytes, Stack size 56 bytes, table_verdana_155_4bpp.o(i._Z24getFont_verdana_155_4bppv))
<BR><BR>[Stack]<UL><LI>Max Depth = 164<LI>Call Chain = getFont_verdana_155_4bpp() &rArr; touchgfx::GeneratedFont::GeneratedFont(const touchgfx::GlyphNode*, unsigned short, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, const unsigned char*const *, const touchgfx::KerningNode*, unsigned short, unsigned short, const unsigned short*, const touchgfx::FontContextualFormsTable*) &rArr; touchgfx::ConstFont::ConstFont__sub_object(const touchgfx::GlyphNode*, unsigned short, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned short, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GeneratedFont::GeneratedFont(const touchgfx::GlyphNode*, unsigned short, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, const unsigned char*const *, const touchgfx::KerningNode*, unsigned short, unsigned short, const unsigned short*, const touchgfx::FontContextualFormsTable*)
<LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_acquire
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_atexit
</UL>
<BR>[Called By]<UL><LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___21_typedtextdatabase_cpp_05ec7672
</UL>

<P><STRONG><a name="[2db]"></a>Screen1View::runAnimcar()</STRONG> (Thumb, 138 bytes, Stack size 16 bytes, screen1view.o(i._ZN11Screen1View10runAnimcarEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 452<LI>Call Chain = Screen1View::runAnimcar() &rArr; touchgfx::Unicode::snprintfFloat(unsigned short*, unsigned short, const char*, float) &rArr; touchgfx::Unicode::snprintfFloats(unsigned short*, unsigned short, const char*, const float*) &rArr; touchgfx::Unicode::snprintfFloats(unsigned short*, unsigned short, const unsigned short*, const char*, const float*) &rArr; touchgfx::Unicode::parseFlagsAndPrecision(const unsigned short*&, const char*&, unsigned short&, bool&, bool&, bool&, bool&, int&, bool&, int&)
</UL>
<BR>[Calls]<UL><LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextureMapper::updateAngles(float, float, float)
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::snprintfFloat(unsigned short*, unsigned short, const char*, float)
</UL>
<BR>[Called By]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1View::handleTickEvent()
</UL>

<P><STRONG><a name="[b5]"></a>Screen1View::setupScreen()</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, screen1view.o(i._ZN11Screen1View11setupScreenEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 308<LI>Call Chain = Screen1View::setupScreen() &rArr; touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const unsigned short*, const char*, std::__va_list) &rArr; touchgfx::Unicode::utoa(unsigned, unsigned short*, unsigned short, int)
</UL>
<BR>[Calls]<UL><LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...)
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1ViewBase::setupScreen()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screen1view.o(.constdata__ZTV11Screen1View)
</UL>
<P><STRONG><a name="[2de]"></a>Screen1View::Screen1speed()</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, screen1view.o(i._ZN11Screen1View12Screen1speedEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 316<LI>Call Chain = Screen1View::Screen1speed() &rArr; touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const unsigned short*, const char*, std::__va_list) &rArr; touchgfx::Unicode::utoa(unsigned, unsigned short*, unsigned short, int)
</UL>
<BR>[Calls]<UL><LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...)
</UL>
<BR>[Called By]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1View::handleTickEvent()
</UL>

<P><STRONG><a name="[2bd]"></a>Screen1View::Screen1RtcNum(unsigned char&, unsigned char&, unsigned char&, unsigned char&, unsigned char&)</STRONG> (Thumb, 36 bytes, Stack size 12 bytes, screen1view.o(i._ZN11Screen1View13Screen1RtcNumERhS0_S0_S0_S0_))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = Screen1View::Screen1RtcNum(unsigned char&, unsigned char&, unsigned char&, unsigned char&, unsigned char&)
</UL>
<BR>[Called By]<UL><LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RtcNum
</UL>

<P><STRONG><a name="[241]"></a>Screen1View::Screen1gpsNum(double&)</STRONG> (Thumb, 82 bytes, Stack size 24 bytes, screen1view.o(i._ZN11Screen1View13Screen1gpsNumERd))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = Screen1View::Screen1gpsNum(double&) &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
</UL>
<BR>[Called By]<UL><LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GpsNum
</UL>

<P><STRONG><a name="[219]"></a>Screen1View::Screen1Adc1Num(unsigned char*)</STRONG> (Thumb, 156 bytes, Stack size 16 bytes, screen1view.o(i._ZN11Screen1View14Screen1Adc1NumEPh))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = Screen1View::Screen1Adc1Num(unsigned char*) &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
</UL>
<BR>[Called By]<UL><LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_Num
</UL>

<P><STRONG><a name="[2ca]"></a>Screen1View::Screen1TyreNum(unsigned char*)</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, screen1view.o(i._ZN11Screen1View14Screen1TyreNumEPh))
<BR><BR>[Called By]<UL><LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Tyre_Num
</UL>

<P><STRONG><a name="[b7]"></a>Screen1View::tearDownScreen()</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, screen1view.o(i._ZN11Screen1View14tearDownScreenEv))
<BR>[Address Reference Count : 1]<UL><LI> screen1view.o(.constdata__ZTV11Screen1View)
</UL>
<P><STRONG><a name="[bb]"></a>Screen1View::handleTickEvent()</STRONG> (Thumb, 488 bytes, Stack size 32 bytes, screen1view.o(i._ZN11Screen1View15handleTickEventEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 484<LI>Call Chain = Screen1View::handleTickEvent() &rArr; Screen1View::runAnimcar() &rArr; touchgfx::Unicode::snprintfFloat(unsigned short*, unsigned short, const char*, float) &rArr; touchgfx::Unicode::snprintfFloats(unsigned short*, unsigned short, const char*, const float*) &rArr; touchgfx::Unicode::snprintfFloats(unsigned short*, unsigned short, const unsigned short*, const char*, const float*) &rArr; touchgfx::Unicode::parseFlagsAndPrecision(const unsigned short*&, const char*&, unsigned short&, bool&, bool&, bool&, bool&, int&, bool&, int&)
</UL>
<BR>[Calls]<UL><LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...)
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractClock::setTime24Hour(unsigned char, unsigned char, unsigned char)
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::snprintfFloat(unsigned short*, unsigned short, const char*, float)
<LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DynamicDataGraph::addDataPoint(int)
<LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1View::Screen1speed()
<LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1View::runAnimcar()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screen1view.o(.constdata__ZTV11Screen1View)
</UL>
<P><STRONG><a name="[2e0]"></a>Screen1View::Screen1View()</STRONG> (Thumb, 192 bytes, Stack size 8 bytes, screen1view.o(i._ZN11Screen1ViewC1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 1472<LI>Call Chain = Screen1View::Screen1View() &rArr; Screen1ViewBase::Screen1ViewBase() &rArr; touchgfx::TextureMapper::setBitmap(const touchgfx::Bitmap&) &rArr; touchgfx::TextureMapper::applyTransformation() &rArr; touchgfx::operator *(const touchgfx::Matrix4x4&, const touchgfx::Matrix4x4&)
</UL>
<BR>[Calls]<UL><LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1ViewBase::Screen1ViewBase()
</UL>
<BR>[Called By]<UL><LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2* touchgfx::makeTransition&lang;Screen1View, Screen1Presenter, touchgfx::SlideTransition&lang;(touchgfx::Direction)1&rang;, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)
<LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2* touchgfx::makeTransition&lang;Screen1View, Screen1Presenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)
</UL>

<P><STRONG><a name="[496]"></a>Screen1View::Screen1View__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, screen1view.o(i._ZN11Screen1ViewC1Ev), UNUSED)

<P><STRONG><a name="[b3]"></a>Screen1View::~Screen1View()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, screen1view.o(i._ZN11Screen1ViewD1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Screen1View::~Screen1View() &rArr; Screen1ViewBase::~Screen1ViewBase()
</UL>
<BR>[Calls]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1ViewBase::~Screen1ViewBase()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screen1view.o(.constdata__ZTV11Screen1View)
</UL>
<P><STRONG><a name="[497]"></a>Screen1View::~Screen1View__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, screen1view.o(i._ZN11Screen1ViewD1Ev), UNUSED)

<P><STRONG><a name="[dd]"></a>TouchGFXHAL::beginFrame()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, touchgfxhal.o(i._ZN11TouchGFXHAL10beginFrameEv))
<BR><BR>[Calls]<UL><LI><a href="#[2e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXGeneratedHAL::beginFrame()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
</UL>
<P><STRONG><a name="[be]"></a>TouchGFXHAL::initialize()</STRONG> (Thumb, 88 bytes, Stack size 16 bytes, touchgfxhal.o(i._ZN11TouchGFXHAL10initializeEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = TouchGFXHAL::initialize() &rArr; TouchGFXGeneratedHAL::initialize() &rArr; touchgfx::HAL::initialize() &rArr; touchgfx::OSWrappers::initialize() &rArr; osSemaphoreNew &rArr; xQueueGenericSend &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
<LI><a href="#[2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::setCache(unsigned short*, unsigned, unsigned)
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::cacheAll()
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXGeneratedHAL::initialize()
<LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25QXX_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx_init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
</UL>
<P><STRONG><a name="[d3]"></a>TouchGFXHAL::enableInterrupts()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, touchgfxhal.o(i._ZN11TouchGFXHAL16enableInterruptsEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TouchGFXHAL::enableInterrupts() &rArr; TouchGFXGeneratedHAL::enableInterrupts()
</UL>
<BR>[Calls]<UL><LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXGeneratedHAL::enableInterrupts()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
</UL>
<P><STRONG><a name="[c0]"></a>TouchGFXHAL::flushFrameBuffer(const touchgfx::Rect&)</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, touchgfxhal.o(i._ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE))
<BR><BR>[Calls]<UL><LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXGeneratedHAL::flushFrameBuffer(const touchgfx::Rect&)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
</UL>
<P><STRONG><a name="[d4]"></a>TouchGFXHAL::disableInterrupts()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, touchgfxhal.o(i._ZN11TouchGFXHAL17disableInterruptsEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TouchGFXHAL::disableInterrupts() &rArr; TouchGFXGeneratedHAL::disableInterrupts()
</UL>
<BR>[Calls]<UL><LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXGeneratedHAL::disableInterrupts()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
</UL>
<P><STRONG><a name="[df]"></a>TouchGFXHAL::setTFTFrameBuffer(unsigned short*)</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, touchgfxhal.o(i._ZN11TouchGFXHAL17setTFTFrameBufferEPt))
<BR><BR>[Calls]<UL><LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXGeneratedHAL::setTFTFrameBuffer(unsigned short*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
</UL>
<P><STRONG><a name="[d2]"></a>TouchGFXHAL::configureInterrupts()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, touchgfxhal.o(i._ZN11TouchGFXHAL19configureInterruptsEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TouchGFXHAL::configureInterrupts() &rArr; TouchGFXGeneratedHAL::configureInterrupts()
</UL>
<BR>[Calls]<UL><LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXGeneratedHAL::configureInterrupts()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
</UL>
<P><STRONG><a name="[d5]"></a>TouchGFXHAL::enableLCDControllerInterrupt()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, touchgfxhal.o(i._ZN11TouchGFXHAL28enableLCDControllerInterruptEv))
<BR><BR>[Calls]<UL><LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXGeneratedHAL::enableLCDControllerInterrupt()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
</UL>
<P><STRONG><a name="[de]"></a>TouchGFXHAL::endFrame()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, touchgfxhal.o(i._ZN11TouchGFXHAL8endFrameEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TouchGFXHAL::endFrame() &rArr; TouchGFXGeneratedHAL::endFrame() &rArr; touchgfx::HAL::endFrame()
</UL>
<BR>[Calls]<UL><LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXGeneratedHAL::endFrame()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
</UL>
<P><STRONG><a name="[c6]"></a>TouchGFXHAL::blockCopy(void*, const void*, unsigned)</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, touchgfxhal.o(i._ZN11TouchGFXHAL9blockCopyEPvPKvj))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = TouchGFXHAL::blockCopy(void*, const void*, unsigned) &rArr; W25QXX_Read
</UL>
<BR>[Calls]<UL><LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXGeneratedHAL::blockCopy(void*, const void*, unsigned)
<LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25QXX_Read
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
</UL>
<P><STRONG><a name="[ab]"></a>TouchGFXHAL::~TouchGFXHAL()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, touchgfxhal.o(i._ZN11TouchGFXHALD1Ev))
<BR>[Address Reference Count : 2]<UL><LI> touchgfxconfiguration.o(i.__sti___25_TouchGFXConfiguration_cpp_f5abfd34)
<LI> touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
</UL>
<P><STRONG><a name="[498]"></a>TouchGFXHAL::~TouchGFXHAL__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, touchgfxhal.o(i._ZN11TouchGFXHALD1Ev), UNUSED)

<P><STRONG><a name="[2ee]"></a>FrontendHeap::FrontendHeap()</STRONG> (Thumb, 98 bytes, Stack size 16 bytes, touchgfxconfiguration.o(i._ZN12FrontendHeapC1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 124<LI>Call Chain = FrontendHeap::FrontendHeap() &rArr; FrontendApplication::FrontendApplication(Model&, FrontendHeap&) &rArr; FrontendApplicationBase::FrontendApplicationBase(Model&, FrontendHeap&) &rArr; touchgfx::LCD16bpp::enableTextureMapperAll() &rArr; touchgfx::LCD16bpp::enableTextureMapperRGB565_NonOpaque_BilinearInterpolation() &rArr; __aeabi_atexit &rArr; malloc
</UL>
<BR>[Calls]<UL><LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractPartition::AbstractPartition__sub_object()
<LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Model::Model()
<LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplicationBase::gotoScreen1ScreenNoTransition()
<LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplication::FrontendApplication(Model&, FrontendHeap&)
</UL>
<BR>[Called By]<UL><LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx_init
</UL>

<P><STRONG><a name="[499]"></a>FrontendHeap::FrontendHeap__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, touchgfxconfiguration.o(i._ZN12FrontendHeapC1Ev), UNUSED)

<P><STRONG><a name="[ad]"></a>FrontendHeap::~FrontendHeap()</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, touchgfxconfiguration.o(i._ZN12FrontendHeapD1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = FrontendHeap::~FrontendHeap()
</UL>
<BR>[Calls]<UL><LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractPartition::~AbstractPartition__sub_object()
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplicationBase::~FrontendApplicationBase()
</UL>
<BR>[Address Reference Count : 2]<UL><LI> touchgfxconfiguration.o(i.touchgfx_init)
<LI> touchgfxconfiguration.o(.constdata__ZTV12FrontendHeap)
</UL>
<P><STRONG><a name="[49a]"></a>FrontendHeap::~FrontendHeap__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, touchgfxconfiguration.o(i._ZN12FrontendHeapD1Ev), UNUSED)

<P><STRONG><a name="[463]"></a>BitmapDatabase::getInstance()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, bitmapdatabase.o(i._ZN14BitmapDatabase11getInstanceEv))
<BR><BR>[Called By]<UL><LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx_init
</UL>

<P><STRONG><a name="[462]"></a>BitmapDatabase::getInstanceSize()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, bitmapdatabase.o(i._ZN14BitmapDatabase15getInstanceSizeEv))
<BR><BR>[Called By]<UL><LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx_init
</UL>

<P><STRONG><a name="[e6]"></a>Screen1ViewBase::setupScreen()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, screen1viewbase.o(i._ZN15Screen1ViewBase11setupScreenEv))
<BR><BR>[Called By]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1View::setupScreen()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screen1viewbase.o(.constdata__ZTV15Screen1ViewBase)
</UL>
<P><STRONG><a name="[2e1]"></a>Screen1ViewBase::Screen1ViewBase()</STRONG> (Thumb, 12200 bytes, Stack size 136 bytes, screen1viewbase.o(i._ZN15Screen1ViewBaseC1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 1464<LI>Call Chain = Screen1ViewBase::Screen1ViewBase() &rArr; touchgfx::TextureMapper::setBitmap(const touchgfx::Bitmap&) &rArr; touchgfx::TextureMapper::applyTransformation() &rArr; touchgfx::operator *(const touchgfx::Matrix4x4&, const touchgfx::Matrix4x4&)
</UL>
<BR>[Calls]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...)
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractClock::setTime24Hour(unsigned char, unsigned char, unsigned char)
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextureMapper::setCamera(float, float)
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextureMapper::setOrigo(float, float, float)
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextureMapper::setCameraDistance(float)
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextureMapper::setBitmapPosition(float, float)
<LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TypedText::getText() const
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Container::add(touchgfx::Drawable&)
<LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::setTypedText(const touchgfx::TypedText&)
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::Screen()
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Image::setBitmap(const touchgfx::Bitmap&)
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractProgressIndicator::setRange(int, int, unsigned short, unsigned short)
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractProgressIndicator::setBackground(const touchgfx::Bitmap&)
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDirectionProgress::setDirection(touchgfx::AbstractDirectionProgress::DirectionType)
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CanvasWidgetRenderer::setupBuffer(unsigned char*, unsigned)
<LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDataGraph::setGraphAreaPadding(short, short, short, short)
<LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDataGraph::setGraphAreaMargin(short, short, short, short)
<LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDataGraph::addGraphElement(touchgfx::AbstractGraphElement&)
<LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextureMapper::TextureMapper(const touchgfx::Bitmap&)
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextureMapper::setBitmap(const touchgfx::Bitmap&)
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextureMapper::setAngles(float, float, float)
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextureMapper::setScale(float)
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ScalableImage::ScalableImage(const touchgfx::Bitmap&)
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ScalableImage::setScalingAlgorithm(touchgfx::ScalableImage::ScalingAlgorithm)
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ImageProgress::ImageProgress()
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ImageProgress::setBitmap(unsigned short)
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ImageProgress::setValue(int)
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ImageProgress::setProgressIndicatorPosition(short, short, short, short)
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ImageProgress::setAnchorAtZero(bool)
<LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DigitalClock::DigitalClock()
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DigitalClock::setColor(touchgfx::colortype)
<LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DigitalClock::displayLeadingZeroForHourIndicator(bool)
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DigitalClock::setTypedText(touchgfx::TypedText)
<LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GraphScroll&lang;(short)150&rang;::GraphScroll()
<LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TypedText::TypedText(unsigned short)
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::TextArea()
<LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::setLinespacing(short)
<LI><a href="#[305]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setXY(short, short)
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::add(touchgfx::Drawable&)
<LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Image::Image(const touchgfx::Bitmap&)
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Color::getColorFromRGB(unsigned char, unsigned char, unsigned char)
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Box::Box()
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithTwoWildcards::TextAreaWithTwoWildcards()
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithOneWildcard::TextAreaWithOneWildcard()
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GraphElementLine::GraphElementLine()
<LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DynamicDataGraph::addDataPoint(float)
<LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::PainterRGB565::PainterRGB565(touchgfx::colortype)
<LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::PainterRGB565::setColor(touchgfx::colortype)
<LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Container::Container()
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setPosition(short, short, short, short)
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDataGraph::setGraphRangeY(int, int)
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DynamicDataGraph::setScale(int, bool)
</UL>
<BR>[Called By]<UL><LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1View::Screen1View()
</UL>

<P><STRONG><a name="[49b]"></a>Screen1ViewBase::Screen1ViewBase__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 136 bytes, screen1viewbase.o(i._ZN15Screen1ViewBaseC1Ev), UNUSED)

<P><STRONG><a name="[e5]"></a>Screen1ViewBase::~Screen1ViewBase()</STRONG> (Thumb, 300 bytes, Stack size 8 bytes, screen1viewbase.o(i._ZN15Screen1ViewBaseD1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Screen1ViewBase::~Screen1ViewBase()
</UL>
<BR>[Calls]<UL><LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::~TextArea()
<LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CanvasWidgetRenderer::resetBuffer()
<LI><a href="#[310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::View&lang;Screen1Presenter&rang;::~View()
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithTwoWildcards::~TextAreaWithTwoWildcards()
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GraphScroll&lang;(short)150&rang;::~GraphScroll()
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ImageProgress::~ImageProgress()
<LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithOneWildcard::~TextAreaWithOneWildcard()
</UL>
<BR>[Called By]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1View::~Screen1View()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screen1viewbase.o(.constdata__ZTV15Screen1ViewBase)
</UL>
<P><STRONG><a name="[49c]"></a>Screen1ViewBase::~Screen1ViewBase__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, screen1viewbase.o(i._ZN15Screen1ViewBaseD1Ev), UNUSED)

<P><STRONG><a name="[ea]"></a>Screen1Presenter::deactivate()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, screen1presenter.o(i._ZN16Screen1Presenter10deactivateEv))
<BR>[Address Reference Count : 1]<UL><LI> screen1presenter.o(.constdata__ZTV16Screen1Presenter)
</UL>
<P><STRONG><a name="[e9]"></a>Screen1Presenter::activate()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, screen1presenter.o(i._ZN16Screen1Presenter8activateEv))
<BR>[Address Reference Count : 1]<UL><LI> screen1presenter.o(.constdata__ZTV16Screen1Presenter)
</UL>
<P><STRONG><a name="[480]"></a>Screen1Presenter::Screen1Presenter(Screen1View&)</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, screen1presenter.o(i._ZN16Screen1PresenterC1ER11Screen1View))
<BR><BR>[Called By]<UL><LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2* touchgfx::makeTransition&lang;Screen1View, Screen1Presenter, touchgfx::SlideTransition&lang;(touchgfx::Direction)1&rang;, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)
<LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2* touchgfx::makeTransition&lang;Screen1View, Screen1Presenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)
</UL>

<P><STRONG><a name="[49d]"></a>Screen1Presenter::Screen1Presenter__sub_object(Screen1View&)</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, screen1presenter.o(i._ZN16Screen1PresenterC1ER11Screen1View), UNUSED)

<P><STRONG><a name="[eb]"></a>Screen1Presenter::~Screen1Presenter()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, screen1presenter.o(i._ZN16Screen1PresenterD1Ev))
<BR>[Address Reference Count : 1]<UL><LI> screen1presenter.o(.constdata__ZTV16Screen1Presenter)
</UL>
<P><STRONG><a name="[49e]"></a>Screen1Presenter::~Screen1Presenter__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, screen1presenter.o(i._ZN16Screen1PresenterD1Ev), UNUSED)

<P><STRONG><a name="[397]"></a>TypedTextDatabase::getInstanceSize()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, typedtextdatabase.o(i._ZN17TypedTextDatabase15getInstanceSizeEv))
<BR><BR>[Called By]<UL><LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Texts::setLanguage(unsigned short)
</UL>

<P><STRONG><a name="[396]"></a>TypedTextDatabase::getFonts()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, typedtextdatabase.o(i._ZN17TypedTextDatabase8getFontsEv))
<BR><BR>[Called By]<UL><LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Texts::setLanguage(unsigned short)
</UL>

<P><STRONG><a name="[f0]"></a>FrontendApplication::handleTickEvent()</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, frontendapplication.o(i._ZN19FrontendApplication15handleTickEventEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = FrontendApplication::handleTickEvent() &rArr; touchgfx::Application::handleTickEvent() &rArr; touchgfx::Application::TimerWidgets::compact()
</UL>
<BR>[Calls]<UL><LI><a href="#[311]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Model::tick()
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::handleTickEvent()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> frontendapplication.o(.constdata__ZTV19FrontendApplication)
</UL>
<P><STRONG><a name="[2f1]"></a>FrontendApplication::FrontendApplication(Model&, FrontendHeap&)</STRONG> (Thumb, 68 bytes, Stack size 24 bytes, frontendapplication.o(i._ZN19FrontendApplicationC1ER5ModelR12FrontendHeap))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = FrontendApplication::FrontendApplication(Model&, FrontendHeap&) &rArr; FrontendApplicationBase::FrontendApplicationBase(Model&, FrontendHeap&) &rArr; touchgfx::LCD16bpp::enableTextureMapperAll() &rArr; touchgfx::LCD16bpp::enableTextureMapperRGB565_NonOpaque_BilinearInterpolation() &rArr; __aeabi_atexit &rArr; malloc
</UL>
<BR>[Calls]<UL><LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplicationBase::FrontendApplicationBase(Model&, FrontendHeap&)
</UL>
<BR>[Called By]<UL><LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendHeap::FrontendHeap()
</UL>

<P><STRONG><a name="[49f]"></a>FrontendApplication::FrontendApplication__sub_object(Model&, FrontendHeap&)</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, frontendapplication.o(i._ZN19FrontendApplicationC1ER5ModelR12FrontendHeap), UNUSED)

<P><STRONG><a name="[f8]"></a>STM32TouchController::sampleTouch(int&, int&)</STRONG> (Thumb, 86 bytes, Stack size 16 bytes, stm32touchcontroller.o(i._ZN20STM32TouchController11sampleTouchERiS0_))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = STM32TouchController::sampleTouch(int&, int&) &rArr; FT5206_RD_Reg &rArr; CT_IIC_Read_Byte &rArr; CT_IIC_NAck &rArr; delay_us
</UL>
<BR>[Calls]<UL><LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FT5206_RD_Reg
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stm32touchcontroller.o(.constdata__ZTV20STM32TouchController)
</UL>
<P><STRONG><a name="[f7]"></a>STM32TouchController::init()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32touchcontroller.o(i._ZN20STM32TouchController4initEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = STM32TouchController::init() &rArr; FT5206_Init &rArr; FT5206_RD_Reg &rArr; CT_IIC_Read_Byte &rArr; CT_IIC_NAck &rArr; delay_us
</UL>
<BR>[Calls]<UL><LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FT5206_Init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stm32touchcontroller.o(.constdata__ZTV20STM32TouchController)
</UL>
<P><STRONG><a name="[a7]"></a>STM32TouchController::~STM32TouchController()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32touchcontroller.o(i._ZN20STM32TouchControllerD1Ev))
<BR>[Address Reference Count : 2]<UL><LI> touchgfxconfiguration.o(i.__sti___25_TouchGFXConfiguration_cpp_f5abfd34)
<LI> stm32touchcontroller.o(.constdata__ZTV20STM32TouchController)
</UL>
<P><STRONG><a name="[4a0]"></a>STM32TouchController::~STM32TouchController__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stm32touchcontroller.o(i._ZN20STM32TouchControllerD1Ev), UNUSED)

<P><STRONG><a name="[2e2]"></a>TouchGFXGeneratedHAL::beginFrame()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, touchgfxgeneratedhal.o(i._ZN20TouchGFXGeneratedHAL10beginFrameEv))
<BR><BR>[Calls]<UL><LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::beginFrame()
</UL>
<BR>[Called By]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXHAL::beginFrame()
</UL>

<P><STRONG><a name="[2e3]"></a>TouchGFXGeneratedHAL::initialize()</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, touchgfxgeneratedhal.o(i._ZN20TouchGFXGeneratedHAL10initializeEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = TouchGFXGeneratedHAL::initialize() &rArr; touchgfx::HAL::initialize() &rArr; touchgfx::OSWrappers::initialize() &rArr; osSemaphoreNew &rArr; xQueueGenericSend &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::initialize()
<LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::getInstance()
</UL>
<BR>[Called By]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXHAL::initialize()
</UL>

<P><STRONG><a name="[2e6]"></a>TouchGFXGeneratedHAL::enableInterrupts()</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, touchgfxgeneratedhal.o(i._ZN20TouchGFXGeneratedHAL16enableInterruptsEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TouchGFXGeneratedHAL::enableInterrupts()
</UL>
<BR>[Calls]<UL><LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_EnableIRQ(IRQn_Type)
</UL>
<BR>[Called By]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXHAL::enableInterrupts()
</UL>

<P><STRONG><a name="[2e7]"></a>TouchGFXGeneratedHAL::flushFrameBuffer(const touchgfx::Rect&)</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, touchgfxgeneratedhal.o(i._ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE))
<BR><BR>[Calls]<UL><LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::flushFrameBuffer(const touchgfx::Rect&)
</UL>
<BR>[Called By]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXHAL::flushFrameBuffer(const touchgfx::Rect&)
</UL>

<P><STRONG><a name="[2e8]"></a>TouchGFXGeneratedHAL::disableInterrupts()</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, touchgfxgeneratedhal.o(i._ZN20TouchGFXGeneratedHAL17disableInterruptsEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TouchGFXGeneratedHAL::disableInterrupts()
</UL>
<BR>[Calls]<UL><LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_DisableIRQ(IRQn_Type)
</UL>
<BR>[Called By]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXHAL::disableInterrupts()
</UL>

<P><STRONG><a name="[2e9]"></a>TouchGFXGeneratedHAL::setTFTFrameBuffer(unsigned short*)</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, touchgfxgeneratedhal.o(i._ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt))
<BR><BR>[Called By]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXHAL::setTFTFrameBuffer(unsigned short*)
</UL>

<P><STRONG><a name="[2ea]"></a>TouchGFXGeneratedHAL::configureInterrupts()</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, touchgfxgeneratedhal.o(i._ZN20TouchGFXGeneratedHAL19configureInterruptsEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TouchGFXGeneratedHAL::configureInterrupts()
</UL>
<BR>[Calls]<UL><LI><a href="#[316]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_SetPriority(IRQn_Type, unsigned)
</UL>
<BR>[Called By]<UL><LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXHAL::configureInterrupts()
</UL>

<P><STRONG><a name="[2eb]"></a>TouchGFXGeneratedHAL::enableLCDControllerInterrupt()</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, touchgfxgeneratedhal.o(i._ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv))
<BR><BR>[Called By]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXHAL::enableLCDControllerInterrupt()
</UL>

<P><STRONG><a name="[2ec]"></a>TouchGFXGeneratedHAL::endFrame()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, touchgfxgeneratedhal.o(i._ZN20TouchGFXGeneratedHAL8endFrameEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TouchGFXGeneratedHAL::endFrame() &rArr; touchgfx::HAL::endFrame()
</UL>
<BR>[Calls]<UL><LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::endFrame()
</UL>
<BR>[Called By]<UL><LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXHAL::endFrame()
</UL>

<P><STRONG><a name="[2ed]"></a>TouchGFXGeneratedHAL::blockCopy(void*, const void*, unsigned)</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, touchgfxgeneratedhal.o(i._ZN20TouchGFXGeneratedHAL9blockCopyEPvPKvj))
<BR><BR>[Calls]<UL><LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::blockCopy(void*, const void*, unsigned)
</UL>
<BR>[Called By]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXHAL::blockCopy(void*, const void*, unsigned)
</UL>

<P><STRONG><a name="[aa]"></a>ApplicationFontProvider::~ApplicationFontProvider()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, touchgfxconfiguration.o(i._ZN23ApplicationFontProviderD1Ev))
<BR>[Address Reference Count : 2]<UL><LI> touchgfxconfiguration.o(i.__sti___25_TouchGFXConfiguration_cpp_f5abfd34)
<LI> applicationfontprovider.o(.constdata__ZTV23ApplicationFontProvider)
</UL>
<P><STRONG><a name="[4a1]"></a>ApplicationFontProvider::~ApplicationFontProvider__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, touchgfxconfiguration.o(i._ZN23ApplicationFontProviderD1Ev), UNUSED)

<P><STRONG><a name="[2f2]"></a>FrontendApplicationBase::gotoScreen1ScreenNoTransition()</STRONG> (Thumb, 36 bytes, Stack size 32 bytes, frontendapplicationbase.o(i._ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = FrontendApplicationBase::gotoScreen1ScreenNoTransition() &rArr; touchgfx::Callback&lang;FrontendApplicationBase, void, void, void&rang;::Callback(FrontendApplicationBase*, void(FrontendApplicationBase::*)())
</UL>
<BR>[Calls]<UL><LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Callback&lang;FrontendApplicationBase, void, void, void&rang;::Callback(FrontendApplicationBase*, void(FrontendApplicationBase::*)())
<LI><a href="#[318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Callback&lang;FrontendApplicationBase, void, void, void&rang;::operator =(const touchgfx::Callback&lang;FrontendApplicationBase, void, void, void&rang;&)
</UL>
<BR>[Called By]<UL><LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendHeap::FrontendHeap()
</UL>

<P><STRONG><a name="[b1]"></a>FrontendApplicationBase::gotoScreen1ScreenNoTransitionImpl()</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, frontendapplicationbase.o(i._ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 1512<LI>Call Chain = FrontendApplicationBase::gotoScreen1ScreenNoTransitionImpl() &rArr; T2* touchgfx::makeTransition&lang;Screen1View, Screen1Presenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*) &rArr; Screen1View::Screen1View() &rArr; Screen1ViewBase::Screen1ViewBase() &rArr; touchgfx::TextureMapper::setBitmap(const touchgfx::Bitmap&) &rArr; touchgfx::TextureMapper::applyTransformation() &rArr; touchgfx::operator *(const touchgfx::Matrix4x4&, const touchgfx::Matrix4x4&)
</UL>
<BR>[Calls]<UL><LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2* touchgfx::makeTransition&lang;Screen1View, Screen1Presenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> frontendapplicationbase.o(.constdata)
</UL>
<P><STRONG><a name="[b2]"></a>FrontendApplicationBase::gotoScreen1ScreenSlideTransitionSouthImpl()</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, frontendapplicationbase.o(i._ZN23FrontendApplicationBase41gotoScreen1ScreenSlideTransitionSouthImplEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 1512<LI>Call Chain = FrontendApplicationBase::gotoScreen1ScreenSlideTransitionSouthImpl() &rArr; T2* touchgfx::makeTransition&lang;Screen1View, Screen1Presenter, touchgfx::SlideTransition&lang;(touchgfx::Direction)1&rang;, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*) &rArr; Screen1View::Screen1View() &rArr; Screen1ViewBase::Screen1ViewBase() &rArr; touchgfx::TextureMapper::setBitmap(const touchgfx::Bitmap&) &rArr; touchgfx::TextureMapper::applyTransformation() &rArr; touchgfx::operator *(const touchgfx::Matrix4x4&, const touchgfx::Matrix4x4&)
</UL>
<BR>[Calls]<UL><LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2* touchgfx::makeTransition&lang;Screen1View, Screen1Presenter, touchgfx::SlideTransition&lang;(touchgfx::Direction)1&rang;, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> frontendapplicationbase.o(.constdata)
</UL>
<P><STRONG><a name="[312]"></a>FrontendApplicationBase::FrontendApplicationBase(Model&, FrontendHeap&)</STRONG> (Thumb, 94 bytes, Stack size 16 bytes, frontendapplicationbase.o(i._ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = FrontendApplicationBase::FrontendApplicationBase(Model&, FrontendHeap&) &rArr; touchgfx::LCD16bpp::enableTextureMapperAll() &rArr; touchgfx::LCD16bpp::enableTextureMapperRGB565_NonOpaque_BilinearInterpolation() &rArr; __aeabi_atexit &rArr; malloc
</UL>
<BR>[Calls]<UL><LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Texts::setLanguage(unsigned short)
<LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableDecompressorL8_All()
<LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperAll()
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::Application()
<LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::lcd()
</UL>
<BR>[Called By]<UL><LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplication::FrontendApplication(Model&, FrontendHeap&)
</UL>

<P><STRONG><a name="[4a2]"></a>FrontendApplicationBase::FrontendApplicationBase__sub_object(Model&, FrontendHeap&)</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, frontendapplicationbase.o(i._ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap), UNUSED)

<P><STRONG><a name="[fa]"></a>FrontendApplicationBase::~FrontendApplicationBase()</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, touchgfxconfiguration.o(i._ZN23FrontendApplicationBaseD1Ev))
<BR><BR>[Called By]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendHeap::~FrontendHeap()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxconfiguration.o(.constdata__ZTV23FrontendApplicationBase)
</UL>
<P><STRONG><a name="[4a3]"></a>FrontendApplicationBase::~FrontendApplicationBase__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, touchgfxconfiguration.o(i._ZN23FrontendApplicationBaseD1Ev), UNUSED)

<P><STRONG><a name="[311]"></a>Model::tick()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, model.o(i._ZN5Model4tickEv))
<BR><BR>[Called By]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplication::handleTickEvent()
</UL>

<P><STRONG><a name="[2f0]"></a>Model::Model()</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, model.o(i._ZN5ModelC1Ev))
<BR><BR>[Called By]<UL><LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendHeap::FrontendHeap()
</UL>

<P><STRONG><a name="[4a4]"></a>Model::Model__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, model.o(i._ZN5ModelC1Ev), UNUSED)

<P><STRONG><a name="[101]"></a>STM32DMA::getDMAType()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32dma.o(i._ZN8STM32DMA10getDMATypeEv))
<BR>[Address Reference Count : 1]<UL><LI> stm32dma.o(.constdata__ZTV8STM32DMA)
</UL>
<P><STRONG><a name="[fe]"></a>STM32DMA::initialize()</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, stm32dma.o(i._ZN8STM32DMA10initializeEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = STM32DMA::initialize()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stm32dma.o(.constdata__ZTV8STM32DMA)
</UL>
<P><STRONG><a name="[fb]"></a>STM32DMA::getBlitCaps()</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32dma.o(i._ZN8STM32DMA11getBlitCapsEv))
<BR>[Address Reference Count : 1]<UL><LI> stm32dma.o(.constdata__ZTV8STM32DMA)
</UL>
<P><STRONG><a name="[105]"></a>STM32DMA::setupDataCopy(const touchgfx::BlitOp&)</STRONG> (Thumb, 320 bytes, Stack size 24 bytes, stm32dma.o(i._ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = STM32DMA::setupDataCopy(const touchgfx::BlitOp&) &rArr; STM32DMA::getChromARTOutputFormat(touchgfx::Bitmap::BitmapFormat)
</UL>
<BR>[Calls]<UL><LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32DMA::getChromARTOutputFormat(touchgfx::Bitmap::BitmapFormat)
<LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32DMA::getChromARTInputFormat(touchgfx::Bitmap::BitmapFormat)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stm32dma.o(.constdata__ZTV8STM32DMA)
</UL>
<P><STRONG><a name="[106]"></a>STM32DMA::setupDataFill(const touchgfx::BlitOp&)</STRONG> (Thumb, 124 bytes, Stack size 8 bytes, stm32dma.o(i._ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = STM32DMA::setupDataFill(const touchgfx::BlitOp&) &rArr; STM32DMA::getChromARTOutputFormat(touchgfx::Bitmap::BitmapFormat)
</UL>
<BR>[Calls]<UL><LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32DMA::getChromARTOutputFormat(touchgfx::Bitmap::BitmapFormat)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stm32dma.o(.constdata__ZTV8STM32DMA)
</UL>
<P><STRONG><a name="[100]"></a>STM32DMA::signalDMAInterrupt()</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32dma.o(i._ZN8STM32DMA18signalDMAInterruptEv))
<BR>[Address Reference Count : 1]<UL><LI> stm32dma.o(.constdata__ZTV8STM32DMA)
</UL>
<P><STRONG><a name="[320]"></a>STM32DMA::getChromARTInputFormat(touchgfx::Bitmap::BitmapFormat)</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, stm32dma.o(i._ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = STM32DMA::getChromARTInputFormat(touchgfx::Bitmap::BitmapFormat)
</UL>
<BR>[Called By]<UL><LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32DMA::setupDataCopy(const touchgfx::BlitOp&)
</UL>

<P><STRONG><a name="[321]"></a>STM32DMA::getChromARTOutputFormat(touchgfx::Bitmap::BitmapFormat)</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, stm32dma.o(i._ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = STM32DMA::getChromARTOutputFormat(touchgfx::Bitmap::BitmapFormat)
</UL>
<BR>[Called By]<UL><LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32DMA::setupDataFill(const touchgfx::BlitOp&)
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32DMA::setupDataCopy(const touchgfx::BlitOp&)
</UL>

<P><STRONG><a name="[322]"></a>STM32DMA::STM32DMA()</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, stm32dma.o(i._ZN8STM32DMAC1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = STM32DMA::STM32DMA() &rArr; __aeabi_vec_ctor_nocookie_nodtor
</UL>
<BR>[Calls]<UL><LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LockFreeDMA_Queue::LockFreeDMA_Queue(touchgfx::BlitOp*, unsigned long)
<LI><a href="#[324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_vec_ctor_nocookie_nodtor
</UL>
<BR>[Called By]<UL><LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___25_TouchGFXConfiguration_cpp_f5abfd34
</UL>

<P><STRONG><a name="[4a5]"></a>STM32DMA::STM32DMA__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, stm32dma.o(i._ZN8STM32DMAC1Ev), UNUSED)

<P><STRONG><a name="[a8]"></a>STM32DMA::~STM32DMA()</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32dma.o(i._ZN8STM32DMAD1Ev))
<BR>[Address Reference Count : 2]<UL><LI> touchgfxconfiguration.o(i.__sti___25_TouchGFXConfiguration_cpp_f5abfd34)
<LI> stm32dma.o(.constdata__ZTV8STM32DMA)
</UL>
<P><STRONG><a name="[4a6]"></a>STM32DMA::~STM32DMA__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stm32dma.o(i._ZN8STM32DMAD1Ev), UNUSED)

<P><STRONG><a name="[325]"></a>touchgfx::OSWrappers::initialize()</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, oswrappers.o(i._ZN8touchgfx10OSWrappers10initializeEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = touchgfx::OSWrappers::initialize() &rArr; osSemaphoreNew &rArr; xQueueGenericSend &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osSemaphoreNew
<LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMessageQueueNew
</UL>
<BR>[Called By]<UL><LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::initialize()
</UL>

<P><STRONG><a name="[27a]"></a>touchgfx::OSWrappers::signalVSync()</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, oswrappers.o(i._ZN8touchgfx10OSWrappers11signalVSyncEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = touchgfx::OSWrappers::signalVSync() &rArr; osMessageQueuePut &rArr; xQueueGenericSend &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMessageQueuePut
</UL>
<BR>[Called By]<UL><LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_LineEventCallback
</UL>

<P><STRONG><a name="[328]"></a>touchgfx::OSWrappers::waitForVSync()</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, oswrappers.o(i._ZN8touchgfx10OSWrappers12waitForVSyncEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = touchgfx::OSWrappers::waitForVSync() &rArr; osMessageQueueGet &rArr; xQueueReceive &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[329]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMessageQueueGet
</UL>
<BR>[Called By]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::taskEntry()
</UL>

<P><STRONG><a name="[32a]"></a>touchgfx::OSWrappers::giveFrameBufferSemaphore()</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, oswrappers.o(i._ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = touchgfx::OSWrappers::giveFrameBufferSemaphore() &rArr; osSemaphoreRelease &rArr; xQueueGenericSend &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osSemaphoreRelease
</UL>
<BR>[Called By]<UL><LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::unlockFrameBuffer()
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DMA_Interface::waitForFrameBufferSemaphore()
</UL>

<P><STRONG><a name="[32b]"></a>touchgfx::OSWrappers::takeFrameBufferSemaphore()</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, oswrappers.o(i._ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = touchgfx::OSWrappers::takeFrameBufferSemaphore() &rArr; osSemaphoreAcquire &rArr; xQueueSemaphoreTake &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osSemaphoreAcquire
</UL>
<BR>[Called By]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::lockFrameBuffer()
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DMA_Interface::waitForFrameBufferSemaphore()
</UL>

<P><STRONG><a name="[32c]"></a>touchgfx::OSWrappers::tryTakeFrameBufferSemaphore()</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, oswrappers.o(i._ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = touchgfx::OSWrappers::tryTakeFrameBufferSemaphore() &rArr; osSemaphoreAcquire &rArr; xQueueSemaphoreTake &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osSemaphoreAcquire
</UL>
<BR>[Called By]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DMA_Interface::addToQueue(const touchgfx::BlitOp&)
</UL>

<P><STRONG><a name="[32d]"></a>touchgfx::OSWrappers::giveFrameBufferSemaphoreFromISR()</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, oswrappers.o(i._ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = touchgfx::OSWrappers::giveFrameBufferSemaphoreFromISR() &rArr; osSemaphoreRelease &rArr; xQueueGenericSend &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osSemaphoreRelease
</UL>
<BR>[Called By]<UL><LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DMA_Interface::executeCompleted()
</UL>

<P><STRONG><a name="[11c]"></a>touchgfx::TiledImage::setXOffset(short)</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, tiledimage.o(i._ZN8touchgfx10TiledImage10setXOffsetEs))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::TiledImage::setXOffset(short) &rArr; touchgfx::Bitmap::getWidth() const
</UL>
<BR>[Calls]<UL><LI><a href="#[32e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getWidth() const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tiledimage.o(.constdata__ZTVN8touchgfx10TiledImageE)
</UL>
<P><STRONG><a name="[11d]"></a>touchgfx::TiledImage::setYOffset(short)</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, tiledimage.o(i._ZN8touchgfx10TiledImage10setYOffsetEs))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::TiledImage::setYOffset(short) &rArr; touchgfx::Bitmap::getHeight() const
</UL>
<BR>[Calls]<UL><LI><a href="#[32f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getHeight() const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tiledimage.o(.constdata__ZTVN8touchgfx10TiledImageE)
</UL>
<P><STRONG><a name="[11a]"></a>touchgfx::TiledImage::setBitmap(const touchgfx::Bitmap&)</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, tiledimage.o(i._ZN8touchgfx10TiledImage9setBitmapERKNS_6BitmapE))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = touchgfx::TiledImage::setBitmap(const touchgfx::Bitmap&) &rArr; touchgfx::Image::setBitmap(const touchgfx::Bitmap&) &rArr; touchgfx::Bitmap::getHeight() const
</UL>
<BR>[Calls]<UL><LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Image::setBitmap(const touchgfx::Bitmap&)
</UL>
<BR>[Called By]<UL><LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ImageProgress::setBitmap(unsigned short)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tiledimage.o(.constdata__ZTVN8touchgfx10TiledImageE)
</UL>
<P><STRONG><a name="[11b]"></a>touchgfx::TiledImage::setOffset(short, short)</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, tiledimage.o(i._ZN8touchgfx10TiledImage9setOffsetEss))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::TiledImage::setOffset(short, short)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tiledimage.o(.constdata__ZTVN8touchgfx10TiledImageE)
</UL>
<P><STRONG><a name="[122]"></a>touchgfx::Transition::invalidate()</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, frontendapplicationbase.o(i._ZN8touchgfx10Transition10invalidateEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::Transition::invalidate()
</UL>
<BR>[Calls]<UL><LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::getInstance()
</UL>
<BR>[Address Reference Count : 3]<UL><LI> frontendapplicationbase.o(.constdata__ZTVN8touchgfx10TransitionE)
<LI> frontendapplicationbase.o(.constdata__ZTVN8touchgfx12NoTransitionE)
<LI> frontendapplicationbase.o(.constdata__ZTVN8touchgfx15SlideTransitionILNS_9DirectionE1EEE)
</UL>
<P><STRONG><a name="[11f]"></a>touchgfx::Transition::handleTickEvent()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, frontendapplicationbase.o(i._ZN8touchgfx10Transition15handleTickEventEv))
<BR>[Address Reference Count : 1]<UL><LI> frontendapplicationbase.o(.constdata__ZTVN8touchgfx10TransitionE)
</UL>
<P><STRONG><a name="[123]"></a>touchgfx::Transition::setScreenContainer(touchgfx::Container&)</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, frontendapplicationbase.o(i._ZN8touchgfx10Transition18setScreenContainerERNS_9ContainerE))
<BR>[Address Reference Count : 3]<UL><LI> frontendapplicationbase.o(.constdata__ZTVN8touchgfx10TransitionE)
<LI> frontendapplicationbase.o(.constdata__ZTVN8touchgfx12NoTransitionE)
<LI> frontendapplicationbase.o(.constdata__ZTVN8touchgfx15SlideTransitionILNS_9DirectionE1EEE)
</UL>
<P><STRONG><a name="[121]"></a>touchgfx::Transition::init()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, frontendapplicationbase.o(i._ZN8touchgfx10Transition4initEv))
<BR>[Address Reference Count : 2]<UL><LI> frontendapplicationbase.o(.constdata__ZTVN8touchgfx10TransitionE)
<LI> frontendapplicationbase.o(.constdata__ZTVN8touchgfx12NoTransitionE)
</UL>
<P><STRONG><a name="[120]"></a>touchgfx::Transition::tearDown()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, frontendapplicationbase.o(i._ZN8touchgfx10Transition8tearDownEv))
<BR>[Address Reference Count : 2]<UL><LI> frontendapplicationbase.o(.constdata__ZTVN8touchgfx10TransitionE)
<LI> frontendapplicationbase.o(.constdata__ZTVN8touchgfx12NoTransitionE)
</UL>
<P><STRONG><a name="[47d]"></a>touchgfx::Transition::Transition()</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, frontendapplicationbase.o(i._ZN8touchgfx10TransitionC1Ev))
<BR><BR>[Called By]<UL><LI><a href="#[481]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::SlideTransition&lang;(touchgfx::Direction)1&rang;::SlideTransition(unsigned char)
<LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2* touchgfx::makeTransition&lang;Screen1View, Screen1Presenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)
</UL>

<P><STRONG><a name="[4a7]"></a>touchgfx::Transition::Transition__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, frontendapplicationbase.o(i._ZN8touchgfx10TransitionC1Ev), UNUSED)

<P><STRONG><a name="[11e]"></a>touchgfx::Transition::~Transition()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, frontendapplicationbase.o(i._ZN8touchgfx10TransitionD1Ev))
<BR>[Address Reference Count : 1]<UL><LI> frontendapplicationbase.o(.constdata__ZTVN8touchgfx10TransitionE)
</UL>
<P><STRONG><a name="[4a8]"></a>touchgfx::Transition::~Transition__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, frontendapplicationbase.o(i._ZN8touchgfx10TransitionD1Ev), UNUSED)

<P><STRONG><a name="[f4]"></a>touchgfx::Application::invalidate()</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, application.o(i._ZN8touchgfx11Application10invalidateEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::Application::invalidate()
</UL>
<BR>[Address Reference Count : 4]<UL><LI> touchgfxconfiguration.o(.constdata__ZTV23FrontendApplicationBase)
<LI> frontendapplication.o(.constdata__ZTV19FrontendApplication)
<LI> frontendapplicationbase.o(.constdata__ZTVN8touchgfx14MVPApplicationE)
<LI> application.o(.constdata__ZTVN8touchgfx11ApplicationE)
</UL>
<P><STRONG><a name="[313]"></a>touchgfx::Application::getInstance()</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, application.o(i._ZN8touchgfx11Application11getInstanceEv))
<BR><BR>[Called By]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::tick()
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXGeneratedHAL::initialize()
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Transition::invalidate()
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::prepareTransition(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::Transition**)
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidateRect(touchgfx::Rect&) const
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractProgressIndicator::handleTickEvent()
</UL>

<P><STRONG><a name="[375]"></a>touchgfx::Application::TimerWidgets::clear()</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, application.o(i._ZN8touchgfx11Application12TimerWidgets5clearEv))
<BR><BR>[Called By]<UL><LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::prepareTransition(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::Transition**)
</UL>

<P><STRONG><a name="[37a]"></a>touchgfx::Application::TimerWidgets::remove(const touchgfx::Drawable*)</STRONG> (Thumb, 72 bytes, Stack size 0 bytes, application.o(i._ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE))
<BR><BR>[Called By]<UL><LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractProgressIndicator::handleTickEvent()
</UL>

<P><STRONG><a name="[335]"></a>touchgfx::Application::TimerWidgets::compact()</STRONG> (Thumb, 166 bytes, Stack size 16 bytes, application.o(i._ZN8touchgfx11Application12TimerWidgets7compactEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::Application::TimerWidgets::compact()
</UL>
<BR>[Called By]<UL><LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::handleTickEvent()
</UL>

<P><STRONG><a name="[ef]"></a>touchgfx::Application::handleKeyEvent(unsigned char)</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, application.o(i._ZN8touchgfx11Application14handleKeyEventEh))
<BR>[Address Reference Count : 4]<UL><LI> touchgfxconfiguration.o(.constdata__ZTV23FrontendApplicationBase)
<LI> frontendapplication.o(.constdata__ZTV19FrontendApplication)
<LI> frontendapplicationbase.o(.constdata__ZTVN8touchgfx14MVPApplicationE)
<LI> application.o(.constdata__ZTVN8touchgfx11ApplicationE)
</UL>
<P><STRONG><a name="[f5]"></a>touchgfx::Application::invalidateArea(touchgfx::Rect)</STRONG> (Thumb, 2242 bytes, Stack size 72 bytes, application.o(i._ZN8touchgfx11Application14invalidateAreaENS_4RectE))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = touchgfx::Application::invalidateArea(touchgfx::Rect) &rArr; touchgfx::Rect::expandToFit(const touchgfx::Rect&)
</UL>
<BR>[Calls]<UL><LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_memcpy4_8
<LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Vector&lang;touchgfx::Rect, (unsigned short)8&rang;::quickRemoveAt(unsigned short)
<LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::expandToFit(const touchgfx::Rect&)
</UL>
<BR>[Address Reference Count : 4]<UL><LI> touchgfxconfiguration.o(.constdata__ZTV23FrontendApplicationBase)
<LI> frontendapplication.o(.constdata__ZTV19FrontendApplication)
<LI> frontendapplicationbase.o(.constdata__ZTVN8touchgfx14MVPApplicationE)
<LI> application.o(.constdata__ZTVN8touchgfx11ApplicationE)
</UL>
<P><STRONG><a name="[f3]"></a>touchgfx::Application::drawCachedAreas()</STRONG> (Thumb, 1688 bytes, Stack size 144 bytes, application.o(i._ZN8touchgfx11Application15drawCachedAreasEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = touchgfx::Application::drawCachedAreas() &rArr; __aeabi_vec_ctor_nocookie_nodtor
</UL>
<BR>[Calls]<UL><LI><a href="#[324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_vec_ctor_nocookie_nodtor
<LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&)
<LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_memcpy4_8
<LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformFrameBufferToDisplay(touchgfx::Rect&)
</UL>
<BR>[Address Reference Count : 4]<UL><LI> touchgfxconfiguration.o(.constdata__ZTV23FrontendApplicationBase)
<LI> frontendapplication.o(.constdata__ZTV19FrontendApplication)
<LI> frontendapplicationbase.o(.constdata__ZTVN8touchgfx14MVPApplicationE)
<LI> application.o(.constdata__ZTVN8touchgfx11ApplicationE)
</UL>
<P><STRONG><a name="[ed]"></a>touchgfx::Application::handleDragEvent(const touchgfx::DragEvent&)</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, application.o(i._ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE))
<BR>[Address Reference Count : 4]<UL><LI> touchgfxconfiguration.o(.constdata__ZTV23FrontendApplicationBase)
<LI> frontendapplication.o(.constdata__ZTV19FrontendApplication)
<LI> frontendapplicationbase.o(.constdata__ZTVN8touchgfx14MVPApplicationE)
<LI> application.o(.constdata__ZTVN8touchgfx11ApplicationE)
</UL>
<P><STRONG><a name="[f9]"></a>touchgfx::Application::handleTickEvent()</STRONG> (Thumb, 162 bytes, Stack size 24 bytes, application.o(i._ZN8touchgfx11Application15handleTickEventEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = touchgfx::Application::handleTickEvent() &rArr; touchgfx::Application::TimerWidgets::compact()
</UL>
<BR>[Calls]<UL><LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::TimerWidgets::compact()
</UL>
<BR>[Called By]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplication::handleTickEvent()
</UL>
<BR>[Address Reference Count : 3]<UL><LI> touchgfxconfiguration.o(.constdata__ZTV23FrontendApplicationBase)
<LI> frontendapplicationbase.o(.constdata__ZTVN8touchgfx14MVPApplicationE)
<LI> application.o(.constdata__ZTVN8touchgfx11ApplicationE)
</UL>
<P><STRONG><a name="[f2]"></a>touchgfx::Application::clearCachedAreas()</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, application.o(i._ZN8touchgfx11Application16clearCachedAreasEv))
<BR>[Address Reference Count : 4]<UL><LI> touchgfxconfiguration.o(.constdata__ZTV23FrontendApplicationBase)
<LI> frontendapplication.o(.constdata__ZTV19FrontendApplication)
<LI> frontendapplicationbase.o(.constdata__ZTVN8touchgfx14MVPApplicationE)
<LI> application.o(.constdata__ZTVN8touchgfx11ApplicationE)
</UL>
<P><STRONG><a name="[ec]"></a>touchgfx::Application::handleClickEvent(const touchgfx::ClickEvent&)</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, application.o(i._ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE))
<BR>[Address Reference Count : 4]<UL><LI> touchgfxconfiguration.o(.constdata__ZTV23FrontendApplicationBase)
<LI> frontendapplication.o(.constdata__ZTV19FrontendApplication)
<LI> frontendapplicationbase.o(.constdata__ZTVN8touchgfx14MVPApplicationE)
<LI> application.o(.constdata__ZTVN8touchgfx11ApplicationE)
</UL>
<P><STRONG><a name="[ee]"></a>touchgfx::Application::handleGestureEvent(const touchgfx::GestureEvent&)</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, application.o(i._ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE))
<BR>[Address Reference Count : 4]<UL><LI> touchgfxconfiguration.o(.constdata__ZTV23FrontendApplicationBase)
<LI> frontendapplication.o(.constdata__ZTV19FrontendApplication)
<LI> frontendapplicationbase.o(.constdata__ZTVN8touchgfx14MVPApplicationE)
<LI> application.o(.constdata__ZTVN8touchgfx11ApplicationE)
</UL>
<P><STRONG><a name="[124]"></a>touchgfx::Application::handlePendingScreenTransition()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, application.o(i._ZN8touchgfx11Application29handlePendingScreenTransitionEv))
<BR>[Address Reference Count : 1]<UL><LI> application.o(.constdata__ZTVN8touchgfx11ApplicationE)
</UL>
<P><STRONG><a name="[f6]"></a>touchgfx::Application::draw(touchgfx::Rect&)</STRONG> (Thumb, 130 bytes, Stack size 16 bytes, application.o(i._ZN8touchgfx11Application4drawERNS_4RectE))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::Application::draw(touchgfx::Rect&)
</UL>
<BR>[Address Reference Count : 4]<UL><LI> touchgfxconfiguration.o(.constdata__ZTV23FrontendApplicationBase)
<LI> frontendapplication.o(.constdata__ZTV19FrontendApplication)
<LI> frontendapplicationbase.o(.constdata__ZTVN8touchgfx14MVPApplicationE)
<LI> application.o(.constdata__ZTVN8touchgfx11ApplicationE)
</UL>
<P><STRONG><a name="[31b]"></a>touchgfx::Application::Application()</STRONG> (Thumb, 140 bytes, Stack size 16 bytes, application.o(i._ZN8touchgfx11ApplicationC1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = touchgfx::Application::Application() &rArr; __aeabi_vec_ctor_nocookie_nodtor
</UL>
<BR>[Calls]<UL><LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_vec_ctor_nocookie_nodtor
<LI><a href="#[337]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::draw()
<LI><a href="#[336]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CRC_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplicationBase::FrontendApplicationBase(Model&, FrontendHeap&)
</UL>

<P><STRONG><a name="[4a9]"></a>touchgfx::Application::Application__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, application.o(i._ZN8touchgfx11ApplicationC1Ev), UNUSED)

<P><STRONG><a name="[464]"></a>touchgfx::FontManager::setFontProvider(touchgfx::FontProvider*)</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, fontmanager.o(i._ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE))
<BR><BR>[Called By]<UL><LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx_init
</UL>

<P><STRONG><a name="[125]"></a>touchgfx::GraphScroll&lang;(short)150&rang;::~GraphScroll()</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, screen1viewbase.o(i._ZN8touchgfx11GraphScrollILs150EED1Ev))
<BR><BR>[Called By]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1ViewBase::~Screen1ViewBase()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screen1viewbase.o(.constdata__ZTVN8touchgfx11GraphScrollILs150EEE)
</UL>
<P><STRONG><a name="[4aa]"></a>touchgfx::GraphScroll&lang;(short)150&rang;::~GraphScroll__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, screen1viewbase.o(i._ZN8touchgfx11GraphScrollILs150EED1Ev), UNUSED)

<P><STRONG><a name="[338]"></a>touchgfx::CanvasWidget::CanvasWidget__sub_object()</STRONG> (Thumb, 66 bytes, Stack size 8 bytes, canvaswidget.o(i._ZN8touchgfx12CanvasWidgetC2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::CanvasWidget::CanvasWidget__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GraphElementLine::GraphElementLine()
</UL>

<P><STRONG><a name="[14d]"></a>touchgfx::DigitalClock::updateClock()</STRONG> (Thumb, 296 bytes, Stack size 40 bytes, digitalclock.o(i._ZN8touchgfx12DigitalClock11updateClockEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 340<LI>Call Chain = touchgfx::DigitalClock::updateClock() &rArr; touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const unsigned short*, const char*, std::__va_list) &rArr; touchgfx::Unicode::utoa(unsigned, unsigned short*, unsigned short, int)
</UL>
<BR>[Calls]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...)
<LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractClock::getCurrentSecond() const
<LI><a href="#[33a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractClock::getCurrentMinute() const
<LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractClock::getCurrentHour24() const
<LI><a href="#[33b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractClock::getCurrentHour12() const
<LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractClock::getCurrentAM() const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> digitalclock.o(.constdata__ZTVN8touchgfx12DigitalClockE)
</UL>
<P><STRONG><a name="[14e]"></a>touchgfx::DigitalClock::setTypedText(touchgfx::TypedText)</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, digitalclock.o(i._ZN8touchgfx12DigitalClock12setTypedTextENS_9TypedTextE))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = touchgfx::DigitalClock::setTypedText(touchgfx::TypedText) &rArr; touchgfx::TextArea::setTypedText(const touchgfx::TypedText&) &rArr; touchgfx::TextArea::resizeToCurrentText()
</UL>
<BR>[Calls]<UL><LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::setTypedText(const touchgfx::TypedText&)
</UL>
<BR>[Called By]<UL><LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1ViewBase::Screen1ViewBase()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> digitalclock.o(.constdata__ZTVN8touchgfx12DigitalClockE)
</UL>
<P><STRONG><a name="[30a]"></a>touchgfx::DigitalClock::displayLeadingZeroForHourIndicator(bool)</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, digitalclock.o(i._ZN8touchgfx12DigitalClock34displayLeadingZeroForHourIndicatorEb))
<BR><BR>[Called By]<UL><LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1ViewBase::Screen1ViewBase()
</UL>

<P><STRONG><a name="[14f]"></a>touchgfx::DigitalClock::setColor(touchgfx::colortype)</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, digitalclock.o(i._ZN8touchgfx12DigitalClock8setColorENS_9colortypeE))
<BR><BR>[Called By]<UL><LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1ViewBase::Screen1ViewBase()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> digitalclock.o(.constdata__ZTVN8touchgfx12DigitalClockE)
</UL>
<P><STRONG><a name="[14a]"></a>touchgfx::DigitalClock::setWidth(short)</STRONG> (Thumb, 40 bytes, Stack size 24 bytes, digitalclock.o(i._ZN8touchgfx12DigitalClock8setWidthEs))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = touchgfx::DigitalClock::setWidth(short)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> digitalclock.o(.constdata__ZTVN8touchgfx12DigitalClockE)
</UL>
<P><STRONG><a name="[14b]"></a>touchgfx::DigitalClock::setHeight(short)</STRONG> (Thumb, 40 bytes, Stack size 24 bytes, digitalclock.o(i._ZN8touchgfx12DigitalClock9setHeightEs))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = touchgfx::DigitalClock::setHeight(short)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> digitalclock.o(.constdata__ZTVN8touchgfx12DigitalClockE)
</UL>
<P><STRONG><a name="[2fc]"></a>touchgfx::DigitalClock::DigitalClock()</STRONG> (Thumb, 170 bytes, Stack size 16 bytes, digitalclock.o(i._ZN8touchgfx12DigitalClockC1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = touchgfx::DigitalClock::DigitalClock() &rArr; touchgfx::Container::add(touchgfx::Drawable&)
</UL>
<BR>[Calls]<UL><LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractClock::AbstractClock__sub_object()
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Container::add(touchgfx::Drawable&)
</UL>
<BR>[Called By]<UL><LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1ViewBase::Screen1ViewBase()
</UL>

<P><STRONG><a name="[4ab]"></a>touchgfx::DigitalClock::DigitalClock__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, digitalclock.o(i._ZN8touchgfx12DigitalClockC1Ev), UNUSED)

<P><STRONG><a name="[151]"></a>touchgfx::NoTransition::handleTickEvent()</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, frontendapplicationbase.o(i._ZN8touchgfx12NoTransition15handleTickEventEv))
<BR>[Address Reference Count : 1]<UL><LI> frontendapplicationbase.o(.constdata__ZTVN8touchgfx12NoTransitionE)
</UL>
<P><STRONG><a name="[150]"></a>touchgfx::NoTransition::~NoTransition()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, frontendapplicationbase.o(i._ZN8touchgfx12NoTransitionD1Ev))
<BR>[Address Reference Count : 1]<UL><LI> frontendapplicationbase.o(.constdata__ZTVN8touchgfx12NoTransitionE)
</UL>
<P><STRONG><a name="[4ac]"></a>touchgfx::NoTransition::~NoTransition__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, frontendapplicationbase.o(i._ZN8touchgfx12NoTransitionD1Ev), UNUSED)

<P><STRONG><a name="[33f]"></a>touchgfx::TextProvider::initialize(const unsigned short*, const unsigned short*, const touchgfx::FontContextualFormsTable*, ...)</STRONG> (Thumb, 56 bytes, Stack size 24 bytes, textprovider.o(i._ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = touchgfx::TextProvider::initialize(const unsigned short*, const unsigned short*, const touchgfx::FontContextualFormsTable*, ...) &rArr; touchgfx::TextProvider::initializeInternal() &rArr; touchgfx::TextProvider::fillInputBuffer()
</UL>
<BR>[Calls]<UL><LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::initializeInternal()
</UL>
<BR>[Called By]<UL><LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::calculateBoundingArea() const
</UL>

<P><STRONG><a name="[341]"></a>touchgfx::TextProvider::initialize(const unsigned short*, std::__va_list, const unsigned short*, const touchgfx::FontContextualFormsTable*)</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, textprovider.o(i._ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = touchgfx::TextProvider::initialize(const unsigned short*, std::__va_list, const unsigned short*, const touchgfx::FontContextualFormsTable*) &rArr; touchgfx::TextProvider::initializeInternal() &rArr; touchgfx::TextProvider::fillInputBuffer()
</UL>
<BR>[Calls]<UL><LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::initializeInternal()
</UL>
<BR>[Called By]<UL><LI><a href="#[40e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Font::getStringWidthLTR(unsigned char, const unsigned short*, std::__va_list) const
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::drawStringLTR(const touchgfx::Rect&, const touchgfx::Rect&, const touchgfx::LCD::StringVisuals&, const unsigned short*, std::__va_list)
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::calculateTextHeight(const unsigned short*, ...) const
</UL>

<P><STRONG><a name="[342]"></a>touchgfx::TextProvider::adjustGlyph(unsigned short, unsigned short, const touchgfx::GlyphNode*&, const touchgfx::Font*)</STRONG> (Thumb, 144 bytes, Stack size 16 bytes, textprovider.o(i._ZN8touchgfx12TextProvider11adjustGlyphEttRPKNS_9GlyphNodeEPKNS_4FontE))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = touchgfx::TextProvider::adjustGlyph(unsigned short, unsigned short, const touchgfx::GlyphNode*&, const touchgfx::Font*) &rArr; touchgfx::TextProvider::adjustThaiGlyph(const touchgfx::Font*, const touchgfx::GlyphNode*)
</UL>
<BR>[Calls]<UL><LI><a href="#[343]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::adjustArabicGlyph(const touchgfx::Font*, const touchgfx::GlyphNode*, unsigned short)
<LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::adjustThaiGlyph(const touchgfx::Font*, const touchgfx::GlyphNode*)
</UL>
<BR>[Called By]<UL><LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::getNextLigature(unsigned char, const touchgfx::Font*, const touchgfx::GlyphNode*&, const unsigned char*&, unsigned char&)
<LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::getNextLigature(unsigned char, const touchgfx::Font*, const touchgfx::GlyphNode*&)
</UL>

<P><STRONG><a name="[417]"></a>touchgfx::TextProvider::endOfString()</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, textprovider.o(i._ZN8touchgfx12TextProvider11endOfStringEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::TextProvider::endOfString()
</UL>
<BR>[Called By]<UL><LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::calculateBoundingArea() const
</UL>

<P><STRONG><a name="[345]"></a>touchgfx::TextProvider::getNextChar()</STRONG> (Thumb, 92 bytes, Stack size 16 bytes, textprovider.o(i._ZN8touchgfx12TextProvider11getNextCharEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = touchgfx::TextProvider::getNextChar() &rArr; touchgfx::TextProvider::fillInputBuffer()
</UL>
<BR>[Calls]<UL><LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::fillInputBuffer()
</UL>
<BR>[Called By]<UL><LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::getNextLigature(unsigned char)
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::drawStringLTR(const touchgfx::Rect&, const touchgfx::Rect&, const touchgfx::LCD::StringVisuals&, const unsigned short*, std::__va_list)
<LI><a href="#[38e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::getNumLines(touchgfx::TextProvider&, touchgfx::WideTextAction, unsigned char, const touchgfx::Font*, short)
</UL>

<P><STRONG><a name="[347]"></a>touchgfx::TextProvider::applyGsubRules(const unsigned short*, unsigned short)</STRONG> (Thumb, 228 bytes, Stack size 48 bytes, textprovider.o(i._ZN8touchgfx12TextProvider14applyGsubRulesEPKtt))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = touchgfx::TextProvider::applyGsubRules(const unsigned short*, unsigned short) &rArr; touchgfx::TextProvider::replaceInputCharacters(unsigned short, unsigned short, const unsigned short*) &rArr; touchgfx::TextProvider::fillInputBuffer()
</UL>
<BR>[Calls]<UL><LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::replaceInputCharacters(unsigned short, unsigned short, const unsigned short*)
</UL>
<BR>[Called By]<UL><LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::substituteGlyphs()
</UL>

<P><STRONG><a name="[344]"></a>touchgfx::TextProvider::adjustThaiGlyph(const touchgfx::Font*, const touchgfx::GlyphNode*)</STRONG> (Thumb, 506 bytes, Stack size 24 bytes, textprovider.o(i._ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = touchgfx::TextProvider::adjustThaiGlyph(const touchgfx::Font*, const touchgfx::GlyphNode*)
</UL>
<BR>[Calls]<UL><LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GlyphNode::top() const
</UL>
<BR>[Called By]<UL><LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::adjustGlyph(unsigned short, unsigned short, const touchgfx::GlyphNode*&, const touchgfx::Font*)
</UL>

<P><STRONG><a name="[346]"></a>touchgfx::TextProvider::fillInputBuffer()</STRONG> (Thumb, 264 bytes, Stack size 16 bytes, textprovider.o(i._ZN8touchgfx12TextProvider15fillInputBufferEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::TextProvider::fillInputBuffer()
</UL>
<BR>[Called By]<UL><LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::getNextChar()
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::initializeInternal()
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::replaceInputCharacters(unsigned short, unsigned short, const unsigned short*)
</UL>

<P><STRONG><a name="[34a]"></a>touchgfx::TextProvider::getNextLigature(unsigned char)</STRONG> (Thumb, 106 bytes, Stack size 16 bytes, texts.o(i._ZN8touchgfx12TextProvider15getNextLigatureEh))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = touchgfx::TextProvider::getNextLigature(unsigned char) &rArr; touchgfx::TextProvider::substituteGlyphs() &rArr; touchgfx::TextProvider::applyGsubRules(const unsigned short*, unsigned short) &rArr; touchgfx::TextProvider::replaceInputCharacters(unsigned short, unsigned short, const unsigned short*) &rArr; touchgfx::TextProvider::fillInputBuffer()
</UL>
<BR>[Calls]<UL><LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::substituteGlyphs()
<LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::getNextChar()
<LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::circularBuffer&lang;(unsigned)10&rang;::peekChar()
</UL>
<BR>[Called By]<UL><LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::drawStringLTR(const touchgfx::Rect&, const touchgfx::Rect&, const touchgfx::LCD::StringVisuals&, const unsigned short*, std::__va_list)
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::getNextLigature(unsigned char, const touchgfx::Font*, const touchgfx::GlyphNode*&, const unsigned char*&, unsigned char&)
<LI><a href="#[392]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::drawStringInternal(unsigned short*, const touchgfx::Rect*, short, short, const touchgfx::Rect&, const touchgfx::LCD::StringVisuals*, unsigned char, touchgfx::TextProvider&, int, bool)
<LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::getNextLigature(unsigned char, const touchgfx::Font*, const touchgfx::GlyphNode*&)
</UL>

<P><STRONG><a name="[34d]"></a>touchgfx::TextProvider::getNextLigature(unsigned char, const touchgfx::Font*, const touchgfx::GlyphNode*&)</STRONG> (Thumb, 74 bytes, Stack size 32 bytes, textprovider.o(i._ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = touchgfx::TextProvider::getNextLigature(unsigned char, const touchgfx::Font*, const touchgfx::GlyphNode*&) &rArr; touchgfx::TextProvider::getNextLigature(unsigned char) &rArr; touchgfx::TextProvider::substituteGlyphs() &rArr; touchgfx::TextProvider::applyGsubRules(const unsigned short*, unsigned short) &rArr; touchgfx::TextProvider::replaceInputCharacters(unsigned short, unsigned short, const unsigned short*) &rArr; touchgfx::TextProvider::fillInputBuffer()
</UL>
<BR>[Calls]<UL><LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::getNextLigature(unsigned char)
<LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::adjustGlyph(unsigned short, unsigned short, const touchgfx::GlyphNode*&, const touchgfx::Font*)
</UL>
<BR>[Called By]<UL><LI><a href="#[40e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Font::getStringWidthLTR(unsigned char, const unsigned short*, std::__va_list) const
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::drawStringLTR(const touchgfx::Rect&, const touchgfx::Rect&, const touchgfx::LCD::StringVisuals&, const unsigned short*, std::__va_list)
<LI><a href="#[390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::WideTextInternalStruct::scanStringLengthForLine()
<LI><a href="#[391]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::stringWidth(touchgfx::TextProvider&, const touchgfx::Font&, int, unsigned char)
</UL>

<P><STRONG><a name="[34e]"></a>touchgfx::TextProvider::getNextLigature(unsigned char, const touchgfx::Font*, const touchgfx::GlyphNode*&, const unsigned char*&, unsigned char&)</STRONG> (Thumb, 84 bytes, Stack size 40 bytes, textprovider.o(i._ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = touchgfx::TextProvider::getNextLigature(unsigned char, const touchgfx::Font*, const touchgfx::GlyphNode*&, const unsigned char*&, unsigned char&) &rArr; touchgfx::TextProvider::getNextLigature(unsigned char) &rArr; touchgfx::TextProvider::substituteGlyphs() &rArr; touchgfx::TextProvider::applyGsubRules(const unsigned short*, unsigned short) &rArr; touchgfx::TextProvider::replaceInputCharacters(unsigned short, unsigned short, const unsigned short*) &rArr; touchgfx::TextProvider::fillInputBuffer()
</UL>
<BR>[Calls]<UL><LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::getNextLigature(unsigned char)
<LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::adjustGlyph(unsigned short, unsigned short, const touchgfx::GlyphNode*&, const touchgfx::Font*)
</UL>
<BR>[Called By]<UL><LI><a href="#[392]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::drawStringInternal(unsigned short*, const touchgfx::Rect*, short, short, const touchgfx::Rect&, const touchgfx::LCD::StringVisuals*, unsigned char, touchgfx::TextProvider&, int, bool)
</UL>

<P><STRONG><a name="[34c]"></a>touchgfx::TextProvider::substituteGlyphs()</STRONG> (Thumb, 138 bytes, Stack size 32 bytes, textprovider.o(i._ZN8touchgfx12TextProvider16substituteGlyphsEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = touchgfx::TextProvider::substituteGlyphs() &rArr; touchgfx::TextProvider::applyGsubRules(const unsigned short*, unsigned short) &rArr; touchgfx::TextProvider::replaceInputCharacters(unsigned short, unsigned short, const unsigned short*) &rArr; touchgfx::TextProvider::fillInputBuffer()
</UL>
<BR>[Calls]<UL><LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::applyGsubRules(const unsigned short*, unsigned short)
</UL>
<BR>[Called By]<UL><LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::getNextLigature(unsigned char)
</UL>

<P><STRONG><a name="[343]"></a>touchgfx::TextProvider::adjustArabicGlyph(const touchgfx::Font*, const touchgfx::GlyphNode*, unsigned short)</STRONG> (Thumb, 768 bytes, Stack size 16 bytes, textprovider.o(i._ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::TextProvider::adjustArabicGlyph(const touchgfx::Font*, const touchgfx::GlyphNode*, unsigned short)
</UL>
<BR>[Called By]<UL><LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::adjustGlyph(unsigned short, unsigned short, const touchgfx::GlyphNode*&, const touchgfx::Font*)
</UL>

<P><STRONG><a name="[340]"></a>touchgfx::TextProvider::initializeInternal()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, texts.o(i._ZN8touchgfx12TextProvider18initializeInternalEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::TextProvider::initializeInternal() &rArr; touchgfx::TextProvider::fillInputBuffer()
</UL>
<BR>[Calls]<UL><LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::fillInputBuffer()
</UL>
<BR>[Called By]<UL><LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::TextProvider()
<LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::initialize(const unsigned short*, std::__va_list, const unsigned short*, const touchgfx::FontContextualFormsTable*)
<LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::initialize(const unsigned short*, const unsigned short*, const touchgfx::FontContextualFormsTable*, ...)
</UL>

<P><STRONG><a name="[348]"></a>touchgfx::TextProvider::replaceInputCharacters(unsigned short, unsigned short, const unsigned short*)</STRONG> (Thumb, 196 bytes, Stack size 32 bytes, textprovider.o(i._ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = touchgfx::TextProvider::replaceInputCharacters(unsigned short, unsigned short, const unsigned short*) &rArr; touchgfx::TextProvider::fillInputBuffer()
</UL>
<BR>[Calls]<UL><LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::fillInputBuffer()
<LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::circularBuffer&lang;(unsigned)10&rang;::peekChar(unsigned short)
</UL>
<BR>[Called By]<UL><LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::applyGsubRules(const unsigned short*, unsigned short)
</UL>

<P><STRONG><a name="[350]"></a>touchgfx::TextProvider::TextProvider()</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, textprovider.o(i._ZN8touchgfx12TextProviderC1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = touchgfx::TextProvider::TextProvider() &rArr; touchgfx::TextProvider::initializeInternal() &rArr; touchgfx::TextProvider::fillInputBuffer()
</UL>
<BR>[Calls]<UL><LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::initializeInternal()
<LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[40e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Font::getStringWidthLTR(unsigned char, const unsigned short*, std::__va_list) const
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::drawStringLTR(const touchgfx::Rect&, const touchgfx::Rect&, const touchgfx::LCD::StringVisuals&, const unsigned short*, std::__va_list)
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::calculateBoundingArea() const
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::calculateTextHeight(const unsigned short*, ...) const
</UL>

<P><STRONG><a name="[4ad]"></a>touchgfx::TextProvider::TextProvider__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, textprovider.o(i._ZN8touchgfx12TextProviderC1Ev), UNUSED)

<P><STRONG><a name="[14c]"></a>touchgfx::AbstractClock::setTime24Hour(unsigned char, unsigned char, unsigned char)</STRONG> (Thumb, 76 bytes, Stack size 8 bytes, abstractclock.o(i._ZN8touchgfx13AbstractClock13setTime24HourEhhh))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::AbstractClock::setTime24Hour(unsigned char, unsigned char, unsigned char)
</UL>
<BR>[Called By]<UL><LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1ViewBase::Screen1ViewBase()
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1View::handleTickEvent()
</UL>
<BR>[Address Reference Count : 2]<UL><LI> abstractclock.o(.constdata__ZTVN8touchgfx13AbstractClockE)
<LI> digitalclock.o(.constdata__ZTVN8touchgfx12DigitalClockE)
</UL>
<P><STRONG><a name="[33e]"></a>touchgfx::AbstractClock::AbstractClock__sub_object()</STRONG> (Thumb, 58 bytes, Stack size 0 bytes, abstractclock.o(i._ZN8touchgfx13AbstractClockC2Ev))
<BR><BR>[Called By]<UL><LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DigitalClock::DigitalClock()
</UL>

<P><STRONG><a name="[fc]"></a>touchgfx::DMA_Interface::addToQueue(const touchgfx::BlitOp&)</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, dma.o(i._ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = touchgfx::DMA_Interface::addToQueue(const touchgfx::BlitOp&) &rArr; touchgfx::OSWrappers::tryTakeFrameBufferSemaphore() &rArr; osSemaphoreAcquire &rArr; xQueueSemaphoreTake &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::OSWrappers::tryTakeFrameBufferSemaphore()
<LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::setRenderingMethod(touchgfx::HAL::RenderingMethod)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stm32dma.o(.constdata__ZTV8STM32DMA)
</UL>
<P><STRONG><a name="[107]"></a>touchgfx::DMA_Interface::enableAlpha(unsigned char)</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, dma.o(i._ZN8touchgfx13DMA_Interface11enableAlphaEh))
<BR>[Address Reference Count : 1]<UL><LI> stm32dma.o(.constdata__ZTV8STM32DMA)
</UL>
<P><STRONG><a name="[108]"></a>touchgfx::DMA_Interface::disableAlpha()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, dma.o(i._ZN8touchgfx13DMA_Interface12disableAlphaEv))
<BR>[Address Reference Count : 1]<UL><LI> stm32dma.o(.constdata__ZTV8STM32DMA)
</UL>
<P><STRONG><a name="[104]"></a>touchgfx::DMA_Interface::seedExecution()</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dma.o(i._ZN8touchgfx13DMA_Interface13seedExecutionEv))
<BR>[Address Reference Count : 1]<UL><LI> stm32dma.o(.constdata__ZTV8STM32DMA)
</UL>
<P><STRONG><a name="[384]"></a>touchgfx::DMA_Interface::isDmaQueueEmpty()</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, dma.o(i._ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv))
<BR><BR>[Called By]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::lockFrameBuffer()
</UL>

<P><STRONG><a name="[103]"></a>touchgfx::DMA_Interface::executeCompleted()</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, dma.o(i._ZN8touchgfx13DMA_Interface16executeCompletedEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = touchgfx::DMA_Interface::executeCompleted() &rArr; touchgfx::OSWrappers::giveFrameBufferSemaphoreFromISR() &rArr; osSemaphoreRelease &rArr; xQueueGenericSend &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::OSWrappers::giveFrameBufferSemaphoreFromISR()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stm32dma.o(.constdata__ZTV8STM32DMA)
</UL>
<P><STRONG><a name="[109]"></a>touchgfx::DMA_Interface::waitForFrameBufferSemaphore()</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, dma.o(i._ZN8touchgfx13DMA_Interface27waitForFrameBufferSemaphoreEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = touchgfx::DMA_Interface::waitForFrameBufferSemaphore() &rArr; touchgfx::OSWrappers::takeFrameBufferSemaphore() &rArr; osSemaphoreAcquire &rArr; xQueueSemaphoreTake &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::OSWrappers::takeFrameBufferSemaphore()
<LI><a href="#[32a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::OSWrappers::giveFrameBufferSemaphore()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stm32dma.o(.constdata__ZTV8STM32DMA)
</UL>
<P><STRONG><a name="[fd]"></a>touchgfx::DMA_Interface::flush()</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dma.o(i._ZN8touchgfx13DMA_Interface5flushEv))
<BR>[Address Reference Count : 1]<UL><LI> stm32dma.o(.constdata__ZTV8STM32DMA)
</UL>
<P><STRONG><a name="[ff]"></a>touchgfx::DMA_Interface::start()</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, dma.o(i._ZN8touchgfx13DMA_Interface5startEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::DMA_Interface::start()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stm32dma.o(.constdata__ZTV8STM32DMA)
</UL>
<P><STRONG><a name="[102]"></a>touchgfx::DMA_Interface::execute()</STRONG> (Thumb, 180 bytes, Stack size 16 bytes, dma.o(i._ZN8touchgfx13DMA_Interface7executeEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::DMA_Interface::execute()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stm32dma.o(.constdata__ZTV8STM32DMA)
</UL>
<P><STRONG><a name="[2d4]"></a>touchgfx::GeneratedFont::GeneratedFont(const touchgfx::GlyphNode*, unsigned short, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, const unsigned char*const *, const touchgfx::KerningNode*, unsigned short, unsigned short, const unsigned short*, const touchgfx::FontContextualFormsTable*)</STRONG> (Thumb, 68 bytes, Stack size 72 bytes, generatedfont.o(i._ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = touchgfx::GeneratedFont::GeneratedFont(const touchgfx::GlyphNode*, unsigned short, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, const unsigned char*const *, const touchgfx::KerningNode*, unsigned short, unsigned short, const unsigned short*, const touchgfx::FontContextualFormsTable*) &rArr; touchgfx::ConstFont::ConstFont__sub_object(const touchgfx::GlyphNode*, unsigned short, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned short, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ConstFont::ConstFont__sub_object(const touchgfx::GlyphNode*, unsigned short, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned short, unsigned short)
</UL>
<BR>[Called By]<UL><LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_verdana_80_4bpp()
<LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_verdana_40_4bpp()
<LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_verdana_30_4bpp()
<LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_verdana_25_4bpp()
<LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_verdana_15_4bpp()
<LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_verdana_155_4bpp()
<LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_iconfont_32_4bpp()
</UL>

<P><STRONG><a name="[4ae]"></a>touchgfx::GeneratedFont::GeneratedFont__sub_object(const touchgfx::GlyphNode*, unsigned short, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, const unsigned char*const *, const touchgfx::KerningNode*, unsigned short, unsigned short, const unsigned short*, const touchgfx::FontContextualFormsTable*)</STRONG> (Thumb, 0 bytes, Stack size 72 bytes, generatedfont.o(i._ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE), UNUSED)

<P><STRONG><a name="[80]"></a>touchgfx::GeneratedFont::~GeneratedFont()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, generatedfont.o(i._ZN8touchgfx13GeneratedFontD1Ev))
<BR>[Address Reference Count : 8]<UL><LI> generatedfont.o(.constdata__ZTVN8touchgfx13GeneratedFontE)
<LI> table_verdana_155_4bpp.o(i._Z24getFont_verdana_155_4bppv)
<LI> table_verdana_15_4bpp.o(i._Z23getFont_verdana_15_4bppv)
<LI> table_verdana_25_4bpp.o(i._Z23getFont_verdana_25_4bppv)
<LI> table_verdana_30_4bpp.o(i._Z23getFont_verdana_30_4bppv)
<LI> table_verdana_40_4bpp.o(i._Z23getFont_verdana_40_4bppv)
<LI> table_iconfont_32_4bpp.o(i._Z24getFont_iconfont_32_4bppv)
<LI> table_verdana_80_4bpp.o(i._Z23getFont_verdana_80_4bppv)
</UL>
<P><STRONG><a name="[4af]"></a>touchgfx::GeneratedFont::~GeneratedFont__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, generatedfont.o(i._ZN8touchgfx13GeneratedFontD1Ev), UNUSED)

<P><STRONG><a name="[168]"></a>touchgfx::ImageProgress::setAnchorAtZero(bool)</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, imageprogress.o(i._ZN8touchgfx13ImageProgress15setAnchorAtZeroEb))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::ImageProgress::setAnchorAtZero(bool)
</UL>
<BR>[Called By]<UL><LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1ViewBase::Screen1ViewBase()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> imageprogress.o(.constdata__ZTVN8touchgfx13ImageProgressE)
</UL>
<P><STRONG><a name="[162]"></a>touchgfx::ImageProgress::setProgressIndicatorPosition(short, short, short, short)</STRONG> (Thumb, 44 bytes, Stack size 32 bytes, imageprogress.o(i._ZN8touchgfx13ImageProgress28setProgressIndicatorPositionEssss))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = touchgfx::ImageProgress::setProgressIndicatorPosition(short, short, short, short) &rArr; touchgfx::AbstractProgressIndicator::setProgressIndicatorPosition(short, short, short, short)
</UL>
<BR>[Calls]<UL><LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractProgressIndicator::setProgressIndicatorPosition(short, short, short, short)
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setPosition(short, short, short, short)
</UL>
<BR>[Called By]<UL><LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1ViewBase::Screen1ViewBase()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> imageprogress.o(.constdata__ZTVN8touchgfx13ImageProgressE)
</UL>
<P><STRONG><a name="[164]"></a>touchgfx::ImageProgress::setValue(int)</STRONG> (Thumb, 646 bytes, Stack size 32 bytes, imageprogress.o(i._ZN8touchgfx13ImageProgress8setValueEi))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = touchgfx::ImageProgress::setValue(int) &rArr; touchgfx::AbstractProgressIndicator::getProgress(unsigned short) const &rArr; touchgfx::muldiv(int, int, int, int&) &rArr; touchgfx::muldivu(unsigned, unsigned, unsigned, unsigned&) &rArr;  touchgfx::muldivu(unsigned, unsigned, unsigned, unsigned&) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidateRect(touchgfx::Rect&) const
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractProgressIndicator::getProgress(unsigned short) const
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractProgressIndicator::setValue(int)
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setPosition(short, short, short, short)
</UL>
<BR>[Called By]<UL><LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1ViewBase::Screen1ViewBase()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> imageprogress.o(.constdata__ZTVN8touchgfx13ImageProgressE)
</UL>
<P><STRONG><a name="[169]"></a>touchgfx::ImageProgress::setBitmap(unsigned short)</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, imageprogress.o(i._ZN8touchgfx13ImageProgress9setBitmapEt))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = touchgfx::ImageProgress::setBitmap(unsigned short) &rArr; touchgfx::TiledImage::setBitmap(const touchgfx::Bitmap&) &rArr; touchgfx::Image::setBitmap(const touchgfx::Bitmap&) &rArr; touchgfx::Bitmap::getHeight() const
</UL>
<BR>[Calls]<UL><LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TiledImage::setBitmap(const touchgfx::Bitmap&)
</UL>
<BR>[Called By]<UL><LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1ViewBase::Screen1ViewBase()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> imageprogress.o(.constdata__ZTVN8touchgfx13ImageProgressE)
</UL>
<P><STRONG><a name="[2f8]"></a>touchgfx::ImageProgress::ImageProgress()</STRONG> (Thumb, 180 bytes, Stack size 32 bytes, imageprogress.o(i._ZN8touchgfx13ImageProgressC1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = touchgfx::ImageProgress::ImageProgress() &rArr; touchgfx::AbstractDirectionProgress::AbstractDirectionProgress() &rArr; touchgfx::AbstractProgressIndicator::AbstractProgressIndicator() &rArr; touchgfx::Image::setBitmap(const touchgfx::Bitmap&) &rArr; touchgfx::Bitmap::getHeight() const
</UL>
<BR>[Calls]<UL><LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Container::add(touchgfx::Drawable&)
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Image::setBitmap(const touchgfx::Bitmap&)
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDirectionProgress::AbstractDirectionProgress()
</UL>
<BR>[Called By]<UL><LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1ViewBase::Screen1ViewBase()
</UL>

<P><STRONG><a name="[4b0]"></a>touchgfx::ImageProgress::ImageProgress__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, imageprogress.o(i._ZN8touchgfx13ImageProgressC1Ev), UNUSED)

<P><STRONG><a name="[15f]"></a>touchgfx::ImageProgress::~ImageProgress()</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, imageprogress.o(i._ZN8touchgfx13ImageProgressD1Ev))
<BR><BR>[Called By]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1ViewBase::~Screen1ViewBase()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> imageprogress.o(.constdata__ZTVN8touchgfx13ImageProgressE)
</UL>
<P><STRONG><a name="[4b1]"></a>touchgfx::ImageProgress::~ImageProgress__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, imageprogress.o(i._ZN8touchgfx13ImageProgressD1Ev), UNUSED)

<P><STRONG><a name="[16e]"></a>touchgfx::PainterRGB565::setColor(touchgfx::colortype)</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, painterrgb565.o(i._ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE))
<BR><BR>[Called By]<UL><LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1ViewBase::Screen1ViewBase()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> painterrgb565.o(.constdata__ZTVN8touchgfx13PainterRGB565E)
</UL>
<P><STRONG><a name="[300]"></a>touchgfx::PainterRGB565::PainterRGB565(touchgfx::colortype)</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, screen1viewbase.o(i._ZN8touchgfx13PainterRGB565C1ENS_9colortypeE))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = touchgfx::PainterRGB565::PainterRGB565(touchgfx::colortype) &rArr; touchgfx::AbstractPainterRGB565::AbstractPainterRGB565__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractPainterRGB565::AbstractPainterRGB565__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1ViewBase::Screen1ViewBase()
</UL>

<P><STRONG><a name="[4b2]"></a>touchgfx::PainterRGB565::PainterRGB565__sub_object(touchgfx::colortype)</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, screen1viewbase.o(i._ZN8touchgfx13PainterRGB565C1ENS_9colortypeE), UNUSED)

<P><STRONG><a name="[172]"></a>touchgfx::ScalableImage::setScalingAlgorithm(touchgfx::ScalableImage::ScalingAlgorithm)</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, scalableimage.o(i._ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE))
<BR><BR>[Called By]<UL><LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1ViewBase::Screen1ViewBase()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scalableimage.o(.constdata__ZTVN8touchgfx13ScalableImageE)
</UL>
<P><STRONG><a name="[2fb]"></a>touchgfx::ScalableImage::ScalableImage(const touchgfx::Bitmap&)</STRONG> (Thumb, 86 bytes, Stack size 16 bytes, scalableimage.o(i._ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = touchgfx::ScalableImage::ScalableImage(const touchgfx::Bitmap&) &rArr; touchgfx::Image::setBitmap(const touchgfx::Bitmap&) &rArr; touchgfx::Bitmap::getHeight() const
</UL>
<BR>[Calls]<UL><LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Image::setBitmap(const touchgfx::Bitmap&)
</UL>
<BR>[Called By]<UL><LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1ViewBase::Screen1ViewBase()
</UL>

<P><STRONG><a name="[4b3]"></a>touchgfx::ScalableImage::ScalableImage__sub_object(const touchgfx::Bitmap&)</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, scalableimage.o(i._ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE), UNUSED)

<P><STRONG><a name="[178]"></a>touchgfx::TextureMapper::updateAngles(float, float, float)</STRONG> (Thumb, 64 bytes, Stack size 24 bytes, texturemapper.o(i._ZN8touchgfx13TextureMapper12updateAnglesEfff))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = touchgfx::TextureMapper::updateAngles(float, float, float)
</UL>
<BR>[Called By]<UL><LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1View::runAnimcar()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> texturemapper.o(.constdata__ZTVN8touchgfx13TextureMapperE)
</UL>
<P><STRONG><a name="[17d]"></a>touchgfx::TextureMapper::setBitmapPosition(float, float)</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, texturemapper.o(i._ZN8touchgfx13TextureMapper17setBitmapPositionEff))
<BR><BR>[Stack]<UL><LI>Max Depth = 1320<LI>Call Chain = touchgfx::TextureMapper::setBitmapPosition(float, float) &rArr; touchgfx::TextureMapper::applyTransformation() &rArr; touchgfx::operator *(const touchgfx::Matrix4x4&, const touchgfx::Matrix4x4&)
</UL>
<BR>[Calls]<UL><LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextureMapper::applyTransformation()
</UL>
<BR>[Called By]<UL><LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1ViewBase::Screen1ViewBase()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> texturemapper.o(.constdata__ZTVN8touchgfx13TextureMapperE)
</UL>
<P><STRONG><a name="[17c]"></a>touchgfx::TextureMapper::setCameraDistance(float)</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, texturemapper.o(i._ZN8touchgfx13TextureMapper17setCameraDistanceEf))
<BR><BR>[Stack]<UL><LI>Max Depth = 1320<LI>Call Chain = touchgfx::TextureMapper::setCameraDistance(float) &rArr; touchgfx::TextureMapper::applyTransformation() &rArr; touchgfx::operator *(const touchgfx::Matrix4x4&, const touchgfx::Matrix4x4&)
</UL>
<BR>[Calls]<UL><LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextureMapper::applyTransformation()
</UL>
<BR>[Called By]<UL><LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1ViewBase::Screen1ViewBase()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> texturemapper.o(.constdata__ZTVN8touchgfx13TextureMapperE)
</UL>
<P><STRONG><a name="[355]"></a>touchgfx::TextureMapper::applyTransformation()</STRONG> (Thumb, 928 bytes, Stack size 1144 bytes, texturemapper.o(i._ZN8touchgfx13TextureMapper19applyTransformationEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 1320<LI>Call Chain = touchgfx::TextureMapper::applyTransformation() &rArr; touchgfx::operator *(const touchgfx::Matrix4x4&, const touchgfx::Matrix4x4&)
</UL>
<BR>[Calls]<UL><LI><a href="#[324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_vec_ctor_nocookie_nodtor
<LI><a href="#[360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::operator *(const touchgfx::Matrix4x4&, const touchgfx::Matrix4x4&)
<LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::operator *(const touchgfx::Matrix4x4&, const touchgfx::Point4&)
<LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Matrix4x4::Matrix4x4()
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Matrix4x4::concatenateZTranslation(float)
<LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Matrix4x4::concatenateYTranslation(float)
<LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Matrix4x4::concatenateXTranslation(float)
<LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Matrix4x4::concatenateZRotation(float)
<LI><a href="#[35b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Matrix4x4::concatenateYRotation(float)
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Matrix4x4::concatenateXRotation(float)
<LI><a href="#[35f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Matrix4x4::concatenateZScale(float)
<LI><a href="#[35e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Matrix4x4::concatenateYScale(float)
<LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Matrix4x4::concatenateXScale(float)
<LI><a href="#[361]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Matrix4x4::setViewDistance(float)
<LI><a href="#[32f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getHeight() const
<LI><a href="#[32e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getWidth() const
</UL>
<BR>[Called By]<UL><LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextureMapper::setCamera(float, float)
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextureMapper::setOrigo(float, float, float)
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextureMapper::setCameraDistance(float)
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextureMapper::setBitmapPosition(float, float)
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextureMapper::setBitmap(const touchgfx::Bitmap&)
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextureMapper::setAngles(float, float, float)
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextureMapper::setScale(float)
</UL>

<P><STRONG><a name="[17a]"></a>touchgfx::TextureMapper::setOrigo(float, float, float)</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, texturemapper.o(i._ZN8touchgfx13TextureMapper8setOrigoEfff))
<BR><BR>[Stack]<UL><LI>Max Depth = 1320<LI>Call Chain = touchgfx::TextureMapper::setOrigo(float, float, float) &rArr; touchgfx::TextureMapper::applyTransformation() &rArr; touchgfx::operator *(const touchgfx::Matrix4x4&, const touchgfx::Matrix4x4&)
</UL>
<BR>[Calls]<UL><LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextureMapper::applyTransformation()
</UL>
<BR>[Called By]<UL><LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1ViewBase::Screen1ViewBase()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> texturemapper.o(.constdata__ZTVN8touchgfx13TextureMapperE)
</UL>
<P><STRONG><a name="[179]"></a>touchgfx::TextureMapper::setScale(float)</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, texturemapper.o(i._ZN8touchgfx13TextureMapper8setScaleEf))
<BR><BR>[Stack]<UL><LI>Max Depth = 1320<LI>Call Chain = touchgfx::TextureMapper::setScale(float) &rArr; touchgfx::TextureMapper::applyTransformation() &rArr; touchgfx::operator *(const touchgfx::Matrix4x4&, const touchgfx::Matrix4x4&)
</UL>
<BR>[Calls]<UL><LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextureMapper::applyTransformation()
</UL>
<BR>[Called By]<UL><LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1ViewBase::Screen1ViewBase()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> texturemapper.o(.constdata__ZTVN8touchgfx13TextureMapperE)
</UL>
<P><STRONG><a name="[177]"></a>touchgfx::TextureMapper::setAngles(float, float, float)</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, texturemapper.o(i._ZN8touchgfx13TextureMapper9setAnglesEfff))
<BR><BR>[Stack]<UL><LI>Max Depth = 1320<LI>Call Chain = touchgfx::TextureMapper::setAngles(float, float, float) &rArr; touchgfx::TextureMapper::applyTransformation() &rArr; touchgfx::operator *(const touchgfx::Matrix4x4&, const touchgfx::Matrix4x4&)
</UL>
<BR>[Calls]<UL><LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextureMapper::applyTransformation()
</UL>
<BR>[Called By]<UL><LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1ViewBase::Screen1ViewBase()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> texturemapper.o(.constdata__ZTVN8touchgfx13TextureMapperE)
</UL>
<P><STRONG><a name="[176]"></a>touchgfx::TextureMapper::setBitmap(const touchgfx::Bitmap&)</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, texturemapper.o(i._ZN8touchgfx13TextureMapper9setBitmapERKNS_6BitmapE))
<BR><BR>[Stack]<UL><LI>Max Depth = 1328<LI>Call Chain = touchgfx::TextureMapper::setBitmap(const touchgfx::Bitmap&) &rArr; touchgfx::TextureMapper::applyTransformation() &rArr; touchgfx::operator *(const touchgfx::Matrix4x4&, const touchgfx::Matrix4x4&)
</UL>
<BR>[Calls]<UL><LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Image::setBitmap(const touchgfx::Bitmap&)
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextureMapper::applyTransformation()
</UL>
<BR>[Called By]<UL><LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1ViewBase::Screen1ViewBase()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> texturemapper.o(.constdata__ZTVN8touchgfx13TextureMapperE)
</UL>
<P><STRONG><a name="[17b]"></a>touchgfx::TextureMapper::setCamera(float, float)</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, texturemapper.o(i._ZN8touchgfx13TextureMapper9setCameraEff))
<BR><BR>[Stack]<UL><LI>Max Depth = 1320<LI>Call Chain = touchgfx::TextureMapper::setCamera(float, float) &rArr; touchgfx::TextureMapper::applyTransformation() &rArr; touchgfx::operator *(const touchgfx::Matrix4x4&, const touchgfx::Matrix4x4&)
</UL>
<BR>[Calls]<UL><LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextureMapper::applyTransformation()
</UL>
<BR>[Called By]<UL><LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1ViewBase::Screen1ViewBase()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> texturemapper.o(.constdata__ZTVN8touchgfx13TextureMapperE)
</UL>
<P><STRONG><a name="[2f6]"></a>touchgfx::TextureMapper::TextureMapper(const touchgfx::Bitmap&)</STRONG> (Thumb, 198 bytes, Stack size 16 bytes, texturemapper.o(i._ZN8touchgfx13TextureMapperC1ERKNS_6BitmapE))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = touchgfx::TextureMapper::TextureMapper(const touchgfx::Bitmap&) &rArr; touchgfx::Image::setBitmap(const touchgfx::Bitmap&) &rArr; touchgfx::Bitmap::getHeight() const
</UL>
<BR>[Calls]<UL><LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Image::setBitmap(const touchgfx::Bitmap&)
</UL>
<BR>[Called By]<UL><LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1ViewBase::Screen1ViewBase()
</UL>

<P><STRONG><a name="[4b4]"></a>touchgfx::TextureMapper::TextureMapper__sub_object(const touchgfx::Bitmap&)</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, texturemapper.o(i._ZN8touchgfx13TextureMapperC1ERKNS_6BitmapE), UNUSED)

<P><STRONG><a name="[f1]"></a>touchgfx::MVPApplication::handlePendingScreenTransition()</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, touchgfxconfiguration.o(i._ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::MVPApplication::handlePendingScreenTransition()
</UL>
<BR>[Address Reference Count : 3]<UL><LI> touchgfxconfiguration.o(.constdata__ZTV23FrontendApplicationBase)
<LI> frontendapplication.o(.constdata__ZTV19FrontendApplication)
<LI> frontendapplicationbase.o(.constdata__ZTVN8touchgfx14MVPApplicationE)
</UL>
<P><STRONG><a name="[181]"></a>touchgfx::SnapshotWidget::makeSnapshot(unsigned short)</STRONG> (Thumb, 104 bytes, Stack size 32 bytes, snapshotwidget.o(i._ZN8touchgfx14SnapshotWidget12makeSnapshotEt))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = touchgfx::SnapshotWidget::makeSnapshot(unsigned short) &rArr; touchgfx::Drawable::getAbsoluteRect() const
</UL>
<BR>[Calls]<UL><LI><a href="#[363]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::getAbsoluteRect() const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> snapshotwidget.o(.constdata__ZTVN8touchgfx14SnapshotWidgetE)
</UL>
<P><STRONG><a name="[180]"></a>touchgfx::SnapshotWidget::makeSnapshot()</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, snapshotwidget.o(i._ZN8touchgfx14SnapshotWidget12makeSnapshotEv))
<BR><BR>[Called By]<UL><LI><a href="#[481]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::SlideTransition&lang;(touchgfx::Direction)1&rang;::SlideTransition(unsigned char)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> snapshotwidget.o(.constdata__ZTVN8touchgfx14SnapshotWidgetE)
</UL>
<P><STRONG><a name="[364]"></a>touchgfx::SnapshotWidget::SnapshotWidget()</STRONG> (Thumb, 70 bytes, Stack size 8 bytes, snapshotwidget.o(i._ZN8touchgfx14SnapshotWidgetC1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::SnapshotWidget::SnapshotWidget()
</UL>
<BR>[Calls]<UL><LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[481]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::SlideTransition&lang;(touchgfx::Direction)1&rang;::SlideTransition(unsigned char)
</UL>

<P><STRONG><a name="[4b5]"></a>touchgfx::SnapshotWidget::SnapshotWidget__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, snapshotwidget.o(i._ZN8touchgfx14SnapshotWidgetC1Ev), UNUSED)

<P><STRONG><a name="[365]"></a>touchgfx::EasingEquations::cubicEaseOut(unsigned short, short, short, unsigned short)</STRONG> (Thumb, 72 bytes, Stack size 0 bytes, easingequations.o(i._ZN8touchgfx15EasingEquations12cubicEaseOutEtsst))
<BR><BR>[Calls]<UL><LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::EasingEquations::roundRespectSign(float)
</UL>
<BR>[Called By]<UL><LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::SlideTransition&lang;(touchgfx::Direction)1&rang;::handleTickEvent()
</UL>

<P><STRONG><a name="[85]"></a>touchgfx::EasingEquations::linearEaseNone(unsigned short, short, short, unsigned short)</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, easingequations.o(i._ZN8touchgfx15EasingEquations14linearEaseNoneEtsst))
<BR><BR>[Calls]<UL><LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::EasingEquations::roundRespectSign(float)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> abstractprogressindicator.o(i._ZN8touchgfx25AbstractProgressIndicatorC1Ev)
</UL>
<P><STRONG><a name="[366]"></a>touchgfx::EasingEquations::roundRespectSign(float)</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, easingequations.o(i._ZN8touchgfx15EasingEquations16roundRespectSignEf))
<BR><BR>[Called By]<UL><LI><a href="#[365]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::EasingEquations::cubicEaseOut(unsigned short, short, short, unsigned short)
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::EasingEquations::linearEaseNone(unsigned short, short, short, unsigned short)
</UL>

<P><STRONG><a name="[141]"></a>touchgfx::GraphScrollData::beforeAddValue()</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, graphscroll.o(i._ZN8touchgfx15GraphScrollData14beforeAddValueEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = touchgfx::GraphScrollData::beforeAddValue() &rArr; touchgfx::AbstractDataGraph::invalidateAllXAxisPoints() &rArr; touchgfx::Drawable::invalidate() const
</UL>
<BR>[Calls]<UL><LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDataGraph::invalidateAllXAxisPoints()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screen1viewbase.o(.constdata__ZTVN8touchgfx11GraphScrollILs150EEE)
</UL>
<P><STRONG><a name="[142]"></a>touchgfx::GraphScrollData::addValue(int)</STRONG> (Thumb, 90 bytes, Stack size 16 bytes, graphscroll.o(i._ZN8touchgfx15GraphScrollData8addValueEi))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = touchgfx::GraphScrollData::addValue(int) &rArr; touchgfx::AbstractDataGraph::invalidateAllXAxisPoints() &rArr; touchgfx::Drawable::invalidate() const
</UL>
<BR>[Calls]<UL><LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDataGraph::invalidateAllXAxisPoints()
<LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDataGraph::invalidateGraphPointAt(short)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screen1viewbase.o(.constdata__ZTVN8touchgfx11GraphScrollILs150EEE)
</UL>
<P><STRONG><a name="[182]"></a>touchgfx::SlideTransition&lang;(touchgfx::Direction)1&rang;::~SlideTransition()</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, frontendapplicationbase.o(i._ZN8touchgfx15SlideTransitionILNS_9DirectionE1EED1Ev))
<BR>[Address Reference Count : 1]<UL><LI> frontendapplicationbase.o(.constdata__ZTVN8touchgfx15SlideTransitionILNS_9DirectionE1EEE)
</UL>
<P><STRONG><a name="[4b6]"></a>touchgfx::SlideTransition&lang;(touchgfx::Direction)1&rang;::~SlideTransition__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, frontendapplicationbase.o(i._ZN8touchgfx15SlideTransitionILNS_9DirectionE1EED1Ev), UNUSED)

<P><STRONG><a name="[30e]"></a>touchgfx::DynamicDataGraph::addDataPoint(float)</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, screen1viewbase.o(i._ZN8touchgfx16DynamicDataGraph12addDataPointEf))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = touchgfx::DynamicDataGraph::addDataPoint(float) &rArr; touchgfx::DynamicDataGraph::addDataPointScaled(int)
</UL>
<BR>[Calls]<UL><LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DynamicDataGraph::addDataPointScaled(int)
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDataGraph::float2scaledY(float) const
</UL>
<BR>[Called By]<UL><LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1ViewBase::Screen1ViewBase()
</UL>

<P><STRONG><a name="[2df]"></a>touchgfx::DynamicDataGraph::addDataPoint(int)</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, screen1view.o(i._ZN8touchgfx16DynamicDataGraph12addDataPointEi))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::DynamicDataGraph::addDataPoint(int) &rArr; touchgfx::DynamicDataGraph::addDataPointScaled(int)
</UL>
<BR>[Calls]<UL><LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DynamicDataGraph::addDataPointScaled(int)
</UL>
<BR>[Called By]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1View::handleTickEvent()
</UL>

<P><STRONG><a name="[186]"></a>touchgfx::DynamicDataGraph::beforeAddValue()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, abstractdatagraph.o(i._ZN8touchgfx16DynamicDataGraph14beforeAddValueEv))
<BR>[Address Reference Count : 1]<UL><LI> abstractdatagraph.o(.constdata__ZTVN8touchgfx16DynamicDataGraphE)
</UL>
<P><STRONG><a name="[36a]"></a>touchgfx::DynamicDataGraph::addDataPointScaled(int)</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, abstractdatagraph.o(i._ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::DynamicDataGraph::addDataPointScaled(int)
</UL>
<BR>[Called By]<UL><LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DynamicDataGraph::addDataPoint(int)
<LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DynamicDataGraph::addDataPoint(float)
</UL>

<P><STRONG><a name="[140]"></a>touchgfx::DynamicDataGraph::setScale(int, bool)</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, abstractdatagraph.o(i._ZN8touchgfx16DynamicDataGraph8setScaleEib))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::DynamicDataGraph::setScale(int, bool)
</UL>
<BR>[Called By]<UL><LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1ViewBase::Screen1ViewBase()
</UL>
<BR>[Address Reference Count : 2]<UL><LI> abstractdatagraph.o(.constdata__ZTVN8touchgfx16DynamicDataGraphE)
<LI> screen1viewbase.o(.constdata__ZTVN8touchgfx11GraphScrollILs150EEE)
</UL>
<P><STRONG><a name="[132]"></a>touchgfx::DynamicDataGraph::setScaleX(int, bool)</STRONG> (Thumb, 130 bytes, Stack size 24 bytes, abstractdatagraph.o(i._ZN8touchgfx16DynamicDataGraph9setScaleXEib))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = touchgfx::DynamicDataGraph::setScaleX(int, bool) &rArr; touchgfx::muldiv(int, int, int) &rArr; touchgfx::muldivu(unsigned, unsigned, unsigned, unsigned&) &rArr;  touchgfx::muldivu(unsigned, unsigned, unsigned, unsigned&) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::muldiv(int, int, int)
</UL>
<BR>[Address Reference Count : 2]<UL><LI> abstractdatagraph.o(.constdata__ZTVN8touchgfx16DynamicDataGraphE)
<LI> screen1viewbase.o(.constdata__ZTVN8touchgfx11GraphScrollILs150EEE)
</UL>
<P><STRONG><a name="[134]"></a>touchgfx::DynamicDataGraph::setScaleY(int, bool)</STRONG> (Thumb, 86 bytes, Stack size 24 bytes, abstractdatagraph.o(i._ZN8touchgfx16DynamicDataGraph9setScaleYEib))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = touchgfx::DynamicDataGraph::setScaleY(int, bool) &rArr; touchgfx::muldiv(int, int, int) &rArr; touchgfx::muldivu(unsigned, unsigned, unsigned, unsigned&) &rArr;  touchgfx::muldivu(unsigned, unsigned, unsigned, unsigned&) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::muldiv(int, int, int)
</UL>
<BR>[Address Reference Count : 2]<UL><LI> abstractdatagraph.o(.constdata__ZTVN8touchgfx16DynamicDataGraphE)
<LI> screen1viewbase.o(.constdata__ZTVN8touchgfx11GraphScrollILs150EEE)
</UL>
<P><STRONG><a name="[189]"></a>touchgfx::GraphElementLine::invalidateGraphPointAt(short)</STRONG> (Thumb, 250 bytes, Stack size 64 bytes, graphelements.o(i._ZN8touchgfx16GraphElementLine22invalidateGraphPointAtEs))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = touchgfx::GraphElementLine::invalidateGraphPointAt(short) &rArr; touchgfx::AbstractGraphElement::rectAround(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5) const &rArr; touchgfx::AbstractGraphElement::rectFromQ5Coordinates(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5) const
</UL>
<BR>[Calls]<UL><LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::operator &=(const touchgfx::Rect&)
<LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractGraphElement::rectAround(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5) const
<LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::expandToFit(const touchgfx::Rect&)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> graphelements.o(.constdata__ZTVN8touchgfx16GraphElementLineE)
</UL>
<P><STRONG><a name="[2ff]"></a>touchgfx::GraphElementLine::GraphElementLine()</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, screen1viewbase.o(i._ZN8touchgfx16GraphElementLineC1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::GraphElementLine::GraphElementLine() &rArr; touchgfx::CanvasWidget::CanvasWidget__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CanvasWidget::CanvasWidget__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1ViewBase::Screen1ViewBase()
</UL>

<P><STRONG><a name="[4b7]"></a>touchgfx::GraphElementLine::GraphElementLine__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, screen1viewbase.o(i._ZN8touchgfx16GraphElementLineC1Ev), UNUSED)

<P><STRONG><a name="[36e]"></a>touchgfx::TouchCalibration::translatePoint(touchgfx::Point&)</STRONG> (Thumb, 124 bytes, Stack size 32 bytes, touchcalibration.o(i._ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = touchgfx::TouchCalibration::translatePoint(touchgfx::Point&) &rArr; touchgfx::TouchCalibration::muldiv(int, int, int, int, int&) &rArr; touchgfx::TouchCalibration::muldivu(unsigned, unsigned, unsigned, unsigned, unsigned, unsigned&) &rArr;  touchgfx::TouchCalibration::muldivu(unsigned, unsigned, unsigned, unsigned, unsigned, unsigned&) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TouchCalibration::muldiv(int, int, int, int, int&)
</UL>
<BR>[Called By]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::touch(int, int)
</UL>

<P><STRONG><a name="[370]"></a>touchgfx::TouchCalibration::clzu(unsigned)</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, touchcalibration.o(i._ZN8touchgfx16TouchCalibration4clzuEj))
<BR><BR>[Called By]<UL><LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TouchCalibration::muldivu(unsigned, unsigned, unsigned, unsigned, unsigned, unsigned&)
<LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TouchCalibration::muldiv(int, int, int, int, int&)
</UL>

<P><STRONG><a name="[36f]"></a>touchgfx::TouchCalibration::muldiv(int, int, int, int, int&)</STRONG> (Thumb, 180 bytes, Stack size 44 bytes, touchcalibration.o(i._ZN8touchgfx16TouchCalibration6muldivEiiiiRi))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = touchgfx::TouchCalibration::muldiv(int, int, int, int, int&) &rArr; touchgfx::TouchCalibration::muldivu(unsigned, unsigned, unsigned, unsigned, unsigned, unsigned&) &rArr;  touchgfx::TouchCalibration::muldivu(unsigned, unsigned, unsigned, unsigned, unsigned, unsigned&) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TouchCalibration::muldivu(unsigned, unsigned, unsigned, unsigned, unsigned, unsigned&)
<LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TouchCalibration::clzu(unsigned)
</UL>
<BR>[Called By]<UL><LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TouchCalibration::translatePoint(touchgfx::Point&)
</UL>

<P><STRONG><a name="[371]"></a>touchgfx::TouchCalibration::muldivu(unsigned, unsigned, unsigned, unsigned, unsigned, unsigned&)</STRONG> (Thumb, 236 bytes, Stack size 52 bytes, touchcalibration.o(i._ZN8touchgfx16TouchCalibration7muldivuEjjjjjRj))
<BR><BR>[Stack]<UL><LI>Max Depth = 52 + In Cycle
<LI>Call Chain = touchgfx::TouchCalibration::muldivu(unsigned, unsigned, unsigned, unsigned, unsigned, unsigned&) &rArr;  touchgfx::TouchCalibration::muldivu(unsigned, unsigned, unsigned, unsigned, unsigned, unsigned&) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TouchCalibration::muldivu(unsigned, unsigned, unsigned, unsigned, unsigned, unsigned&)
<LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TouchCalibration::clzu(unsigned)
</UL>
<BR>[Called By]<UL><LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TouchCalibration::muldivu(unsigned, unsigned, unsigned, unsigned, unsigned, unsigned&)
<LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TouchCalibration::muldiv(int, int, int, int, int&)
</UL>

<P><STRONG><a name="[136]"></a>touchgfx::AbstractDataGraph::setGraphRangeX(int, int)</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, abstractdatagraph.o(i._ZN8touchgfx17AbstractDataGraph14setGraphRangeXEii))
<BR><BR>[Called By]<UL><LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GraphScroll&lang;(short)150&rang;::GraphScroll()
</UL>
<BR>[Address Reference Count : 3]<UL><LI> abstractdatagraph.o(.constdata__ZTVN8touchgfx17AbstractDataGraphE)
<LI> abstractdatagraph.o(.constdata__ZTVN8touchgfx16DynamicDataGraphE)
<LI> screen1viewbase.o(.constdata__ZTVN8touchgfx11GraphScrollILs150EEE)
</UL>
<P><STRONG><a name="[138]"></a>touchgfx::AbstractDataGraph::setGraphRangeY(int, int)</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, abstractdatagraph.o(i._ZN8touchgfx17AbstractDataGraph14setGraphRangeYEii))
<BR><BR>[Called By]<UL><LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1ViewBase::Screen1ViewBase()
</UL>
<BR>[Address Reference Count : 3]<UL><LI> abstractdatagraph.o(.constdata__ZTVN8touchgfx17AbstractDataGraphE)
<LI> abstractdatagraph.o(.constdata__ZTVN8touchgfx16DynamicDataGraphE)
<LI> screen1viewbase.o(.constdata__ZTVN8touchgfx11GraphScrollILs150EEE)
</UL>
<P><STRONG><a name="[30d]"></a>touchgfx::AbstractDataGraph::addGraphElement(touchgfx::AbstractGraphElement&)</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, abstractdatagraph.o(i._ZN8touchgfx17AbstractDataGraph15addGraphElementERNS_20AbstractGraphElementE))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = touchgfx::AbstractDataGraph::addGraphElement(touchgfx::AbstractGraphElement&) &rArr; touchgfx::Drawable::setPosition(short, short, short, short)
</UL>
<BR>[Calls]<UL><LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Container::add(touchgfx::Drawable&)
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setPosition(short, short, short, short)
</UL>
<BR>[Called By]<UL><LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1ViewBase::Screen1ViewBase()
</UL>

<P><STRONG><a name="[12d]"></a>touchgfx::AbstractDataGraph::handleDragEvent(const touchgfx::DragEvent&)</STRONG> (Thumb, 100 bytes, Stack size 24 bytes, abstractdatagraph.o(i._ZN8touchgfx17AbstractDataGraph15handleDragEventERKNS_9DragEventE))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = touchgfx::AbstractDataGraph::handleDragEvent(const touchgfx::DragEvent&)
</UL>
<BR>[Address Reference Count : 3]<UL><LI> abstractdatagraph.o(.constdata__ZTVN8touchgfx17AbstractDataGraphE)
<LI> abstractdatagraph.o(.constdata__ZTVN8touchgfx16DynamicDataGraphE)
<LI> screen1viewbase.o(.constdata__ZTVN8touchgfx11GraphScrollILs150EEE)
</UL>
<P><STRONG><a name="[12c]"></a>touchgfx::AbstractDataGraph::handleClickEvent(const touchgfx::ClickEvent&)</STRONG> (Thumb, 112 bytes, Stack size 24 bytes, abstractdatagraph.o(i._ZN8touchgfx17AbstractDataGraph16handleClickEventERKNS_10ClickEventE))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = touchgfx::AbstractDataGraph::handleClickEvent(const touchgfx::ClickEvent&)
</UL>
<BR>[Address Reference Count : 3]<UL><LI> abstractdatagraph.o(.constdata__ZTVN8touchgfx17AbstractDataGraphE)
<LI> abstractdatagraph.o(.constdata__ZTVN8touchgfx16DynamicDataGraphE)
<LI> screen1viewbase.o(.constdata__ZTVN8touchgfx11GraphScrollILs150EEE)
</UL>
<P><STRONG><a name="[30b]"></a>touchgfx::AbstractDataGraph::setGraphAreaMargin(short, short, short, short)</STRONG> (Thumb, 138 bytes, Stack size 32 bytes, abstractdatagraph.o(i._ZN8touchgfx17AbstractDataGraph18setGraphAreaMarginEssss))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = touchgfx::AbstractDataGraph::setGraphAreaMargin(short, short, short, short) &rArr; touchgfx::Drawable::setPosition(short, short, short, short)
</UL>
<BR>[Calls]<UL><LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setPosition(short, short, short, short)
<LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDataGraph::updateAreasPosition()
</UL>
<BR>[Called By]<UL><LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1ViewBase::Screen1ViewBase()
<LI><a href="#[373]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDataGraph::AbstractDataGraph__sub_object(short)
</UL>

<P><STRONG><a name="[30c]"></a>touchgfx::AbstractDataGraph::setGraphAreaPadding(short, short, short, short)</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, abstractdatagraph.o(i._ZN8touchgfx17AbstractDataGraph19setGraphAreaPaddingEssss))
<BR><BR>[Called By]<UL><LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1ViewBase::Screen1ViewBase()
</UL>

<P><STRONG><a name="[372]"></a>touchgfx::AbstractDataGraph::updateAreasPosition()</STRONG> (Thumb, 326 bytes, Stack size 24 bytes, abstractdatagraph.o(i._ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = touchgfx::AbstractDataGraph::updateAreasPosition()
</UL>
<BR>[Called By]<UL><LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDataGraph::setHeight(short)
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDataGraph::setWidth(short)
<LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDataGraph::setGraphAreaMargin(short, short, short, short)
</UL>

<P><STRONG><a name="[137]"></a>touchgfx::AbstractDataGraph::setGraphRangeXScaled(int, int)</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, abstractdatagraph.o(i._ZN8touchgfx17AbstractDataGraph20setGraphRangeXScaledEii))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = touchgfx::AbstractDataGraph::setGraphRangeXScaled(int, int) &rArr; touchgfx::Drawable::invalidate() const
</UL>
<BR>[Calls]<UL><LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
</UL>
<BR>[Address Reference Count : 3]<UL><LI> abstractdatagraph.o(.constdata__ZTVN8touchgfx17AbstractDataGraphE)
<LI> abstractdatagraph.o(.constdata__ZTVN8touchgfx16DynamicDataGraphE)
<LI> screen1viewbase.o(.constdata__ZTVN8touchgfx11GraphScrollILs150EEE)
</UL>
<P><STRONG><a name="[139]"></a>touchgfx::AbstractDataGraph::setGraphRangeYScaled(int, int)</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, abstractdatagraph.o(i._ZN8touchgfx17AbstractDataGraph20setGraphRangeYScaledEii))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = touchgfx::AbstractDataGraph::setGraphRangeYScaled(int, int) &rArr; touchgfx::Drawable::invalidate() const
</UL>
<BR>[Calls]<UL><LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
</UL>
<BR>[Address Reference Count : 3]<UL><LI> abstractdatagraph.o(.constdata__ZTVN8touchgfx17AbstractDataGraphE)
<LI> abstractdatagraph.o(.constdata__ZTVN8touchgfx16DynamicDataGraphE)
<LI> screen1viewbase.o(.constdata__ZTVN8touchgfx11GraphScrollILs150EEE)
</UL>
<P><STRONG><a name="[368]"></a>touchgfx::AbstractDataGraph::invalidateGraphPointAt(short)</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, abstractdatagraph.o(i._ZN8touchgfx17AbstractDataGraph22invalidateGraphPointAtEs))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::AbstractDataGraph::invalidateGraphPointAt(short)
</UL>
<BR>[Called By]<UL><LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GraphScrollData::addValue(int)
</UL>

<P><STRONG><a name="[367]"></a>touchgfx::AbstractDataGraph::invalidateAllXAxisPoints()</STRONG> (Thumb, 92 bytes, Stack size 24 bytes, abstractdatagraph.o(i._ZN8touchgfx17AbstractDataGraph24invalidateAllXAxisPointsEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = touchgfx::AbstractDataGraph::invalidateAllXAxisPoints() &rArr; touchgfx::Drawable::invalidate() const
</UL>
<BR>[Calls]<UL><LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
</UL>
<BR>[Called By]<UL><LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GraphScrollData::addValue(int)
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GraphScrollData::beforeAddValue()
</UL>

<P><STRONG><a name="[12a]"></a>touchgfx::AbstractDataGraph::setWidth(short)</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, abstractdatagraph.o(i._ZN8touchgfx17AbstractDataGraph8setWidthEs))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = touchgfx::AbstractDataGraph::setWidth(short) &rArr; touchgfx::AbstractDataGraph::updateAreasPosition()
</UL>
<BR>[Calls]<UL><LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDataGraph::updateAreasPosition()
</UL>
<BR>[Address Reference Count : 3]<UL><LI> abstractdatagraph.o(.constdata__ZTVN8touchgfx17AbstractDataGraphE)
<LI> abstractdatagraph.o(.constdata__ZTVN8touchgfx16DynamicDataGraphE)
<LI> screen1viewbase.o(.constdata__ZTVN8touchgfx11GraphScrollILs150EEE)
</UL>
<P><STRONG><a name="[12b]"></a>touchgfx::AbstractDataGraph::setHeight(short)</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, abstractdatagraph.o(i._ZN8touchgfx17AbstractDataGraph9setHeightEs))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = touchgfx::AbstractDataGraph::setHeight(short) &rArr; touchgfx::AbstractDataGraph::updateAreasPosition()
</UL>
<BR>[Calls]<UL><LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDataGraph::updateAreasPosition()
</UL>
<BR>[Address Reference Count : 3]<UL><LI> abstractdatagraph.o(.constdata__ZTVN8touchgfx17AbstractDataGraphE)
<LI> abstractdatagraph.o(.constdata__ZTVN8touchgfx16DynamicDataGraphE)
<LI> screen1viewbase.o(.constdata__ZTVN8touchgfx11GraphScrollILs150EEE)
</UL>
<P><STRONG><a name="[373]"></a>touchgfx::AbstractDataGraph::AbstractDataGraph__sub_object(short)</STRONG> (Thumb, 172 bytes, Stack size 24 bytes, abstractdatagraph.o(i._ZN8touchgfx17AbstractDataGraphC2Es))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = touchgfx::AbstractDataGraph::AbstractDataGraph__sub_object(short) &rArr; touchgfx::AbstractDataGraph::setGraphAreaMargin(short, short, short, short) &rArr; touchgfx::Drawable::setPosition(short, short, short, short)
</UL>
<BR>[Calls]<UL><LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Container::add(touchgfx::Drawable&)
<LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDataGraph::setGraphAreaMargin(short, short, short, short)
<LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Container::Container()
</UL>
<BR>[Called By]<UL><LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GraphScroll&lang;(short)150&rang;::GraphScroll()
</UL>

<P><STRONG><a name="[2ef]"></a>touchgfx::AbstractPartition::AbstractPartition__sub_object()</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, abstractpartition.o(i._ZN8touchgfx17AbstractPartitionC2Ev))
<BR><BR>[Called By]<UL><LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendHeap::FrontendHeap()
</UL>

<P><STRONG><a name="[4b8]"></a>touchgfx::AbstractPartition::~AbstractPartition()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, abstractpartition.o(i._ZN8touchgfx17AbstractPartitionD2Ev), UNUSED)

<P><STRONG><a name="[18a]"></a>touchgfx::AbstractPartition::~AbstractPartition__sub_object()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, abstractpartition.o(i._ZN8touchgfx17AbstractPartitionD2Ev))
<BR><BR>[Called By]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendHeap::~FrontendHeap()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> abstractpartition.o(.constdata__ZTVN8touchgfx17AbstractPartitionE)
</UL>
<P><STRONG><a name="[a6]"></a>touchgfx::LCD16DebugPrinter::~LCD16DebugPrinter()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lcd16debugprinter.o(i._ZN8touchgfx17LCD16DebugPrinterD1Ev))
<BR>[Address Reference Count : 2]<UL><LI> frontendapplication.o(i.__sti___23_frontendapplication_cpp_a4e6c903)
<LI> lcd16debugprinter.o(.constdata__ZTVN8touchgfx17LCD16DebugPrinterE)
</UL>
<P><STRONG><a name="[4b9]"></a>touchgfx::LCD16DebugPrinter::~LCD16DebugPrinter__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, lcd16debugprinter.o(i._ZN8touchgfx17LCD16DebugPrinterD1Ev), UNUSED)

<P><STRONG><a name="[18e]"></a>touchgfx::LockFreeDMA_Queue::pushCopyOf(const touchgfx::BlitOp&)</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, dma.o(i._ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::LockFreeDMA_Queue::pushCopyOf(const touchgfx::BlitOp&)
</UL>
<BR>[Calls]<UL><LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> dma.o(.constdata__ZTVN8touchgfx17LockFreeDMA_QueueE)
</UL>
<P><STRONG><a name="[18f]"></a>touchgfx::LockFreeDMA_Queue::pop()</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, dma.o(i._ZN8touchgfx17LockFreeDMA_Queue3popEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::LockFreeDMA_Queue::pop()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> dma.o(.constdata__ZTVN8touchgfx17LockFreeDMA_QueueE)
</UL>
<P><STRONG><a name="[190]"></a>touchgfx::LockFreeDMA_Queue::first()</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, dma.o(i._ZN8touchgfx17LockFreeDMA_Queue5firstEv))
<BR>[Address Reference Count : 1]<UL><LI> dma.o(.constdata__ZTVN8touchgfx17LockFreeDMA_QueueE)
</UL>
<P><STRONG><a name="[18d]"></a>touchgfx::LockFreeDMA_Queue::isFull()</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, dma.o(i._ZN8touchgfx17LockFreeDMA_Queue6isFullEv))
<BR>[Address Reference Count : 1]<UL><LI> dma.o(.constdata__ZTVN8touchgfx17LockFreeDMA_QueueE)
</UL>
<P><STRONG><a name="[18c]"></a>touchgfx::LockFreeDMA_Queue::isEmpty()</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, dma.o(i._ZN8touchgfx17LockFreeDMA_Queue7isEmptyEv))
<BR>[Address Reference Count : 1]<UL><LI> dma.o(.constdata__ZTVN8touchgfx17LockFreeDMA_QueueE)
</UL>
<P><STRONG><a name="[323]"></a>touchgfx::LockFreeDMA_Queue::LockFreeDMA_Queue(touchgfx::BlitOp*, unsigned long)</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, dma.o(i._ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEm))
<BR><BR>[Called By]<UL><LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32DMA::STM32DMA()
</UL>

<P><STRONG><a name="[4ba]"></a>touchgfx::LockFreeDMA_Queue::LockFreeDMA_Queue__sub_object(touchgfx::BlitOp*, unsigned long)</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, dma.o(i._ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEm), UNUSED)

<P><STRONG><a name="[30f]"></a>touchgfx::CanvasWidgetRenderer::resetBuffer()</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, canvaswidgetrenderer.o(i._ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv))
<BR><BR>[Called By]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1ViewBase::~Screen1ViewBase()
</UL>

<P><STRONG><a name="[301]"></a>touchgfx::CanvasWidgetRenderer::setupBuffer(unsigned char*, unsigned)</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, canvaswidgetrenderer.o(i._ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::CanvasWidgetRenderer::setupBuffer(unsigned char*, unsigned)
</UL>
<BR>[Called By]<UL><LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1ViewBase::Screen1ViewBase()
</UL>

<P><STRONG><a name="[3b7]"></a>touchgfx::CanvasWidgetRenderer::getOutlineBuffer()</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, canvaswidgetrenderer.o(i._ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::CanvasWidgetRenderer::getOutlineBuffer()
</UL>
<BR>[Called By]<UL><LI><a href="#[3aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Outline::reset()
</UL>

<P><STRONG><a name="[3b8]"></a>touchgfx::CanvasWidgetRenderer::getOutlineBufferSize()</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, canvaswidgetrenderer.o(i._ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::CanvasWidgetRenderer::getOutlineBufferSize()
</UL>
<BR>[Called By]<UL><LI><a href="#[3aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Outline::reset()
</UL>

<P><STRONG><a name="[3a8]"></a>touchgfx::CanvasWidgetRenderer::hasBuffer()</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, canvaswidgetrenderer.o(i._ZN8touchgfx20CanvasWidgetRenderer9hasBufferEv))
<BR><BR>[Called By]<UL><LI><a href="#[3a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Canvas::Canvas(const touchgfx::CanvasWidget*, const touchgfx::Rect&)
</UL>

<P><STRONG><a name="[354]"></a>touchgfx::AbstractPainterRGB565::AbstractPainterRGB565__sub_object()</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, screen1viewbase.o(i._ZN8touchgfx21AbstractPainterRGB565C2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::AbstractPainterRGB565::AbstractPainterRGB565__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::PainterRGB565::PainterRGB565(touchgfx::colortype)
</UL>

<P><STRONG><a name="[334]"></a>touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&)</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, displaytransformation.o(i._ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE))
<BR><BR>[Called By]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::drawCachedAreas()
<LI><a href="#[406]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextureMapper::drawQuad(const touchgfx::Rect&, unsigned short*, const float*, const float*, const float*, const float*, const float*) const
<LI><a href="#[3cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyARGB8888Solid(const unsigned*, const touchgfx::Rect&, const touchgfx::Rect&) const
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::fillRect(const touchgfx::Rect&, touchgfx::colortype, unsigned char)
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopy(const unsigned short*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char, bool)
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::copyFrameBufferRegionToMemory(const touchgfx::Rect&, const touchgfx::Rect&, unsigned char*, short, short)
<LI><a href="#[3cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyAlphaPerPixel(const unsigned short*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
<LI><a href="#[3c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyL8_ARGB8888(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::DecompressorL8_LZW9::blitCopyARGB8888(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::DecompressorL8_LZW9::blitCopyRGB888(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::DecompressorL8_LZW9::blitCopyRGB565(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::DecompressorL8_RLE::blitCopyARGB8888(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::DecompressorL8_RLE::blitCopyRGB888(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::DecompressorL8_RLE::blitCopyRGB565(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
<LI><a href="#[3c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyL8_RGB888(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
<LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyL8_RGB565(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::DecompressorL8_L4::blitCopyARGB8888(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::DecompressorL8_L4::blitCopyRGB888(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::DecompressorL8_L4::blitCopyRGB565(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
<LI><a href="#[3c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyARGB8888(const unsigned*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
<LI><a href="#[3c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyRGB888(const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
<LI><a href="#[401]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ScalableImage::drawQuad(const touchgfx::Rect&, unsigned short*, const float*, const float*, const float*, const float*, const float*) const
<LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16DebugPrinter::draw(const touchgfx::Rect&) const
<LI><a href="#[3a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Canvas::Canvas(const touchgfx::CanvasWidget*, const touchgfx::Rect&)
</UL>

<P><STRONG><a name="[3a9]"></a>touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&, const touchgfx::Rect&)</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, displaytransformation.o(i._ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_))
<BR><BR>[Called By]<UL><LI><a href="#[406]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextureMapper::drawQuad(const touchgfx::Rect&, unsigned short*, const float*, const float*, const float*, const float*, const float*) const
<LI><a href="#[3cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyARGB8888Solid(const unsigned*, const touchgfx::Rect&, const touchgfx::Rect&) const
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopy(const unsigned short*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char, bool)
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::copyFrameBufferRegionToMemory(const touchgfx::Rect&, const touchgfx::Rect&, unsigned char*, short, short)
<LI><a href="#[3cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyAlphaPerPixel(const unsigned short*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
<LI><a href="#[3c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyL8_ARGB8888(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::DecompressorL8_LZW9::blitCopyARGB8888(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::DecompressorL8_LZW9::blitCopyRGB888(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::DecompressorL8_LZW9::blitCopyRGB565(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::DecompressorL8_RLE::blitCopyARGB8888(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::DecompressorL8_RLE::blitCopyRGB888(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::DecompressorL8_RLE::blitCopyRGB565(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
<LI><a href="#[3c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyL8_RGB888(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
<LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyL8_RGB565(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::DecompressorL8_L4::blitCopyARGB8888(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::DecompressorL8_L4::blitCopyRGB888(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::DecompressorL8_L4::blitCopyRGB565(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
<LI><a href="#[3c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyARGB8888(const unsigned*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
<LI><a href="#[3c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyRGB888(const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
<LI><a href="#[401]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ScalableImage::drawQuad(const touchgfx::Rect&, unsigned short*, const float*, const float*, const float*, const float*, const float*) const
<LI><a href="#[3a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Canvas::Canvas(const touchgfx::CanvasWidget*, const touchgfx::Rect&)
</UL>

<P><STRONG><a name="[402]"></a>touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(float&, float&, const touchgfx::Rect&)</STRONG> (Thumb, 58 bytes, Stack size 0 bytes, displaytransformation.o(i._ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE))
<BR><BR>[Called By]<UL><LI><a href="#[406]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextureMapper::drawQuad(const touchgfx::Rect&, unsigned short*, const float*, const float*, const float*, const float*, const float*) const
<LI><a href="#[401]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ScalableImage::drawQuad(const touchgfx::Rect&, unsigned short*, const float*, const float*, const float*, const float*, const float*) const
</UL>

<P><STRONG><a name="[3f7]"></a>touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(short&, short&)</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, displaytransformation.o(i._ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_))
<BR><BR>[Called By]<UL><LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::drawGlyph(unsigned short*, touchgfx::Rect, short, short, unsigned short, unsigned short, const touchgfx::Rect&, const touchgfx::GlyphNode*, const unsigned char*, unsigned char, touchgfx::colortype, unsigned char, unsigned char, touchgfx::TextRotation)
</UL>

<P><STRONG><a name="[333]"></a>touchgfx::DisplayTransformation::transformFrameBufferToDisplay(touchgfx::Rect&)</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, displaytransformation.o(i._ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE))
<BR><BR>[Called By]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::drawCachedAreas()
</UL>

<P><STRONG><a name="[387]"></a>touchgfx::DisplayTransformation::transformFrameBufferToDisplay(short&, short&)</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, displaytransformation.o(i._ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_))
<BR><BR>[Called By]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::touch(int, int)
</UL>

<P><STRONG><a name="[2fa]"></a>touchgfx::TextAreaWithOneWildcard::TextAreaWithOneWildcard()</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, screen1viewbase.o(i._ZN8touchgfx23TextAreaWithOneWildcardC1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = touchgfx::TextAreaWithOneWildcard::TextAreaWithOneWildcard() &rArr; touchgfx::TextAreaWithWildcardBase::TextAreaWithWildcardBase() &rArr; touchgfx::TextArea::TextArea() &rArr; touchgfx::TextArea::BoundingArea::BoundingArea() &rArr; touchgfx::Rect::Rect(short, short, short, short)
</UL>
<BR>[Calls]<UL><LI><a href="#[378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithWildcardBase::TextAreaWithWildcardBase()
</UL>
<BR>[Called By]<UL><LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1ViewBase::Screen1ViewBase()
</UL>

<P><STRONG><a name="[4bb]"></a>touchgfx::TextAreaWithOneWildcard::TextAreaWithOneWildcard__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, screen1viewbase.o(i._ZN8touchgfx23TextAreaWithOneWildcardC1Ev), UNUSED)

<P><STRONG><a name="[193]"></a>touchgfx::TextAreaWithOneWildcard::~TextAreaWithOneWildcard()</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, digitalclock.o(i._ZN8touchgfx23TextAreaWithOneWildcardD1Ev))
<BR><BR>[Called By]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1ViewBase::~Screen1ViewBase()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> digitalclock.o(.constdata__ZTVN8touchgfx23TextAreaWithOneWildcardE)
</UL>
<P><STRONG><a name="[4bc]"></a>touchgfx::TextAreaWithOneWildcard::~TextAreaWithOneWildcard__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, digitalclock.o(i._ZN8touchgfx23TextAreaWithOneWildcardD1Ev), UNUSED)

<P><STRONG><a name="[2fd]"></a>touchgfx::TextAreaWithTwoWildcards::TextAreaWithTwoWildcards()</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, screen1viewbase.o(i._ZN8touchgfx24TextAreaWithTwoWildcardsC1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = touchgfx::TextAreaWithTwoWildcards::TextAreaWithTwoWildcards() &rArr; touchgfx::TextAreaWithWildcardBase::TextAreaWithWildcardBase() &rArr; touchgfx::TextArea::TextArea() &rArr; touchgfx::TextArea::BoundingArea::BoundingArea() &rArr; touchgfx::Rect::Rect(short, short, short, short)
</UL>
<BR>[Calls]<UL><LI><a href="#[378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithWildcardBase::TextAreaWithWildcardBase()
</UL>
<BR>[Called By]<UL><LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1ViewBase::Screen1ViewBase()
</UL>

<P><STRONG><a name="[4bd]"></a>touchgfx::TextAreaWithTwoWildcards::TextAreaWithTwoWildcards__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, screen1viewbase.o(i._ZN8touchgfx24TextAreaWithTwoWildcardsC1Ev), UNUSED)

<P><STRONG><a name="[19f]"></a>touchgfx::TextAreaWithTwoWildcards::~TextAreaWithTwoWildcards()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, screen1viewbase.o(i._ZN8touchgfx24TextAreaWithTwoWildcardsD1Ev))
<BR><BR>[Calls]<UL><LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::~TextArea()
</UL>
<BR>[Called By]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1ViewBase::~Screen1ViewBase()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screen1viewbase.o(.constdata__ZTVN8touchgfx24TextAreaWithTwoWildcardsE)
</UL>
<P><STRONG><a name="[4be]"></a>touchgfx::TextAreaWithTwoWildcards::~TextAreaWithTwoWildcards__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, screen1viewbase.o(i._ZN8touchgfx24TextAreaWithTwoWildcardsD1Ev), UNUSED)

<P><STRONG><a name="[378]"></a>touchgfx::TextAreaWithWildcardBase::TextAreaWithWildcardBase()</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, screen1viewbase.o(i._ZN8touchgfx24TextAreaWithWildcardBaseC1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = touchgfx::TextAreaWithWildcardBase::TextAreaWithWildcardBase() &rArr; touchgfx::TextArea::TextArea() &rArr; touchgfx::TextArea::BoundingArea::BoundingArea() &rArr; touchgfx::Rect::Rect(short, short, short, short)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::TextArea()
</UL>
<BR>[Called By]<UL><LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithTwoWildcards::TextAreaWithTwoWildcards()
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithOneWildcard::TextAreaWithOneWildcard()
</UL>

<P><STRONG><a name="[4bf]"></a>touchgfx::TextAreaWithWildcardBase::TextAreaWithWildcardBase__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, screen1viewbase.o(i._ZN8touchgfx24TextAreaWithWildcardBaseC1Ev), UNUSED)

<P><STRONG><a name="[167]"></a>touchgfx::AbstractDirectionProgress::setDirection(touchgfx::AbstractDirectionProgress::DirectionType)</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, abstractdirectionprogress.o(i._ZN8touchgfx25AbstractDirectionProgress12setDirectionENS0_13DirectionTypeE))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = touchgfx::AbstractDirectionProgress::setDirection(touchgfx::AbstractDirectionProgress::DirectionType) &rArr; touchgfx::Drawable::invalidate() const
</UL>
<BR>[Calls]<UL><LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
</UL>
<BR>[Called By]<UL><LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1ViewBase::Screen1ViewBase()
</UL>
<BR>[Address Reference Count : 2]<UL><LI> abstractdirectionprogress.o(.constdata__ZTVN8touchgfx25AbstractDirectionProgressE)
<LI> imageprogress.o(.constdata__ZTVN8touchgfx13ImageProgressE)
</UL>
<P><STRONG><a name="[353]"></a>touchgfx::AbstractDirectionProgress::AbstractDirectionProgress()</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, abstractdirectionprogress.o(i._ZN8touchgfx25AbstractDirectionProgressC1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = touchgfx::AbstractDirectionProgress::AbstractDirectionProgress() &rArr; touchgfx::AbstractProgressIndicator::AbstractProgressIndicator() &rArr; touchgfx::Image::setBitmap(const touchgfx::Bitmap&) &rArr; touchgfx::Bitmap::getHeight() const
</UL>
<BR>[Calls]<UL><LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractProgressIndicator::AbstractProgressIndicator()
</UL>
<BR>[Called By]<UL><LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ImageProgress::ImageProgress()
</UL>

<P><STRONG><a name="[4c0]"></a>touchgfx::AbstractDirectionProgress::AbstractDirectionProgress__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, abstractdirectionprogress.o(i._ZN8touchgfx25AbstractDirectionProgressC1Ev), UNUSED)

<P><STRONG><a name="[161]"></a>touchgfx::AbstractProgressIndicator::setBackground(const touchgfx::Bitmap&)</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, abstractprogressindicator.o(i._ZN8touchgfx25AbstractProgressIndicator13setBackgroundERKNS_6BitmapE))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = touchgfx::AbstractProgressIndicator::setBackground(const touchgfx::Bitmap&) &rArr; touchgfx::Image::setBitmap(const touchgfx::Bitmap&) &rArr; touchgfx::Bitmap::getHeight() const
</UL>
<BR>[Calls]<UL><LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Image::setBitmap(const touchgfx::Bitmap&)
</UL>
<BR>[Called By]<UL><LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1ViewBase::Screen1ViewBase()
</UL>
<BR>[Address Reference Count : 3]<UL><LI> abstractdirectionprogress.o(.constdata__ZTVN8touchgfx25AbstractDirectionProgressE)
<LI> abstractprogressindicator.o(.constdata__ZTVN8touchgfx25AbstractProgressIndicatorE)
<LI> imageprogress.o(.constdata__ZTVN8touchgfx13ImageProgressE)
</UL>
<P><STRONG><a name="[160]"></a>touchgfx::AbstractProgressIndicator::handleTickEvent()</STRONG> (Thumb, 142 bytes, Stack size 16 bytes, abstractprogressindicator.o(i._ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::AbstractProgressIndicator::handleTickEvent()
</UL>
<BR>[Calls]<UL><LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::getInstance()
<LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::TimerWidgets::remove(const touchgfx::Drawable*)
</UL>
<BR>[Address Reference Count : 3]<UL><LI> abstractdirectionprogress.o(.constdata__ZTVN8touchgfx25AbstractDirectionProgressE)
<LI> abstractprogressindicator.o(.constdata__ZTVN8touchgfx25AbstractProgressIndicatorE)
<LI> imageprogress.o(.constdata__ZTVN8touchgfx13ImageProgressE)
</UL>
<P><STRONG><a name="[1a3]"></a>touchgfx::AbstractProgressIndicator::setProgressIndicatorPosition(short, short, short, short)</STRONG> (Thumb, 88 bytes, Stack size 32 bytes, abstractprogressindicator.o(i._ZN8touchgfx25AbstractProgressIndicator28setProgressIndicatorPositionEssss))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = touchgfx::AbstractProgressIndicator::setProgressIndicatorPosition(short, short, short, short)
</UL>
<BR>[Called By]<UL><LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ImageProgress::setProgressIndicatorPosition(short, short, short, short)
</UL>
<BR>[Address Reference Count : 2]<UL><LI> abstractdirectionprogress.o(.constdata__ZTVN8touchgfx25AbstractDirectionProgressE)
<LI> abstractprogressindicator.o(.constdata__ZTVN8touchgfx25AbstractProgressIndicatorE)
</UL>
<P><STRONG><a name="[163]"></a>touchgfx::AbstractProgressIndicator::setRange(int, int, unsigned short, unsigned short)</STRONG> (Thumb, 72 bytes, Stack size 24 bytes, abstractprogressindicator.o(i._ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = touchgfx::AbstractProgressIndicator::setRange(int, int, unsigned short, unsigned short)
</UL>
<BR>[Called By]<UL><LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1ViewBase::Screen1ViewBase()
</UL>
<BR>[Address Reference Count : 3]<UL><LI> abstractdirectionprogress.o(.constdata__ZTVN8touchgfx25AbstractDirectionProgressE)
<LI> abstractprogressindicator.o(.constdata__ZTVN8touchgfx25AbstractProgressIndicatorE)
<LI> imageprogress.o(.constdata__ZTVN8touchgfx13ImageProgressE)
</UL>
<P><STRONG><a name="[1a4]"></a>touchgfx::AbstractProgressIndicator::setValue(int)</STRONG> (Thumb, 78 bytes, Stack size 8 bytes, abstractprogressindicator.o(i._ZN8touchgfx25AbstractProgressIndicator8setValueEi))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::AbstractProgressIndicator::setValue(int)
</UL>
<BR>[Called By]<UL><LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ImageProgress::setValue(int)
</UL>
<BR>[Address Reference Count : 2]<UL><LI> abstractdirectionprogress.o(.constdata__ZTVN8touchgfx25AbstractDirectionProgressE)
<LI> abstractprogressindicator.o(.constdata__ZTVN8touchgfx25AbstractProgressIndicatorE)
</UL>
<P><STRONG><a name="[379]"></a>touchgfx::AbstractProgressIndicator::AbstractProgressIndicator()</STRONG> (Thumb, 294 bytes, Stack size 32 bytes, abstractprogressindicator.o(i._ZN8touchgfx25AbstractProgressIndicatorC1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = touchgfx::AbstractProgressIndicator::AbstractProgressIndicator() &rArr; touchgfx::Image::setBitmap(const touchgfx::Bitmap&) &rArr; touchgfx::Bitmap::getHeight() const
</UL>
<BR>[Calls]<UL><LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Container::add(touchgfx::Drawable&)
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Image::setBitmap(const touchgfx::Bitmap&)
</UL>
<BR>[Called By]<UL><LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDirectionProgress::AbstractDirectionProgress()
</UL>

<P><STRONG><a name="[4c1]"></a>touchgfx::AbstractProgressIndicator::AbstractProgressIndicator__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, abstractprogressindicator.o(i._ZN8touchgfx25AbstractProgressIndicatorC1Ev), UNUSED)

<P><STRONG><a name="[37b]"></a>touchgfx::lookupBilinearRenderVariant(const touchgfx::Bitmap&)</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, utils.o(i._ZN8touchgfx27lookupBilinearRenderVariantERKNS_6BitmapE))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = touchgfx::lookupBilinearRenderVariant(const touchgfx::Bitmap&) &rArr; touchgfx::Bitmap::getFormat() const
</UL>
<BR>[Calls]<UL><LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getFormat() const
<LI><a href="#[37d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::hasTransparentPixels() const
</UL>
<BR>[Called By]<UL><LI><a href="#[406]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextureMapper::drawQuad(const touchgfx::Rect&, unsigned short*, const float*, const float*, const float*, const float*, const float*) const
<LI><a href="#[401]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ScalableImage::drawQuad(const touchgfx::Rect&, unsigned short*, const float*, const float*, const float*, const float*, const float*) const
</UL>

<P><STRONG><a name="[37e]"></a>touchgfx::lookupNearestNeighborRenderVariant(const touchgfx::Bitmap&)</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, utils.o(i._ZN8touchgfx34lookupNearestNeighborRenderVariantERKNS_6BitmapE))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = touchgfx::lookupNearestNeighborRenderVariant(const touchgfx::Bitmap&) &rArr; touchgfx::Bitmap::getFormat() const
</UL>
<BR>[Calls]<UL><LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getFormat() const
<LI><a href="#[37d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::hasTransparentPixels() const
</UL>
<BR>[Called By]<UL><LI><a href="#[406]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextureMapper::drawQuad(const touchgfx::Rect&, unsigned short*, const float*, const float*, const float*, const float*, const float*) const
<LI><a href="#[401]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ScalableImage::drawQuad(const touchgfx::Rect&, unsigned short*, const float*, const float*, const float*, const float*, const float*) const
</UL>

<P><STRONG><a name="[2f4]"></a>touchgfx::Box::Box()</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, screen1viewbase.o(i._ZN8touchgfx3BoxC1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = touchgfx::Box::Box() &rArr; touchgfx::Widget::Widget__sub_object() &rArr; touchgfx::Drawable::Drawable__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[37f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Widget::Widget__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1ViewBase::Screen1ViewBase()
</UL>

<P><STRONG><a name="[4c2]"></a>touchgfx::Box::Box__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, screen1viewbase.o(i._ZN8touchgfx3BoxC1Ev), UNUSED)

<P><STRONG><a name="[e4]"></a>touchgfx::HAL::FlushCache()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hal.o(i._ZN8touchgfx3HAL10FlushCacheEv))
<BR>[Address Reference Count : 2]<UL><LI> touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
<LI> hal.o(.constdata__ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[1aa]"></a>touchgfx::HAL::beginFrame()</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, hal.o(i._ZN8touchgfx3HAL10beginFrameEv))
<BR><BR>[Called By]<UL><LI><a href="#[2e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXGeneratedHAL::beginFrame()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> hal.o(.constdata__ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[db]"></a>touchgfx::HAL::getDMAType()</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, hal.o(i._ZN8touchgfx3HAL10getDMATypeEv))
<BR>[Address Reference Count : 2]<UL><LI> touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
<LI> hal.o(.constdata__ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[1a7]"></a>touchgfx::HAL::initialize()</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, hal.o(i._ZN8touchgfx3HAL10initializeEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = touchgfx::HAL::initialize() &rArr; touchgfx::OSWrappers::initialize() &rArr; osSemaphoreNew &rArr; xQueueGenericSend &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GPIO::init()
<LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::OSWrappers::initialize()
</UL>
<BR>[Called By]<UL><LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXGeneratedHAL::initialize()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> hal.o(.constdata__ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[c7]"></a>touchgfx::HAL::getBlitCaps()</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, hal.o(i._ZN8touchgfx3HAL11getBlitCapsEv))
<BR>[Address Reference Count : 2]<UL><LI> touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
<LI> hal.o(.constdata__ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[cc]"></a>touchgfx::HAL::blitCopyGlyph(const unsigned char*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, touchgfx::colortype, unsigned char, touchgfx::BlitOperations, bool)</STRONG> (Thumb, 158 bytes, Stack size 72 bytes, hal.o(i._ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = touchgfx::HAL::blitCopyGlyph(const unsigned char*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, touchgfx::colortype, unsigned char, touchgfx::BlitOperations, bool) &rArr; touchgfx::HAL::getDstAddress(unsigned short, unsigned short, unsigned short*) const &rArr; touchgfx::HAL::getDstAddress(unsigned short, unsigned short, unsigned short*, unsigned short, touchgfx::Bitmap::BitmapFormat) const
</UL>
<BR>[Calls]<UL><LI><a href="#[382]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::getDstAddress(unsigned short, unsigned short, unsigned short*) const
<LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::lcd()
<LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::getClientFrameBuffer()
</UL>
<BR>[Address Reference Count : 2]<UL><LI> touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
<LI> hal.o(.constdata__ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[e3]"></a>touchgfx::HAL::InvalidateCache()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hal.o(i._ZN8touchgfx3HAL15InvalidateCacheEv))
<BR>[Address Reference Count : 2]<UL><LI> touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
<LI> hal.o(.constdata__ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[d1]"></a>touchgfx::HAL::backPorchExited()</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, hal.o(i._ZN8touchgfx3HAL15backPorchExitedEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::HAL::backPorchExited() &rArr; touchgfx::HAL::getClientFrameBuffer()
</UL>
<BR>[Calls]<UL><LI><a href="#[383]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GPIO::toggle(touchgfx::GPIO::GPIO_ID)
<LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::getClientFrameBuffer()
</UL>
<BR>[Address Reference Count : 2]<UL><LI> touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
<LI> hal.o(.constdata__ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[c3]"></a>touchgfx::HAL::lockFrameBuffer()</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, hal.o(i._ZN8touchgfx3HAL15lockFrameBufferEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = touchgfx::HAL::lockFrameBuffer() &rArr; touchgfx::OSWrappers::takeFrameBufferSemaphore() &rArr; osSemaphoreAcquire &rArr; xQueueSemaphoreTake &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::OSWrappers::takeFrameBufferSemaphore()
<LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::getClientFrameBuffer()
<LI><a href="#[384]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DMA_Interface::isDmaQueueEmpty()
</UL>
<BR>[Address Reference Count : 2]<UL><LI> touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
<LI> hal.o(.constdata__ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[cb]"></a>touchgfx::HAL::blitCopyARGB8888(const unsigned short*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, bool)</STRONG> (Thumb, 82 bytes, Stack size 96 bytes, hal.o(i._ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = touchgfx::HAL::blitCopyARGB8888(const unsigned short*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, bool)
</UL>
<BR>[Calls]<UL><LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::lcd()
</UL>
<BR>[Address Reference Count : 2]<UL><LI> touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
<LI> hal.o(.constdata__ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[1a8]"></a>touchgfx::HAL::flushFrameBuffer(const touchgfx::Rect&)</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, hal.o(i._ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE))
<BR><BR>[Called By]<UL><LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXGeneratedHAL::flushFrameBuffer(const touchgfx::Rect&)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> hal.o(.constdata__ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[27b]"></a>touchgfx::HAL::swapFrameBuffers()</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, hal.o(i._ZN8touchgfx3HAL16swapFrameBuffersEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::HAL::swapFrameBuffers() &rArr; touchgfx::HAL::getClientFrameBuffer()
</UL>
<BR>[Calls]<UL><LI><a href="#[383]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GPIO::toggle(touchgfx::GPIO::GPIO_ID)
<LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::getClientFrameBuffer()
</UL>
<BR>[Called By]<UL><LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_LineEventCallback
</UL>

<P><STRONG><a name="[c1]"></a>touchgfx::HAL::allowDMATransfers()</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, hal.o(i._ZN8touchgfx3HAL17allowDMATransfersEv))
<BR>[Address Reference Count : 2]<UL><LI> touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
<LI> hal.o(.constdata__ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[da]"></a>touchgfx::HAL::getTFTCurrentLine()</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, hal.o(i._ZN8touchgfx3HAL17getTFTCurrentLineEv))
<BR>[Address Reference Count : 2]<UL><LI> touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
<LI> hal.o(.constdata__ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[c4]"></a>touchgfx::HAL::unlockFrameBuffer()</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, hal.o(i._ZN8touchgfx3HAL17unlockFrameBufferEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = touchgfx::HAL::unlockFrameBuffer() &rArr; touchgfx::OSWrappers::giveFrameBufferSemaphore() &rArr; osSemaphoreRelease &rArr; xQueueGenericSend &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[32a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::OSWrappers::giveFrameBufferSemaphore()
</UL>
<BR>[Address Reference Count : 2]<UL><LI> touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
<LI> hal.o(.constdata__ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[351]"></a>touchgfx::HAL::setRenderingMethod(touchgfx::HAL::RenderingMethod)</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, hal.o(i._ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::HAL::setRenderingMethod(touchgfx::HAL::RenderingMethod)
</UL>
<BR>[Called By]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DMA_Interface::addToQueue(const touchgfx::BlitOp&)
</UL>

<P><STRONG><a name="[d7]"></a>touchgfx::HAL::setAnimationStorage(void*)</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, hal.o(i._ZN8touchgfx3HAL19setAnimationStorageEPv))
<BR>[Address Reference Count : 2]<UL><LI> touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
<LI> hal.o(.constdata__ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[d0]"></a>touchgfx::HAL::copyFBRegionToMemory(touchgfx::Rect, unsigned short*, unsigned)</STRONG> (Thumb, 126 bytes, Stack size 64 bytes, hal.o(i._ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtj))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = touchgfx::HAL::copyFBRegionToMemory(touchgfx::Rect, unsigned short*, unsigned) &rArr; touchgfx::HAL::getDstAddress(unsigned short, unsigned short, unsigned short*) const &rArr; touchgfx::HAL::getDstAddress(unsigned short, unsigned short, unsigned short*, unsigned short, touchgfx::Bitmap::BitmapFormat) const
</UL>
<BR>[Calls]<UL><LI><a href="#[382]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::getDstAddress(unsigned short, unsigned short, unsigned short*) const
<LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::lcd()
</UL>
<BR>[Address Reference Count : 2]<UL><LI> touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
<LI> hal.o(.constdata__ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[381]"></a>touchgfx::HAL::getClientFrameBuffer()</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, hal.o(i._ZN8touchgfx3HAL20getClientFrameBufferEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::HAL::getClientFrameBuffer()
</UL>
<BR>[Called By]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::blitFill(touchgfx::colortype, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, unsigned short, touchgfx::Bitmap::BitmapFormat, bool)
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::blitCopy(const unsigned short*, const unsigned char*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, bool, unsigned short, touchgfx::Bitmap::BitmapFormat, touchgfx::Bitmap::BitmapFormat, bool)
<LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::swapFrameBuffers()
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::lockFrameBuffer()
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::blitCopyGlyph(const unsigned char*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, touchgfx::colortype, unsigned char, touchgfx::BlitOperations, bool)
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::backPorchExited()
</UL>

<P><STRONG><a name="[cf]"></a>touchgfx::HAL::registerEventListener(touchgfx::UIEventListener&)</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, hal.o(i._ZN8touchgfx3HAL21registerEventListenerERNS_15UIEventListenerE))
<BR><BR>[Calls]<UL><LI><a href="#[385]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Gestures::registerEventListener(touchgfx::UIEventListener&)
</UL>
<BR>[Address Reference Count : 2]<UL><LI> touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
<LI> hal.o(.constdata__ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[bd]"></a>touchgfx::HAL::setDisplayOrientation(touchgfx::DisplayOrientation)</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, hal.o(i._ZN8touchgfx3HAL21setDisplayOrientationENS_18DisplayOrientationE))
<BR>[Address Reference Count : 2]<UL><LI> touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
<LI> hal.o(.constdata__ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[d8]"></a>touchgfx::HAL::configurePartialFrameBuffer(unsigned short, unsigned short, unsigned short, unsigned short)</STRONG> (Thumb, 130 bytes, Stack size 40 bytes, hal.o(i._ZN8touchgfx3HAL27configurePartialFrameBufferEtttt))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = touchgfx::HAL::configurePartialFrameBuffer(unsigned short, unsigned short, unsigned short, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::lcd()
</UL>
<BR>[Address Reference Count : 2]<UL><LI> touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
<LI> hal.o(.constdata__ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[d6]"></a>touchgfx::HAL::setFrameBufferStartAddresses(void*, void*, void*)</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, hal.o(i._ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::HAL::setFrameBufferStartAddresses(void*, void*, void*)
</UL>
<BR>[Address Reference Count : 2]<UL><LI> touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
<LI> hal.o(.constdata__ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[e2]"></a>touchgfx::HAL::performDisplayOrientationChange()</STRONG> (Thumb, 58 bytes, Stack size 4 bytes, hal.o(i._ZN8touchgfx3HAL31performDisplayOrientationChangeEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = touchgfx::HAL::performDisplayOrientationChange()
</UL>
<BR>[Address Reference Count : 2]<UL><LI> touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
<LI> hal.o(.constdata__ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[3a4]"></a>touchgfx::HAL::lockFrameBufferForRenderingMethod(touchgfx::HAL::RenderingMethod)</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, hal.o(i._ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::HAL::lockFrameBufferForRenderingMethod(touchgfx::HAL::RenderingMethod)
</UL>
<BR>[Called By]<UL><LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Canvas::render(unsigned char)
</UL>

<P><STRONG><a name="[31d]"></a>touchgfx::HAL::lcd()</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, hal.o(i._ZN8touchgfx3HAL3lcdEv))
<BR><BR>[Called By]<UL><LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::blitFill(touchgfx::colortype, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, bool)
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::blitCopy(const unsigned short*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, bool, bool)
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::configurePartialFrameBuffer(unsigned short, unsigned short, unsigned short, unsigned short)
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::copyFBRegionToMemory(touchgfx::Rect, unsigned short*, unsigned)
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::blitCopyARGB8888(const unsigned short*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, bool)
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::blitCopyGlyph(const unsigned char*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, touchgfx::colortype, unsigned char, touchgfx::BlitOperations, bool)
<LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplicationBase::FrontendApplicationBase(Model&, FrontendHeap&)
<LI><a href="#[382]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::getDstAddress(unsigned short, unsigned short, unsigned short*) const
</UL>

<P><STRONG><a name="[dc]"></a>touchgfx::HAL::tick()</STRONG> (Thumb, 380 bytes, Stack size 32 bytes, hal.o(i._ZN8touchgfx3HAL4tickEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = touchgfx::HAL::tick()
</UL>
<BR>[Calls]<UL><LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GPIO::clear(touchgfx::GPIO::GPIO_ID)
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GPIO::set(touchgfx::GPIO::GPIO_ID)
<LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::getInstance()
<LI><a href="#[386]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Gestures::tick()
</UL>
<BR>[Address Reference Count : 2]<UL><LI> touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
<LI> hal.o(.constdata__ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[e0]"></a>touchgfx::HAL::touch(int, int)</STRONG> (Thumb, 128 bytes, Stack size 32 bytes, hal.o(i._ZN8touchgfx3HAL5touchEii))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = touchgfx::HAL::touch(int, int) &rArr; touchgfx::TouchCalibration::translatePoint(touchgfx::Point&) &rArr; touchgfx::TouchCalibration::muldiv(int, int, int, int, int&) &rArr; touchgfx::TouchCalibration::muldivu(unsigned, unsigned, unsigned, unsigned, unsigned, unsigned&) &rArr;  touchgfx::TouchCalibration::muldivu(unsigned, unsigned, unsigned, unsigned, unsigned, unsigned&) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[389]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Gestures::registerClickEvent(touchgfx::ClickEvent::ClickEventType, unsigned short, unsigned short)
<LI><a href="#[388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Gestures::registerDragEvent(unsigned short, unsigned short, unsigned short, unsigned short)
<LI><a href="#[387]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformFrameBufferToDisplay(short&, short&)
<LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TouchCalibration::translatePoint(touchgfx::Point&)
</UL>
<BR>[Address Reference Count : 2]<UL><LI> touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
<LI> hal.o(.constdata__ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[e1]"></a>touchgfx::HAL::noTouch()</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, hal.o(i._ZN8touchgfx3HAL7noTouchEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = touchgfx::HAL::noTouch() &rArr; touchgfx::Gestures::registerClickEvent(touchgfx::ClickEvent::ClickEventType, unsigned short, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[389]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Gestures::registerClickEvent(touchgfx::ClickEvent::ClickEventType, unsigned short, unsigned short)
</UL>
<BR>[Address Reference Count : 2]<UL><LI> touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
<LI> hal.o(.constdata__ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[c8]"></a>touchgfx::HAL::blitCopy(const unsigned short*, const unsigned char*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, bool, unsigned short, touchgfx::Bitmap::BitmapFormat, touchgfx::Bitmap::BitmapFormat, bool)</STRONG> (Thumb, 192 bytes, Stack size 96 bytes, hal.o(i._ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = touchgfx::HAL::blitCopy(const unsigned short*, const unsigned char*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, bool, unsigned short, touchgfx::Bitmap::BitmapFormat, touchgfx::Bitmap::BitmapFormat, bool) &rArr; touchgfx::HAL::getDstAddress(unsigned short, unsigned short, unsigned short*, unsigned short, touchgfx::Bitmap::BitmapFormat) const
</UL>
<BR>[Calls]<UL><LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::getDstAddress(unsigned short, unsigned short, unsigned short*, unsigned short, touchgfx::Bitmap::BitmapFormat) const
<LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::getClientFrameBuffer()
</UL>
<BR>[Address Reference Count : 2]<UL><LI> touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
<LI> hal.o(.constdata__ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[ca]"></a>touchgfx::HAL::blitCopy(const unsigned short*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, bool, bool)</STRONG> (Thumb, 72 bytes, Stack size 96 bytes, hal.o(i._ZN8touchgfx3HAL8blitCopyEPKtttttthbb))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = touchgfx::HAL::blitCopy(const unsigned short*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, bool, bool)
</UL>
<BR>[Calls]<UL><LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::lcd()
</UL>
<BR>[Address Reference Count : 2]<UL><LI> touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
<LI> hal.o(.constdata__ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[c9]"></a>touchgfx::HAL::blitCopy(const unsigned short*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, bool, unsigned short, touchgfx::Bitmap::BitmapFormat, touchgfx::Bitmap::BitmapFormat, bool)</STRONG> (Thumb, 46 bytes, Stack size 80 bytes, hal.o(i._ZN8touchgfx3HAL8blitCopyEPKtttttthbtNS_6Bitmap12BitmapFormatES4_b))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = touchgfx::HAL::blitCopy(const unsigned short*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, bool, unsigned short, touchgfx::Bitmap::BitmapFormat, touchgfx::Bitmap::BitmapFormat, bool)
</UL>
<BR>[Address Reference Count : 2]<UL><LI> touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
<LI> hal.o(.constdata__ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[ce]"></a>touchgfx::HAL::blitFill(touchgfx::colortype, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, bool)</STRONG> (Thumb, 70 bytes, Stack size 64 bytes, hal.o(i._ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = touchgfx::HAL::blitFill(touchgfx::colortype, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, bool)
</UL>
<BR>[Calls]<UL><LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::lcd()
</UL>
<BR>[Address Reference Count : 2]<UL><LI> touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
<LI> hal.o(.constdata__ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[cd]"></a>touchgfx::HAL::blitFill(touchgfx::colortype, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, unsigned short, touchgfx::Bitmap::BitmapFormat, bool)</STRONG> (Thumb, 142 bytes, Stack size 96 bytes, hal.o(i._ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = touchgfx::HAL::blitFill(touchgfx::colortype, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, unsigned short, touchgfx::Bitmap::BitmapFormat, bool) &rArr; touchgfx::HAL::getDstAddress(unsigned short, unsigned short, unsigned short*, unsigned short, touchgfx::Bitmap::BitmapFormat) const
</UL>
<BR>[Calls]<UL><LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::getDstAddress(unsigned short, unsigned short, unsigned short*, unsigned short, touchgfx::Bitmap::BitmapFormat) const
<LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::getClientFrameBuffer()
</UL>
<BR>[Address Reference Count : 2]<UL><LI> touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
<LI> hal.o(.constdata__ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[1ab]"></a>touchgfx::HAL::endFrame()</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, hal.o(i._ZN8touchgfx3HAL8endFrameEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::HAL::endFrame()
</UL>
<BR>[Called By]<UL><LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXGeneratedHAL::endFrame()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> hal.o(.constdata__ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[c2]"></a>touchgfx::HAL::flushDMA()</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, hal.o(i._ZN8touchgfx3HAL8flushDMAEv))
<BR>[Address Reference Count : 2]<UL><LI> touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
<LI> hal.o(.constdata__ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[1a9]"></a>touchgfx::HAL::blockCopy(void*, const void*, unsigned)</STRONG> (Thumb, 154 bytes, Stack size 0 bytes, hal.o(i._ZN8touchgfx3HAL9blockCopyEPvPKvj))
<BR><BR>[Called By]<UL><LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXGeneratedHAL::blockCopy(void*, const void*, unsigned)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> hal.o(.constdata__ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[d9]"></a>touchgfx::HAL::taskDelay(unsigned short)</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, hal.o(i._ZN8touchgfx3HAL9taskDelayEt))
<BR>[Address Reference Count : 2]<UL><LI> touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
<LI> hal.o(.constdata__ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[bf]"></a>touchgfx::HAL::taskEntry()</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, hal.o(i._ZN8touchgfx3HAL9taskEntryEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = touchgfx::HAL::taskEntry() &rArr; touchgfx::OSWrappers::waitForVSync() &rArr; osMessageQueueGet &rArr; xQueueReceive &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::OSWrappers::waitForVSync()
</UL>
<BR>[Called By]<UL><LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx_taskEntry
</UL>
<BR>[Address Reference Count : 2]<UL><LI> touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
<LI> hal.o(.constdata__ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[423]"></a>touchgfx::HAL::HAL__sub_object(touchgfx::DMA_Interface&, touchgfx::LCD&, touchgfx::TouchController&, unsigned short, unsigned short)</STRONG> (Thumb, 160 bytes, Stack size 16 bytes, touchgfxconfiguration.o(i._ZN8touchgfx3HALC2ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::HAL::HAL__sub_object(touchgfx::DMA_Interface&, touchgfx::LCD&, touchgfx::TouchController&, unsigned short, unsigned short)
</UL>
<BR>[Called By]<UL><LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___25_TouchGFXConfiguration_cpp_f5abfd34
</UL>

<P><STRONG><a name="[38b]"></a>touchgfx::LCD::drawString(touchgfx::Rect, const touchgfx::Rect&, const touchgfx::LCD::StringVisuals&, const unsigned short*, ...)</STRONG> (Thumb, 28 bytes, Stack size 32 bytes, texts.o(i._ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz))
<BR><BR>[Stack]<UL><LI>Max Depth = 800<LI>Call Chain = touchgfx::LCD::drawString(touchgfx::Rect, const touchgfx::Rect&, const touchgfx::LCD::StringVisuals&, const unsigned short*, ...) &rArr; touchgfx::LCD::drawStringLTR(const touchgfx::Rect&, const touchgfx::Rect&, const touchgfx::LCD::StringVisuals&, const unsigned short*, std::__va_list) &rArr; touchgfx::LCD::drawStringInternal(unsigned short*, const touchgfx::Rect*, short, short, const touchgfx::Rect&, const touchgfx::LCD::StringVisuals*, unsigned char, touchgfx::TextProvider&, int, bool) &rArr; touchgfx::TextProvider::getNextLigature(unsigned char, const touchgfx::Font*, const touchgfx::GlyphNode*&, const unsigned char*&, unsigned char&) &rArr; touchgfx::TextProvider::getNextLigature(unsigned char) &rArr; touchgfx::TextProvider::substituteGlyphs() &rArr; touchgfx::TextProvider::applyGsubRules(const unsigned short*, unsigned short) &rArr; touchgfx::TextProvider::replaceInputCharacters(unsigned short, unsigned short, const unsigned short*) &rArr; touchgfx::TextProvider::fillInputBuffer()
</UL>
<BR>[Calls]<UL><LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::drawStringLTR(const touchgfx::Rect&, const touchgfx::Rect&, const touchgfx::LCD::StringVisuals&, const unsigned short*, std::__va_list)
</UL>
<BR>[Called By]<UL><LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::draw(const touchgfx::Rect&) const
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithWildcardBase::draw(const touchgfx::Rect&) const
</UL>

<P><STRONG><a name="[38d]"></a>touchgfx::LCD::rotateRect(touchgfx::Rect&, const touchgfx::Rect&, touchgfx::TextRotation)</STRONG> (Thumb, 162 bytes, Stack size 40 bytes, lcd.o(i._ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = touchgfx::LCD::rotateRect(touchgfx::Rect&, const touchgfx::Rect&, touchgfx::TextRotation)
</UL>
<BR>[Calls]<UL><LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_memcpy4_8
</UL>
<BR>[Called By]<UL><LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::drawStringLTR(const touchgfx::Rect&, const touchgfx::Rect&, const touchgfx::LCD::StringVisuals&, const unsigned short*, std::__va_list)
</UL>

<P><STRONG><a name="[38e]"></a>touchgfx::LCD::getNumLines(touchgfx::TextProvider&, touchgfx::WideTextAction, unsigned char, const touchgfx::Font*, short)</STRONG> (Thumb, 110 bytes, Stack size 80 bytes, lcd.o(i._ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = touchgfx::LCD::getNumLines(touchgfx::TextProvider&, touchgfx::WideTextAction, unsigned char, const touchgfx::Font*, short) &rArr; touchgfx::LCD::WideTextInternalStruct::scanStringLengthForLine() &rArr; touchgfx::TextProvider::getNextLigature(unsigned char, const touchgfx::Font*, const touchgfx::GlyphNode*&) &rArr; touchgfx::TextProvider::getNextLigature(unsigned char) &rArr; touchgfx::TextProvider::substituteGlyphs() &rArr; touchgfx::TextProvider::applyGsubRules(const unsigned short*, unsigned short) &rArr; touchgfx::TextProvider::replaceInputCharacters(unsigned short, unsigned short, const unsigned short*) &rArr; touchgfx::TextProvider::fillInputBuffer()
</UL>
<BR>[Calls]<UL><LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::getNextChar()
<LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::WideTextInternalStruct::WideTextInternalStruct(touchgfx::TextProvider&, unsigned short, unsigned short, unsigned char, const touchgfx::Font*, short, touchgfx::WideTextAction)
<LI><a href="#[390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::WideTextInternalStruct::scanStringLengthForLine()
</UL>
<BR>[Called By]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::calculateTextHeight(const unsigned short*, ...) const
</UL>

<P><STRONG><a name="[391]"></a>touchgfx::LCD::stringWidth(touchgfx::TextProvider&, const touchgfx::Font&, int, unsigned char)</STRONG> (Thumb, 124 bytes, Stack size 56 bytes, lcd.o(i._ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = touchgfx::LCD::stringWidth(touchgfx::TextProvider&, const touchgfx::Font&, int, unsigned char) &rArr; touchgfx::TextProvider::getNextLigature(unsigned char, const touchgfx::Font*, const touchgfx::GlyphNode*&) &rArr; touchgfx::TextProvider::getNextLigature(unsigned char) &rArr; touchgfx::TextProvider::substituteGlyphs() &rArr; touchgfx::TextProvider::applyGsubRules(const unsigned short*, unsigned short) &rArr; touchgfx::TextProvider::replaceInputCharacters(unsigned short, unsigned short, const unsigned short*) &rArr; touchgfx::TextProvider::fillInputBuffer()
</UL>
<BR>[Calls]<UL><LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::getNextLigature(unsigned char, const touchgfx::Font*, const touchgfx::GlyphNode*&)
</UL>
<BR>[Called By]<UL><LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::calculateBoundingArea() const
</UL>

<P><STRONG><a name="[38c]"></a>touchgfx::LCD::drawStringLTR(const touchgfx::Rect&, const touchgfx::Rect&, const touchgfx::LCD::StringVisuals&, const unsigned short*, std::__va_list)</STRONG> (Thumb, 754 bytes, Stack size 440 bytes, lcd.o(i._ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list))
<BR><BR>[Stack]<UL><LI>Max Depth = 768<LI>Call Chain = touchgfx::LCD::drawStringLTR(const touchgfx::Rect&, const touchgfx::Rect&, const touchgfx::LCD::StringVisuals&, const unsigned short*, std::__va_list) &rArr; touchgfx::LCD::drawStringInternal(unsigned short*, const touchgfx::Rect*, short, short, const touchgfx::Rect&, const touchgfx::LCD::StringVisuals*, unsigned char, touchgfx::TextProvider&, int, bool) &rArr; touchgfx::TextProvider::getNextLigature(unsigned char, const touchgfx::Font*, const touchgfx::GlyphNode*&, const unsigned char*&, unsigned char&) &rArr; touchgfx::TextProvider::getNextLigature(unsigned char) &rArr; touchgfx::TextProvider::substituteGlyphs() &rArr; touchgfx::TextProvider::applyGsubRules(const unsigned short*, unsigned short) &rArr; touchgfx::TextProvider::replaceInputCharacters(unsigned short, unsigned short, const unsigned short*) &rArr; touchgfx::TextProvider::fillInputBuffer()
</UL>
<BR>[Calls]<UL><LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::TextProvider()
<LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::getNextLigature(unsigned char)
<LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::initialize(const unsigned short*, std::__va_list, const unsigned short*, const touchgfx::FontContextualFormsTable*)
<LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::getNextChar()
<LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_memcpy4_8
<LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::WideTextInternalStruct::WideTextInternalStruct(touchgfx::TextProvider&, unsigned short, unsigned short, unsigned char, const touchgfx::Font*, short, touchgfx::WideTextAction)
<LI><a href="#[390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::WideTextInternalStruct::scanStringLengthForLine()
<LI><a href="#[392]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::drawStringInternal(unsigned short*, const touchgfx::Rect*, short, short, const touchgfx::Rect&, const touchgfx::LCD::StringVisuals*, unsigned char, touchgfx::TextProvider&, int, bool)
<LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::rotateRect(touchgfx::Rect&, const touchgfx::Rect&, touchgfx::TextRotation)
<LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::getNextLigature(unsigned char, const touchgfx::Font*, const touchgfx::GlyphNode*&)
</UL>
<BR>[Called By]<UL><LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::drawString(touchgfx::Rect, const touchgfx::Rect&, const touchgfx::LCD::StringVisuals&, const unsigned short*, ...)
</UL>

<P><STRONG><a name="[3df]"></a>touchgfx::LCD::getAlphaFromA4(const unsigned short*, unsigned)</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx3LCD14getAlphaFromA4EPKtj))
<BR><BR>[Called By]<UL><LI><a href="#[3e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_A4_BilinearInterpolation_NoGA::writePixelOnEdge(unsigned short*, const unsigned short*, short, short, short, int, int, unsigned char, unsigned char) const
<LI><a href="#[3e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_A4_BilinearInterpolation_GA::writePixelOnEdge(unsigned short*, const unsigned short*, short, short, short, int, int, unsigned char, unsigned char, unsigned char) const
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_A4_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_A4_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
</UL>

<P><STRONG><a name="[392]"></a>touchgfx::LCD::drawStringInternal(unsigned short*, const touchgfx::Rect*, short, short, const touchgfx::Rect&, const touchgfx::LCD::StringVisuals*, unsigned char, touchgfx::TextProvider&, int, bool)</STRONG> (Thumb, 650 bytes, Stack size 144 bytes, lcd.o(i._ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = touchgfx::LCD::drawStringInternal(unsigned short*, const touchgfx::Rect*, short, short, const touchgfx::Rect&, const touchgfx::LCD::StringVisuals*, unsigned char, touchgfx::TextProvider&, int, bool) &rArr; touchgfx::TextProvider::getNextLigature(unsigned char, const touchgfx::Font*, const touchgfx::GlyphNode*&, const unsigned char*&, unsigned char&) &rArr; touchgfx::TextProvider::getNextLigature(unsigned char) &rArr; touchgfx::TextProvider::substituteGlyphs() &rArr; touchgfx::TextProvider::applyGsubRules(const unsigned short*, unsigned short) &rArr; touchgfx::TextProvider::replaceInputCharacters(unsigned short, unsigned short, const unsigned short*) &rArr; touchgfx::TextProvider::fillInputBuffer()
</UL>
<BR>[Calls]<UL><LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::getNextLigature(unsigned char)
<LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_memcpy4_8
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::getNextLigature(unsigned char, const touchgfx::Font*, const touchgfx::GlyphNode*&, const unsigned char*&, unsigned char&)
</UL>
<BR>[Called By]<UL><LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::drawStringLTR(const touchgfx::Rect&, const touchgfx::Rect&, const touchgfx::LCD::StringVisuals&, const unsigned short*, std::__va_list)
</UL>

<P><STRONG><a name="[1e5]"></a>touchgfx::LCD::drawTextureMapQuad(const touchgfx::DrawingSurface&, const touchgfx::Point3D*, const touchgfx::TextureSurface&, const touchgfx::Rect&, const touchgfx::Rect&, unsigned short, unsigned char, unsigned short)</STRONG> (Thumb, 144 bytes, Stack size 136 bytes, lcd.o(i._ZN8touchgfx3LCD18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = touchgfx::LCD::drawTextureMapQuad(const touchgfx::DrawingSurface&, const touchgfx::Point3D*, const touchgfx::TextureSurface&, const touchgfx::Rect&, const touchgfx::Rect&, unsigned short, unsigned char, unsigned short)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bppE)
</UL>
<P><STRONG><a name="[390]"></a>touchgfx::LCD::WideTextInternalStruct::scanStringLengthForLine()</STRONG> (Thumb, 606 bytes, Stack size 56 bytes, lcd.o(i._ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = touchgfx::LCD::WideTextInternalStruct::scanStringLengthForLine() &rArr; touchgfx::TextProvider::getNextLigature(unsigned char, const touchgfx::Font*, const touchgfx::GlyphNode*&) &rArr; touchgfx::TextProvider::getNextLigature(unsigned char) &rArr; touchgfx::TextProvider::substituteGlyphs() &rArr; touchgfx::TextProvider::applyGsubRules(const unsigned short*, unsigned short) &rArr; touchgfx::TextProvider::replaceInputCharacters(unsigned short, unsigned short, const unsigned short*) &rArr; touchgfx::TextProvider::fillInputBuffer()
</UL>
<BR>[Calls]<UL><LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::getNextLigature(unsigned char, const touchgfx::Font*, const touchgfx::GlyphNode*&)
</UL>
<BR>[Called By]<UL><LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::drawStringLTR(const touchgfx::Rect&, const touchgfx::Rect&, const touchgfx::LCD::StringVisuals&, const unsigned short*, std::__va_list)
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::calculateBoundingArea() const
<LI><a href="#[38e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::getNumLines(touchgfx::TextProvider&, touchgfx::WideTextAction, unsigned char, const touchgfx::Font*, short)
</UL>

<P><STRONG><a name="[38f]"></a>touchgfx::LCD::WideTextInternalStruct::WideTextInternalStruct(touchgfx::TextProvider&, unsigned short, unsigned short, unsigned char, const touchgfx::Font*, short, touchgfx::WideTextAction)</STRONG> (Thumb, 142 bytes, Stack size 24 bytes, lcd.o(i._ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = touchgfx::LCD::WideTextInternalStruct::WideTextInternalStruct(touchgfx::TextProvider&, unsigned short, unsigned short, unsigned char, const touchgfx::Font*, short, touchgfx::WideTextAction)
</UL>
<BR>[Called By]<UL><LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::drawStringLTR(const touchgfx::Rect&, const touchgfx::Rect&, const touchgfx::LCD::StringVisuals&, const unsigned short*, std::__va_list)
<LI><a href="#[38e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::getNumLines(touchgfx::TextProvider&, touchgfx::WideTextAction, unsigned char, const touchgfx::Font*, short)
</UL>

<P><STRONG><a name="[4c3]"></a>touchgfx::LCD::WideTextInternalStruct::WideTextInternalStruct__sub_object(touchgfx::TextProvider&, unsigned short, unsigned short, unsigned char, const touchgfx::Font*, short, touchgfx::WideTextAction)</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, lcd.o(i._ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE), UNUSED)

<P><STRONG><a name="[1e7]"></a>touchgfx::LCD::drawTextureMapScanLine(const touchgfx::DrawingSurface&, const touchgfx::Gradients&, const touchgfx::Edge*, const touchgfx::Edge*, const touchgfx::TextureSurface&, const touchgfx::Rect&, const touchgfx::Rect&, unsigned short, unsigned char, unsigned short)</STRONG> (Thumb, 448 bytes, Stack size 96 bytes, lcd.o(i._ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = touchgfx::LCD::drawTextureMapScanLine(const touchgfx::DrawingSurface&, const touchgfx::Gradients&, const touchgfx::Edge*, const touchgfx::Edge*, const touchgfx::TextureSurface&, const touchgfx::Rect&, const touchgfx::Rect&, unsigned short, unsigned char, unsigned short)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bppE)
</UL>
<P><STRONG><a name="[1e4]"></a>touchgfx::LCD::drawTextureMapTriangle(const touchgfx::DrawingSurface&, const touchgfx::Point3D*, const touchgfx::TextureSurface&, const touchgfx::Rect&, const touchgfx::Rect&, unsigned short, unsigned char, unsigned short)</STRONG> (Thumb, 932 bytes, Stack size 384 bytes, lcd.o(i._ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht))
<BR><BR>[Stack]<UL><LI>Max Depth = 424<LI>Call Chain = touchgfx::LCD::drawTextureMapTriangle(const touchgfx::DrawingSurface&, const touchgfx::Point3D*, const touchgfx::TextureSurface&, const touchgfx::Rect&, const touchgfx::Rect&, unsigned short, unsigned char, unsigned short) &rArr; touchgfx::Edge::Edge(const touchgfx::Gradients&, const touchgfx::Point3D*, int, int)
</UL>
<BR>[Calls]<UL><LI><a href="#[393]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Gradients::Gradients(const touchgfx::Point3D*)
<LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Edge::Edge(const touchgfx::Gradients&, const touchgfx::Point3D*, int, int)
<LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Edge::step()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bppE)
</UL>
<P><STRONG><a name="[3dd]"></a>touchgfx::LCD::DrawTextureMapScanLineBase::drawTextureMapNextSubdivision(float&, float&, float&, float&, float&, float&, float, float&, float, float&, float, int, int&, int&, int&, int&)</STRONG> (Thumb, 228 bytes, Stack size 32 bytes, lcd16bpp.o(i._ZN8touchgfx3LCD26DrawTextureMapScanLineBase29drawTextureMapNextSubdivisionERfS2_S2_S2_S2_S2_fS2_fS2_fiRiS3_S3_S3_))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = touchgfx::LCD::DrawTextureMapScanLineBase::drawTextureMapNextSubdivision(float&, float&, float&, float&, float&, float&, float, float&, float, float&, float, int, int&, int&, int&, int&)
</UL>
<BR>[Called By]<UL><LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_A4_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_A4_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_A4_NearestNeighbor_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_A4_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
</UL>

<P><STRONG><a name="[3f5]"></a>touchgfx::LCD::realX(const touchgfx::Rect&, short, short, touchgfx::TextRotation)</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, lcd.o(i._ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::LCD::realX(const touchgfx::Rect&, short, short, touchgfx::TextRotation)
</UL>
<BR>[Called By]<UL><LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::drawGlyph(unsigned short*, touchgfx::Rect, short, short, unsigned short, unsigned short, const touchgfx::Rect&, const touchgfx::GlyphNode*, const unsigned char*, unsigned char, touchgfx::colortype, unsigned char, unsigned char, touchgfx::TextRotation)
</UL>

<P><STRONG><a name="[3f6]"></a>touchgfx::LCD::realY(const touchgfx::Rect&, short, short, touchgfx::TextRotation)</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, lcd.o(i._ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::LCD::realY(const touchgfx::Rect&, short, short, touchgfx::TextRotation)
</UL>
<BR>[Called By]<UL><LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::drawGlyph(unsigned short*, touchgfx::Rect, short, short, unsigned short, unsigned short, const touchgfx::Rect&, const touchgfx::GlyphNode*, const unsigned char*, unsigned char, touchgfx::colortype, unsigned char, unsigned char, touchgfx::TextRotation)
</UL>

<P><STRONG><a name="[395]"></a>touchgfx::Edge::step()</STRONG> (Thumb, 136 bytes, Stack size 0 bytes, lcd.o(i._ZN8touchgfx4Edge4stepEv))
<BR><BR>[Called By]<UL><LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::drawTextureMapTriangle(const touchgfx::DrawingSurface&, const touchgfx::Point3D*, const touchgfx::TextureSurface&, const touchgfx::Rect&, const touchgfx::Rect&, unsigned short, unsigned char, unsigned short)
</UL>

<P><STRONG><a name="[394]"></a>touchgfx::Edge::Edge(const touchgfx::Gradients&, const touchgfx::Point3D*, int, int)</STRONG> (Thumb, 548 bytes, Stack size 40 bytes, texturemaptypes.o(i._ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = touchgfx::Edge::Edge(const touchgfx::Gradients&, const touchgfx::Point3D*, int, int)
</UL>
<BR>[Called By]<UL><LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::drawTextureMapTriangle(const touchgfx::DrawingSurface&, const touchgfx::Point3D*, const touchgfx::TextureSurface&, const touchgfx::Rect&, const touchgfx::Rect&, unsigned short, unsigned char, unsigned short)
</UL>

<P><STRONG><a name="[4c4]"></a>touchgfx::Edge::Edge__sub_object(const touchgfx::Gradients&, const touchgfx::Point3D*, int, int)</STRONG> (Thumb, 0 bytes, Stack size 40 bytes, texturemaptypes.o(i._ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii), UNUSED)

<P><STRONG><a name="[27c]"></a>touchgfx::GPIO::set(touchgfx::GPIO::GPIO_ID)</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, touchgfxgpio.o(i._ZN8touchgfx4GPIO3setENS0_7GPIO_IDE))
<BR><BR>[Called By]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::tick()
<LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_LineEventCallback
</UL>

<P><STRONG><a name="[380]"></a>touchgfx::GPIO::init()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, touchgfxgpio.o(i._ZN8touchgfx4GPIO4initEv))
<BR><BR>[Called By]<UL><LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::initialize()
</UL>

<P><STRONG><a name="[27d]"></a>touchgfx::GPIO::clear(touchgfx::GPIO::GPIO_ID)</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, touchgfxgpio.o(i._ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE))
<BR><BR>[Called By]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::tick()
<LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_LineEventCallback
</UL>

<P><STRONG><a name="[383]"></a>touchgfx::GPIO::toggle(touchgfx::GPIO::GPIO_ID)</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, touchgfxgpio.o(i._ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE))
<BR><BR>[Called By]<UL><LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::swapFrameBuffers()
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::backPorchExited()
</UL>

<P><STRONG><a name="[331]"></a>touchgfx::Rect::expandToFit(const touchgfx::Rect&)</STRONG> (Thumb, 140 bytes, Stack size 24 bytes, application.o(i._ZN8touchgfx4Rect11expandToFitERKS0_))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = touchgfx::Rect::expandToFit(const touchgfx::Rect&)
</UL>
<BR>[Called By]<UL><LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::invalidateArea(touchgfx::Rect)
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GraphElementLine::invalidateGraphPointAt(short)
</UL>

<P><STRONG><a name="[3fb]"></a>touchgfx::Rect::Rect(short, short, short, short)</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, screen1viewbase.o(i._ZN8touchgfx4RectC1Essss))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::Rect::Rect(short, short, short, short)
</UL>
<BR>[Called By]<UL><LI><a href="#[3fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::BoundingArea::BoundingArea()
</UL>

<P><STRONG><a name="[4c5]"></a>touchgfx::Rect::Rect__sub_object(short, short, short, short)</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, screen1viewbase.o(i._ZN8touchgfx4RectC1Essss), UNUSED)

<P><STRONG><a name="[83]"></a>touchgfx::Rect::Rect()</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, application.o(i._ZN8touchgfx4RectC1Ev))
<BR><BR>[Called By]<UL><LI><a href="#[3ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::Drawable__sub_object()
</UL>
<BR>[Address Reference Count : 2]<UL><LI> application.o(i._ZN8touchgfx11Application15drawCachedAreasEv)
<LI> application.o(i._ZN8touchgfx11ApplicationC1Ev)
</UL>
<P><STRONG><a name="[4c6]"></a>touchgfx::Rect::Rect__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, application.o(i._ZN8touchgfx4RectC1Ev), UNUSED)

<P><STRONG><a name="[36d]"></a>touchgfx::Rect::operator &=(const touchgfx::Rect&)</STRONG> (Thumb, 120 bytes, Stack size 16 bytes, lcd16bpp.o(i._ZN8touchgfx4RectaNERKS0_))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::Rect::operator &=(const touchgfx::Rect&)
</UL>
<BR>[Called By]<UL><LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::copyFrameBufferRegionToMemory(const touchgfx::Rect&, const touchgfx::Rect&, unsigned char*, short, short)
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::drawPartialBitmap(const touchgfx::Bitmap&, short, short, const touchgfx::Rect&, unsigned char, bool)
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidateRect(touchgfx::Rect&) const
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::getVisibleRect(touchgfx::Rect&) const
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GraphElementLine::drawCanvasWidget(const touchgfx::Rect&) const
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GraphElementLine::invalidateGraphPointAt(short)
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CanvasWidget::draw(const touchgfx::Rect&) const
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CanvasWidget::invalidate() const
</UL>

<P><STRONG><a name="[310]"></a>touchgfx::View&lang;Screen1Presenter&rang;::~View()</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, screen1viewbase.o(i._ZN8touchgfx4ViewI16Screen1PresenterED1Ev))
<BR><BR>[Called By]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1ViewBase::~Screen1ViewBase()
</UL>

<P><STRONG><a name="[4c7]"></a>touchgfx::View&lang;Screen1Presenter&rang;::~View__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, screen1viewbase.o(i._ZN8touchgfx4ViewI16Screen1PresenterED1Ev), UNUSED)

<P><STRONG><a name="[3bf]"></a>touchgfx::clzu(unsigned)</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, utils.o(i._ZN8touchgfx4clzuEj))
<BR><BR>[Called By]<UL><LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::muldivu(unsigned, unsigned, unsigned, unsigned&)
</UL>

<P><STRONG><a name="[303]"></a>touchgfx::Color::getColorFromRGB(unsigned char, unsigned char, unsigned char)</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, screen1viewbase.o(i._ZN8touchgfx5Color15getColorFromRGBEhhh))
<BR><BR>[Called By]<UL><LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1ViewBase::Screen1ViewBase()
</UL>

<P><STRONG><a name="[171]"></a>touchgfx::Image::setBitmap(const touchgfx::Bitmap&)</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, image.o(i._ZN8touchgfx5Image9setBitmapERKNS_6BitmapE))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = touchgfx::Image::setBitmap(const touchgfx::Bitmap&) &rArr; touchgfx::Bitmap::getHeight() const
</UL>
<BR>[Calls]<UL><LI><a href="#[32f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getHeight() const
<LI><a href="#[32e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getWidth() const
</UL>
<BR>[Called By]<UL><LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1ViewBase::Screen1ViewBase()
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractProgressIndicator::setBackground(const touchgfx::Bitmap&)
<LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextureMapper::TextureMapper(const touchgfx::Bitmap&)
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextureMapper::setBitmap(const touchgfx::Bitmap&)
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ScalableImage::ScalableImage(const touchgfx::Bitmap&)
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ImageProgress::ImageProgress()
<LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Image::Image(const touchgfx::Bitmap&)
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TiledImage::setBitmap(const touchgfx::Bitmap&)
<LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractProgressIndicator::AbstractProgressIndicator()
</UL>
<BR>[Address Reference Count : 2]<UL><LI> image.o(.constdata__ZTVN8touchgfx5ImageE)
<LI> scalableimage.o(.constdata__ZTVN8touchgfx13ScalableImageE)
</UL>
<P><STRONG><a name="[2f5]"></a>touchgfx::Image::Image(const touchgfx::Bitmap&)</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, screen1viewbase.o(i._ZN8touchgfx5ImageC1ERKNS_6BitmapE))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = touchgfx::Image::Image(const touchgfx::Bitmap&) &rArr; touchgfx::Image::setBitmap(const touchgfx::Bitmap&) &rArr; touchgfx::Bitmap::getHeight() const
</UL>
<BR>[Calls]<UL><LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Image::setBitmap(const touchgfx::Bitmap&)
<LI><a href="#[37f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Widget::Widget__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1ViewBase::Screen1ViewBase()
</UL>

<P><STRONG><a name="[4c8]"></a>touchgfx::Image::Image__sub_object(const touchgfx::Bitmap&)</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, screen1viewbase.o(i._ZN8touchgfx5ImageC1ERKNS_6BitmapE), UNUSED)

<P><STRONG><a name="[31c]"></a>touchgfx::Texts::setLanguage(unsigned short)</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, texts.o(i._ZN8touchgfx5Texts11setLanguageEt))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::Texts::setLanguage(unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[396]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TypedTextDatabase::getFonts()
<LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TypedTextDatabase::getInstanceSize()
</UL>
<BR>[Called By]<UL><LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplicationBase::FrontendApplicationBase(Model&, FrontendHeap&)
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx_init
</UL>

<P><STRONG><a name="[3ff]"></a>touchgfx::paint::rgb565::lineFromColor(unsigned short*, unsigned, unsigned, unsigned char, unsigned)</STRONG> (Thumb, 64 bytes, Stack size 20 bytes, stm32dma.o(i._ZN8touchgfx5paint6rgb56513lineFromColorEPtjjhj))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = touchgfx::paint::rgb565::lineFromColor(unsigned short*, unsigned, unsigned, unsigned char, unsigned)
</UL>
<BR>[Called By]<UL><LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::PainterRGB565::paint(unsigned char*, short, short, short, short, unsigned char) const
</UL>

<P><STRONG><a name="[400]"></a>touchgfx::paint::tearDown()</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32dma.o(i._ZN8touchgfx5paint8tearDownEv))
<BR><BR>[Called By]<UL><LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::PainterRGB565::tearDown() const
</UL>

<P><STRONG><a name="[39e]"></a>touchgfx::Bitmap::clearCache()</STRONG> (Thumb, 164 bytes, Stack size 8 bytes, bitmap.o(i._ZN8touchgfx6Bitmap10clearCacheEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::Bitmap::clearCache()
</UL>
<BR>[Called By]<UL><LI><a href="#[2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::setCache(unsigned short*, unsigned, unsigned)
<LI><a href="#[39d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::registerBitmapDatabase(const touchgfx::Bitmap::BitmapData*, unsigned short, unsigned short*, unsigned, unsigned)
</UL>

<P><STRONG><a name="[398]"></a>touchgfx::Bitmap::compactCache()</STRONG> (Thumb, 308 bytes, Stack size 56 bytes, bitmap.o(i._ZN8touchgfx6Bitmap12compactCacheEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = touchgfx::Bitmap::compactCache() &rArr; touchgfx::Bitmap::getSizeOfBitmap(unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[399]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::isDynamicBitmap(unsigned short)
<LI><a href="#[39a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getSizeOfBitmap(unsigned short)
</UL>
<BR>[Called By]<UL><LI><a href="#[39b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::cacheInternal(unsigned short, unsigned, bool)
</UL>

<P><STRONG><a name="[39b]"></a>touchgfx::Bitmap::cacheInternal(unsigned short, unsigned, bool)</STRONG> (Thumb, 124 bytes, Stack size 24 bytes, bitmap.o(i._ZN8touchgfx6Bitmap13cacheInternalEtjb))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = touchgfx::Bitmap::cacheInternal(unsigned short, unsigned, bool) &rArr; touchgfx::Bitmap::compactCache() &rArr; touchgfx::Bitmap::getSizeOfBitmap(unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::copyBitmapToCache(unsigned short, unsigned char*)
<LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::compactCache()
</UL>
<BR>[Called By]<UL><LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::cacheAll()
</UL>

<P><STRONG><a name="[39a]"></a>touchgfx::Bitmap::getSizeOfBitmap(unsigned short)</STRONG> (Thumb, 368 bytes, Stack size 32 bytes, bitmap.o(i._ZN8touchgfx6Bitmap15getSizeOfBitmapEt))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = touchgfx::Bitmap::getSizeOfBitmap(unsigned short)
</UL>
<BR>[Called By]<UL><LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::cacheAll()
<LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::compactCache()
</UL>

<P><STRONG><a name="[399]"></a>touchgfx::Bitmap::isDynamicBitmap(unsigned short)</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, bitmap.o(i._ZN8touchgfx6Bitmap15isDynamicBitmapEt))
<BR><BR>[Called By]<UL><LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::compactCache()
</UL>

<P><STRONG><a name="[39c]"></a>touchgfx::Bitmap::copyBitmapToCache(unsigned short, unsigned char*)</STRONG> (Thumb, 534 bytes, Stack size 32 bytes, bitmap.o(i._ZN8touchgfx6Bitmap17copyBitmapToCacheEtPh))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = touchgfx::Bitmap::copyBitmapToCache(unsigned short, unsigned char*)
</UL>
<BR>[Called By]<UL><LI><a href="#[39b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::cacheInternal(unsigned short, unsigned, bool)
</UL>

<P><STRONG><a name="[39d]"></a>touchgfx::Bitmap::registerBitmapDatabase(const touchgfx::Bitmap::BitmapData*, unsigned short, unsigned short*, unsigned, unsigned)</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, bitmap.o(i._ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtjj))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = touchgfx::Bitmap::registerBitmapDatabase(const touchgfx::Bitmap::BitmapData*, unsigned short, unsigned short*, unsigned, unsigned) &rArr; touchgfx::Bitmap::clearCache()
</UL>
<BR>[Calls]<UL><LI><a href="#[39e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::clearCache()
</UL>
<BR>[Called By]<UL><LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx_init
</UL>

<P><STRONG><a name="[2e5]"></a>touchgfx::Bitmap::cacheAll()</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, bitmap.o(i._ZN8touchgfx6Bitmap8cacheAllEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = touchgfx::Bitmap::cacheAll() &rArr; touchgfx::Bitmap::cacheInternal(unsigned short, unsigned, bool) &rArr; touchgfx::Bitmap::compactCache() &rArr; touchgfx::Bitmap::getSizeOfBitmap(unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[39a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getSizeOfBitmap(unsigned short)
<LI><a href="#[39b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::cacheInternal(unsigned short, unsigned, bool)
</UL>
<BR>[Called By]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXHAL::initialize()
</UL>

<P><STRONG><a name="[2e4]"></a>touchgfx::Bitmap::setCache(unsigned short*, unsigned, unsigned)</STRONG> (Thumb, 72 bytes, Stack size 8 bytes, bitmap.o(i._ZN8touchgfx6Bitmap8setCacheEPtjj))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::Bitmap::setCache(unsigned short*, unsigned, unsigned) &rArr; touchgfx::Bitmap::clearCache()
</UL>
<BR>[Calls]<UL><LI><a href="#[39e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::clearCache()
</UL>
<BR>[Called By]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXHAL::initialize()
</UL>

<P><STRONG><a name="[82]"></a>touchgfx::BlitOp::BlitOp()</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32dma.o(i._ZN8touchgfx6BlitOpC1Ev))
<BR>[Address Reference Count : 1]<UL><LI> stm32dma.o(i._ZN8STM32DMAC1Ev)
</UL>
<P><STRONG><a name="[4c9]"></a>touchgfx::BlitOp::BlitOp__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stm32dma.o(i._ZN8touchgfx6BlitOpC1Ev), UNUSED)

<P><STRONG><a name="[39f]"></a>touchgfx::Canvas::close()</STRONG> (Thumb, 88 bytes, Stack size 8 bytes, canvas.o(i._ZN8touchgfx6Canvas5closeEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = touchgfx::Canvas::close() &rArr; touchgfx::Outline::lineTo(int, int) &rArr; touchgfx::Outline::renderLine(int, int, int, int) &rArr; touchgfx::Outline::renderScanline(int, int, int, int, int) &rArr; touchgfx::Outline::setCurCellNew(int, int)
</UL>
<BR>[Calls]<UL><LI><a href="#[3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Outline::lineTo(int, int)
</UL>
<BR>[Called By]<UL><LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Canvas::render(unsigned char)
<LI><a href="#[3a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Canvas::moveTo(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5)
</UL>

<P><STRONG><a name="[1b1]"></a>touchgfx::Canvas::lineTo(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5)</STRONG> (Thumb, 220 bytes, Stack size 32 bytes, canvas.o(i._ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = touchgfx::Canvas::lineTo(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5) &rArr; touchgfx::Outline::moveTo(int, int) &rArr; touchgfx::Outline::renderLine(int, int, int, int) &rArr; touchgfx::Outline::renderScanline(int, int, int, int, int) &rArr; touchgfx::Outline::setCurCellNew(int, int)
</UL>
<BR>[Calls]<UL><LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Outline::moveTo(int, int)
<LI><a href="#[3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Outline::lineTo(int, int)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> canvas.o(.constdata__ZTVN8touchgfx6CanvasE)
</UL>
<P><STRONG><a name="[3a2]"></a>touchgfx::Canvas::moveTo(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5)</STRONG> (Thumb, 170 bytes, Stack size 32 bytes, canvas.o(i._ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = touchgfx::Canvas::moveTo(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5) &rArr; touchgfx::Outline::moveTo(int, int) &rArr; touchgfx::Outline::renderLine(int, int, int, int) &rArr; touchgfx::Outline::renderScanline(int, int, int, int, int) &rArr; touchgfx::Outline::setCurCellNew(int, int)
</UL>
<BR>[Calls]<UL><LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Outline::moveTo(int, int)
<LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Canvas::close()
</UL>
<BR>[Called By]<UL><LI><a href="#[408]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GraphElementLine::drawIndexRange(touchgfx::Canvas&, const touchgfx::AbstractDataGraph*, short, short) const
</UL>

<P><STRONG><a name="[3a3]"></a>touchgfx::Canvas::render(unsigned char)</STRONG> (Thumb, 802 bytes, Stack size 72 bytes, canvas.o(i._ZN8touchgfx6Canvas6renderEh))
<BR><BR>[Stack]<UL><LI>Max Depth = 512<LI>Call Chain = touchgfx::Canvas::render(unsigned char) &rArr; touchgfx::Outline::closeOutlineAndSortCells() &rArr; touchgfx::Outline::qsortCells(touchgfx::Cell*, unsigned)
</UL>
<BR>[Calls]<UL><LI><a href="#[3a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Outline::closeOutlineAndSortCells()
<LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Canvas::close()
<LI><a href="#[3a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::lockFrameBufferForRenderingMethod(touchgfx::HAL::RenderingMethod)
</UL>
<BR>[Called By]<UL><LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GraphElementLine::drawCanvasWidget(const touchgfx::Rect&) const
</UL>

<P><STRONG><a name="[3a6]"></a>touchgfx::Canvas::Canvas(const touchgfx::CanvasWidget*, const touchgfx::Rect&)</STRONG> (Thumb, 402 bytes, Stack size 48 bytes, canvas.o(i._ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = touchgfx::Canvas::Canvas(const touchgfx::CanvasWidget*, const touchgfx::Rect&) &rArr; touchgfx::Outline::Outline() &rArr; touchgfx::Outline::reset() &rArr; touchgfx::CanvasWidgetRenderer::getOutlineBufferSize()
</UL>
<BR>[Calls]<UL><LI><a href="#[3a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Outline::Outline()
<LI><a href="#[3aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Outline::reset()
<LI><a href="#[3a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&, const touchgfx::Rect&)
<LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&)
<LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_memcpy4_8
<LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CanvasWidgetRenderer::hasBuffer()
</UL>
<BR>[Called By]<UL><LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GraphElementLine::drawCanvasWidget(const touchgfx::Rect&) const
</UL>

<P><STRONG><a name="[4ca]"></a>touchgfx::Canvas::Canvas__sub_object(const touchgfx::CanvasWidget*, const touchgfx::Rect&)</STRONG> (Thumb, 0 bytes, Stack size 48 bytes, canvas.o(i._ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE), UNUSED)

<P><STRONG><a name="[84]"></a>touchgfx::Point4::Point4()</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, texturemapper.o(i._ZN8touchgfx6Point4C1Ev))
<BR>[Address Reference Count : 1]<UL><LI> texturemapper.o(i._ZN8touchgfx13TextureMapper19applyTransformationEv)
</UL>
<P><STRONG><a name="[4cb]"></a>touchgfx::Point4::Point4__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, texturemapper.o(i._ZN8touchgfx6Point4C1Ev), UNUSED)

<P><STRONG><a name="[1b3]"></a>touchgfx::Screen::setupScreen()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, screen.o(i._ZN8touchgfx6Screen11setupScreenEv))
<BR>[Address Reference Count : 1]<UL><LI> screen.o(.constdata__ZTVN8touchgfx6ScreenE)
</UL>
<P><STRONG><a name="[377]"></a>touchgfx::Screen::bindTransition(touchgfx::Transition&)</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, screen.o(i._ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE))
<BR><BR>[Called By]<UL><LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::finalizeTransition(touchgfx::Screen*, touchgfx::Presenter*, touchgfx::Transition*)
</UL>

<P><STRONG><a name="[bc]"></a>touchgfx::Screen::handleKeyEvent(unsigned char)</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, screen.o(i._ZN8touchgfx6Screen14handleKeyEventEh))
<BR>[Address Reference Count : 3]<UL><LI> screen1view.o(.constdata__ZTV11Screen1View)
<LI> screen.o(.constdata__ZTVN8touchgfx6ScreenE)
<LI> screen1viewbase.o(.constdata__ZTV15Screen1ViewBase)
</UL>
<P><STRONG><a name="[e7]"></a>touchgfx::Screen::tearDownScreen()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, screen.o(i._ZN8touchgfx6Screen14tearDownScreenEv))
<BR>[Address Reference Count : 2]<UL><LI> screen.o(.constdata__ZTVN8touchgfx6ScreenE)
<LI> screen1viewbase.o(.constdata__ZTV15Screen1ViewBase)
</UL>
<P><STRONG><a name="[b6]"></a>touchgfx::Screen::afterTransition()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, screen.o(i._ZN8touchgfx6Screen15afterTransitionEv))
<BR>[Address Reference Count : 3]<UL><LI> screen1view.o(.constdata__ZTV11Screen1View)
<LI> screen.o(.constdata__ZTVN8touchgfx6ScreenE)
<LI> screen1viewbase.o(.constdata__ZTV15Screen1ViewBase)
</UL>
<P><STRONG><a name="[b9]"></a>touchgfx::Screen::handleDragEvent(const touchgfx::DragEvent&)</STRONG> (Thumb, 260 bytes, Stack size 72 bytes, screen.o(i._ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = touchgfx::Screen::handleDragEvent(const touchgfx::DragEvent&) &rArr; touchgfx::Drawable::getAbsoluteRect() const
</UL>
<BR>[Calls]<UL><LI><a href="#[363]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::getAbsoluteRect() const
</UL>
<BR>[Address Reference Count : 3]<UL><LI> screen1view.o(.constdata__ZTV11Screen1View)
<LI> screen.o(.constdata__ZTVN8touchgfx6ScreenE)
<LI> screen1viewbase.o(.constdata__ZTV15Screen1ViewBase)
</UL>
<P><STRONG><a name="[e8]"></a>touchgfx::Screen::handleTickEvent()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, screen.o(i._ZN8touchgfx6Screen15handleTickEventEv))
<BR>[Address Reference Count : 2]<UL><LI> screen.o(.constdata__ZTVN8touchgfx6ScreenE)
<LI> screen1viewbase.o(.constdata__ZTV15Screen1ViewBase)
</UL>
<P><STRONG><a name="[b8]"></a>touchgfx::Screen::handleClickEvent(const touchgfx::ClickEvent&)</STRONG> (Thumb, 188 bytes, Stack size 48 bytes, screen.o(i._ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = touchgfx::Screen::handleClickEvent(const touchgfx::ClickEvent&) &rArr; touchgfx::Container::getLastChildNear(short, short, touchgfx::Drawable**, short*, short*) &rArr; touchgfx::Container::getLastChild(short, short, touchgfx::Drawable**)
</UL>
<BR>[Calls]<UL><LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Container::getLastChildNear(short, short, touchgfx::Drawable**, short*, short*)
<LI><a href="#[363]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::getAbsoluteRect() const
</UL>
<BR>[Address Reference Count : 3]<UL><LI> screen1view.o(.constdata__ZTV11Screen1View)
<LI> screen.o(.constdata__ZTVN8touchgfx6ScreenE)
<LI> screen1viewbase.o(.constdata__ZTV15Screen1ViewBase)
</UL>
<P><STRONG><a name="[ba]"></a>touchgfx::Screen::handleGestureEvent(const touchgfx::GestureEvent&)</STRONG> (Thumb, 94 bytes, Stack size 40 bytes, screen.o(i._ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = touchgfx::Screen::handleGestureEvent(const touchgfx::GestureEvent&) &rArr; touchgfx::Drawable::getAbsoluteRect() const
</UL>
<BR>[Calls]<UL><LI><a href="#[363]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::getAbsoluteRect() const
</UL>
<BR>[Address Reference Count : 3]<UL><LI> screen1view.o(.constdata__ZTV11Screen1View)
<LI> screen.o(.constdata__ZTVN8touchgfx6ScreenE)
<LI> screen1viewbase.o(.constdata__ZTV15Screen1ViewBase)
</UL>
<P><STRONG><a name="[304]"></a>touchgfx::Screen::add(touchgfx::Drawable&)</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, screen1viewbase.o(i._ZN8touchgfx6Screen3addERNS_8DrawableE))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::Screen::add(touchgfx::Drawable&) &rArr; touchgfx::Container::add(touchgfx::Drawable&)
</UL>
<BR>[Calls]<UL><LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Container::add(touchgfx::Drawable&)
</UL>
<BR>[Called By]<UL><LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1ViewBase::Screen1ViewBase()
</UL>

<P><STRONG><a name="[b4]"></a>touchgfx::Screen::draw(touchgfx::Rect&)</STRONG> (Thumb, 162 bytes, Stack size 40 bytes, screen.o(i._ZN8touchgfx6Screen4drawERNS_4RectE))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = touchgfx::Screen::draw(touchgfx::Rect&) &rArr; touchgfx::Screen::JSMOC(const touchgfx::Rect&, touchgfx::Drawable*) &rArr;  touchgfx::Screen::JSMOC(const touchgfx::Rect&, touchgfx::Drawable*) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Container::draw(const touchgfx::Rect&) const
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Container::setupDrawChain(const touchgfx::Rect&, touchgfx::Drawable**)
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::JSMOC(const touchgfx::Rect&, touchgfx::Drawable*)
<LI><a href="#[363]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::getAbsoluteRect() const
<LI><a href="#[3ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::operator &(const touchgfx::Rect&) const
</UL>
<BR>[Address Reference Count : 3]<UL><LI> screen1view.o(.constdata__ZTV11Screen1View)
<LI> screen.o(.constdata__ZTVN8touchgfx6ScreenE)
<LI> screen1viewbase.o(.constdata__ZTV15Screen1ViewBase)
</UL>
<P><STRONG><a name="[337]"></a>touchgfx::Screen::draw()</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, screen.o(i._ZN8touchgfx6Screen4drawEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::Screen::draw()
</UL>
<BR>[Called By]<UL><LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::Application()
</UL>

<P><STRONG><a name="[3ac]"></a>touchgfx::Screen::JSMOC(const touchgfx::Rect&, touchgfx::Drawable*)</STRONG> (Thumb, 1012 bytes, Stack size 80 bytes, screen.o(i._ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + In Cycle
<LI>Call Chain = touchgfx::Screen::JSMOC(const touchgfx::Rect&, touchgfx::Drawable*) &rArr;  touchgfx::Screen::JSMOC(const touchgfx::Rect&, touchgfx::Drawable*) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::JSMOC(const touchgfx::Rect&, touchgfx::Drawable*)
<LI><a href="#[363]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::getAbsoluteRect() const
<LI><a href="#[3ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::operator &(const touchgfx::Rect&) const
</UL>
<BR>[Called By]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::draw(touchgfx::Rect&)
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::JSMOC(const touchgfx::Rect&, touchgfx::Drawable*)
</UL>

<P><STRONG><a name="[2f3]"></a>touchgfx::Screen::Screen()</STRONG> (Thumb, 128 bytes, Stack size 24 bytes, screen.o(i._ZN8touchgfx6ScreenC1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = touchgfx::Screen::Screen()
</UL>
<BR>[Called By]<UL><LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1ViewBase::Screen1ViewBase()
</UL>

<P><STRONG><a name="[4cc]"></a>touchgfx::Screen::Screen__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, screen.o(i._ZN8touchgfx6ScreenC1Ev), UNUSED)

<P><STRONG><a name="[1b2]"></a>touchgfx::Screen::~Screen()</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, screen.o(i._ZN8touchgfx6ScreenD1Ev))
<BR>[Address Reference Count : 1]<UL><LI> screen.o(.constdata__ZTVN8touchgfx6ScreenE)
</UL>
<P><STRONG><a name="[4cd]"></a>touchgfx::Screen::~Screen__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, screen.o(i._ZN8touchgfx6ScreenD1Ev), UNUSED)

<P><STRONG><a name="[10e]"></a>touchgfx::Widget::getLastChild(short, short, touchgfx::Drawable**)</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, box.o(i._ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE))
<BR>[Address Reference Count : 13]<UL><LI> texturemapper.o(.constdata__ZTVN8touchgfx13TextureMapperE)
<LI> box.o(.constdata__ZTVN8touchgfx3BoxE)
<LI> canvaswidget.o(.constdata__ZTVN8touchgfx12CanvasWidgetE)
<LI> digitalclock.o(.constdata__ZTVN8touchgfx23TextAreaWithOneWildcardE)
<LI> image.o(.constdata__ZTVN8touchgfx5ImageE)
<LI> scalableimage.o(.constdata__ZTVN8touchgfx13ScalableImageE)
<LI> textareawithwildcard.o(.constdata__ZTVN8touchgfx24TextAreaWithWildcardBaseE)
<LI> screen1viewbase.o(.constdata__ZTVN8touchgfx6WidgetE)
<LI> screen1viewbase.o(.constdata__ZTVN8touchgfx24TextAreaWithTwoWildcardsE)
<LI> snapshotwidget.o(.constdata__ZTVN8touchgfx14SnapshotWidgetE)
<LI> tiledimage.o(.constdata__ZTVN8touchgfx10TiledImageE)
<LI> graphelements.o(.constdata__ZTVN8touchgfx16GraphElementLineE)
<LI> textarea.o(.constdata__ZTVN8touchgfx8TextAreaE)
</UL>
<P><STRONG><a name="[37f]"></a>touchgfx::Widget::Widget__sub_object()</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, screen1viewbase.o(i._ZN8touchgfx6WidgetC2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::Widget::Widget__sub_object() &rArr; touchgfx::Drawable::Drawable__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[3ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::Drawable__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::TextArea()
<LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Image::Image(const touchgfx::Bitmap&)
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Box::Box()
</UL>

<P><STRONG><a name="[36b]"></a>touchgfx::muldiv(int, int, int)</STRONG> (Thumb, 198 bytes, Stack size 32 bytes, utils.o(i._ZN8touchgfx6muldivEiii))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = touchgfx::muldiv(int, int, int) &rArr; touchgfx::muldivu(unsigned, unsigned, unsigned, unsigned&) &rArr;  touchgfx::muldivu(unsigned, unsigned, unsigned, unsigned&) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::muldivu(unsigned, unsigned, unsigned, unsigned&)
</UL>
<BR>[Called By]<UL><LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DynamicDataGraph::xScreenRangeToIndexRange(short, short, short&, short&) const
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DynamicDataGraph::setScaleY(int, bool)
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DynamicDataGraph::setScaleX(int, bool)
<LI><a href="#[408]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GraphElementLine::drawIndexRange(touchgfx::Canvas&, const touchgfx::AbstractDataGraph*, short, short) const
<LI><a href="#[3b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CWRUtil::muldiv_toQ5(int, int, int)
</UL>

<P><STRONG><a name="[3af]"></a>touchgfx::muldiv(int, int, int, int&)</STRONG> (Thumb, 60 bytes, Stack size 20 bytes, utils.o(i._ZN8touchgfx6muldivEiiiRi))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = touchgfx::muldiv(int, int, int, int&) &rArr; touchgfx::muldivu(unsigned, unsigned, unsigned, unsigned&) &rArr;  touchgfx::muldivu(unsigned, unsigned, unsigned, unsigned&) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::muldivu(unsigned, unsigned, unsigned, unsigned&)
</UL>
<BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractProgressIndicator::getProgress(unsigned short) const
<LI><a href="#[3b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CWRUtil::muldiv_toQ5(int, int, int)
</UL>

<P><STRONG><a name="[3b0]"></a>touchgfx::CWRUtil::muldiv_toQ5(int, int, int)</STRONG> (Thumb, 92 bytes, Stack size 56 bytes, abstractdatagraph.o(i._ZN8touchgfx7CWRUtil11muldiv_toQ5Eiii))
<BR><BR>[Stack]<UL><LI>Max Depth = 124<LI>Call Chain = touchgfx::CWRUtil::muldiv_toQ5(int, int, int) &rArr; touchgfx::muldiv(int, int, int) &rArr; touchgfx::muldivu(unsigned, unsigned, unsigned, unsigned&) &rArr;  touchgfx::muldivu(unsigned, unsigned, unsigned, unsigned&) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::muldiv(int, int, int, int&)
<LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::muldiv(int, int, int)
</UL>
<BR>[Called By]<UL><LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDataGraph::valueToScreenYQ5(int) const
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDataGraph::valueToScreenXQ5(int) const
</UL>

<P><STRONG><a name="[3b1]"></a>touchgfx::CWRUtil::length(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5)</STRONG> (Thumb, 120 bytes, Stack size 24 bytes, graphelements.o(i._ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_))
<BR><BR>[Stack]<UL><LI>Max Depth = 24 + In Cycle
<LI>Call Chain = touchgfx::CWRUtil::length(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5) &rArr;  touchgfx::CWRUtil::length(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CWRUtil::length(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5)
</UL>
<BR>[Called By]<UL><LI><a href="#[408]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GraphElementLine::drawIndexRange(touchgfx::Canvas&, const touchgfx::AbstractDataGraph*, short, short) const
<LI><a href="#[3b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CWRUtil::length(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5)
</UL>

<P><STRONG><a name="[3b2]"></a>touchgfx::Outline::qsortCells(touchgfx::Cell*, unsigned)</STRONG> (Thumb, 508 bytes, Stack size 416 bytes, outline.o(i._ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj))
<BR><BR>[Stack]<UL><LI>Max Depth = 416<LI>Call Chain = touchgfx::Outline::qsortCells(touchgfx::Cell*, unsigned)
</UL>
<BR>[Calls]<UL><LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_memcpy4_8
</UL>
<BR>[Called By]<UL><LI><a href="#[3a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Outline::closeOutlineAndSortCells()
</UL>

<P><STRONG><a name="[3b3]"></a>touchgfx::Outline::renderLine(int, int, int, int)</STRONG> (Thumb, 402 bytes, Stack size 80 bytes, outline.o(i._ZN8touchgfx7Outline10renderLineEiiii))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = touchgfx::Outline::renderLine(int, int, int, int) &rArr; touchgfx::Outline::renderScanline(int, int, int, int, int) &rArr; touchgfx::Outline::setCurCellNew(int, int)
</UL>
<BR>[Calls]<UL><LI><a href="#[3b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Outline::renderScanline(int, int, int, int, int)
<LI><a href="#[3b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Outline::setCurCell(int, int)
</UL>
<BR>[Called By]<UL><LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Outline::moveTo(int, int)
<LI><a href="#[3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Outline::lineTo(int, int)
<LI><a href="#[3a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Outline::closeOutlineAndSortCells()
</UL>

<P><STRONG><a name="[3b5]"></a>touchgfx::Outline::setCurCell(int, int)</STRONG> (Thumb, 84 bytes, Stack size 4 bytes, outline.o(i._ZN8touchgfx7Outline10setCurCellEii))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = touchgfx::Outline::setCurCell(int, int)
</UL>
<BR>[Called By]<UL><LI><a href="#[3b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Outline::renderScanline(int, int, int, int, int)
<LI><a href="#[3b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Outline::renderLine(int, int, int, int)
<LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Outline::moveTo(int, int)
</UL>

<P><STRONG><a name="[3b6]"></a>touchgfx::Outline::setCurCellNew(int, int)</STRONG> (Thumb, 86 bytes, Stack size 8 bytes, outline.o(i._ZN8touchgfx7Outline13setCurCellNewEii))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::Outline::setCurCellNew(int, int)
</UL>
<BR>[Called By]<UL><LI><a href="#[3b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Outline::renderScanline(int, int, int, int, int)
</UL>

<P><STRONG><a name="[3b4]"></a>touchgfx::Outline::renderScanline(int, int, int, int, int)</STRONG> (Thumb, 398 bytes, Stack size 64 bytes, outline.o(i._ZN8touchgfx7Outline14renderScanlineEiiiii))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = touchgfx::Outline::renderScanline(int, int, int, int, int) &rArr; touchgfx::Outline::setCurCellNew(int, int)
</UL>
<BR>[Calls]<UL><LI><a href="#[3b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Outline::setCurCellNew(int, int)
<LI><a href="#[3b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Outline::setCurCell(int, int)
</UL>
<BR>[Called By]<UL><LI><a href="#[3b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Outline::renderLine(int, int, int, int)
</UL>

<P><STRONG><a name="[3a5]"></a>touchgfx::Outline::closeOutlineAndSortCells()</STRONG> (Thumb, 150 bytes, Stack size 24 bytes, outline.o(i._ZN8touchgfx7Outline24closeOutlineAndSortCellsEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 440<LI>Call Chain = touchgfx::Outline::closeOutlineAndSortCells() &rArr; touchgfx::Outline::qsortCells(touchgfx::Cell*, unsigned)
</UL>
<BR>[Calls]<UL><LI><a href="#[3b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Outline::renderLine(int, int, int, int)
<LI><a href="#[3b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Outline::qsortCells(touchgfx::Cell*, unsigned)
</UL>
<BR>[Called By]<UL><LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Canvas::render(unsigned char)
</UL>

<P><STRONG><a name="[3aa]"></a>touchgfx::Outline::reset()</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, outline.o(i._ZN8touchgfx7Outline5resetEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::Outline::reset() &rArr; touchgfx::CanvasWidgetRenderer::getOutlineBufferSize()
</UL>
<BR>[Calls]<UL><LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CanvasWidgetRenderer::getOutlineBufferSize()
<LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CanvasWidgetRenderer::getOutlineBuffer()
</UL>
<BR>[Called By]<UL><LI><a href="#[3a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Outline::Outline()
<LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Outline::moveTo(int, int)
<LI><a href="#[3a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Canvas::Canvas(const touchgfx::CanvasWidget*, const touchgfx::Rect&)
</UL>

<P><STRONG><a name="[3a0]"></a>touchgfx::Outline::lineTo(int, int)</STRONG> (Thumb, 62 bytes, Stack size 24 bytes, outline.o(i._ZN8touchgfx7Outline6lineToEii))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = touchgfx::Outline::lineTo(int, int) &rArr; touchgfx::Outline::renderLine(int, int, int, int) &rArr; touchgfx::Outline::renderScanline(int, int, int, int, int) &rArr; touchgfx::Outline::setCurCellNew(int, int)
</UL>
<BR>[Calls]<UL><LI><a href="#[3b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Outline::renderLine(int, int, int, int)
</UL>
<BR>[Called By]<UL><LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Canvas::close()
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Canvas::lineTo(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5)
</UL>

<P><STRONG><a name="[3a1]"></a>touchgfx::Outline::moveTo(int, int)</STRONG> (Thumb, 108 bytes, Stack size 32 bytes, outline.o(i._ZN8touchgfx7Outline6moveToEii))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = touchgfx::Outline::moveTo(int, int) &rArr; touchgfx::Outline::renderLine(int, int, int, int) &rArr; touchgfx::Outline::renderScanline(int, int, int, int, int) &rArr; touchgfx::Outline::setCurCellNew(int, int)
</UL>
<BR>[Calls]<UL><LI><a href="#[3b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Outline::setCurCell(int, int)
<LI><a href="#[3b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Outline::renderLine(int, int, int, int)
<LI><a href="#[3aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Outline::reset()
</UL>
<BR>[Called By]<UL><LI><a href="#[3a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Canvas::moveTo(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5)
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Canvas::lineTo(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5)
</UL>

<P><STRONG><a name="[3a7]"></a>touchgfx::Outline::Outline()</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, outline.o(i._ZN8touchgfx7OutlineC1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = touchgfx::Outline::Outline() &rArr; touchgfx::Outline::reset() &rArr; touchgfx::CanvasWidgetRenderer::getOutlineBufferSize()
</UL>
<BR>[Calls]<UL><LI><a href="#[3aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Outline::reset()
</UL>
<BR>[Called By]<UL><LI><a href="#[3a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Canvas::Canvas(const touchgfx::CanvasWidget*, const touchgfx::Rect&)
</UL>

<P><STRONG><a name="[4ce]"></a>touchgfx::Outline::Outline__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, outline.o(i._ZN8touchgfx7OutlineC1Ev), UNUSED)

<P><STRONG><a name="[1b4]"></a>touchgfx::Outline::~Outline()</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, outline.o(i._ZN8touchgfx7OutlineD1Ev))
<BR><BR>[Called By]<UL><LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GraphElementLine::drawCanvasWidget(const touchgfx::Rect&) const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> outline.o(.constdata__ZTVN8touchgfx7OutlineE)
</UL>
<P><STRONG><a name="[4cf]"></a>touchgfx::Outline::~Outline__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, outline.o(i._ZN8touchgfx7OutlineD1Ev), UNUSED)

<P><STRONG><a name="[3bc]"></a>touchgfx::Unicode::composeString(const unsigned short*&, unsigned short, unsigned short, bool, bool, int, bool, int, bool, int&, unsigned short, unsigned short*)</STRONG> (Thumb, 404 bytes, Stack size 36 bytes, unicode.o(i._ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = touchgfx::Unicode::composeString(const unsigned short*&, unsigned short, unsigned short, bool, bool, int, bool, int, bool, int&, unsigned short, unsigned short*)
</UL>
<BR>[Called By]<UL><LI><a href="#[3bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const unsigned short*, const char*, std::__va_list)
<LI><a href="#[3ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::snprintfFloats(unsigned short*, unsigned short, const unsigned short*, const char*, const float*)
</UL>

<P><STRONG><a name="[2dc]"></a>touchgfx::Unicode::snprintfFloat(unsigned short*, unsigned short, const char*, float)</STRONG> (Thumb, 16 bytes, Stack size 24 bytes, screen1view.o(i._ZN8touchgfx7Unicode13snprintfFloatEPttPKcf))
<BR><BR>[Stack]<UL><LI>Max Depth = 436<LI>Call Chain = touchgfx::Unicode::snprintfFloat(unsigned short*, unsigned short, const char*, float) &rArr; touchgfx::Unicode::snprintfFloats(unsigned short*, unsigned short, const char*, const float*) &rArr; touchgfx::Unicode::snprintfFloats(unsigned short*, unsigned short, const unsigned short*, const char*, const float*) &rArr; touchgfx::Unicode::parseFlagsAndPrecision(const unsigned short*&, const char*&, unsigned short&, bool&, bool&, bool&, bool&, int&, bool&, int&)
</UL>
<BR>[Calls]<UL><LI><a href="#[3b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::snprintfFloats(unsigned short*, unsigned short, const char*, const float*)
</UL>
<BR>[Called By]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1View::handleTickEvent()
<LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1View::runAnimcar()
</UL>

<P><STRONG><a name="[3b9]"></a>touchgfx::Unicode::snprintfFloats(unsigned short*, unsigned short, const char*, const float*)</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, unicode.o(i._ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf))
<BR><BR>[Stack]<UL><LI>Max Depth = 412<LI>Call Chain = touchgfx::Unicode::snprintfFloats(unsigned short*, unsigned short, const char*, const float*) &rArr; touchgfx::Unicode::snprintfFloats(unsigned short*, unsigned short, const unsigned short*, const char*, const float*) &rArr; touchgfx::Unicode::parseFlagsAndPrecision(const unsigned short*&, const char*&, unsigned short&, bool&, bool&, bool&, bool&, int&, bool&, int&)
</UL>
<BR>[Calls]<UL><LI><a href="#[3ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::snprintfFloats(unsigned short*, unsigned short, const unsigned short*, const char*, const float*)
</UL>
<BR>[Called By]<UL><LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::snprintfFloat(unsigned short*, unsigned short, const char*, float)
</UL>

<P><STRONG><a name="[3ba]"></a>touchgfx::Unicode::snprintfFloats(unsigned short*, unsigned short, const unsigned short*, const char*, const float*)</STRONG> (Thumb, 1178 bytes, Stack size 368 bytes, unicode.o(i._ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf))
<BR><BR>[Stack]<UL><LI>Max Depth = 404<LI>Call Chain = touchgfx::Unicode::snprintfFloats(unsigned short*, unsigned short, const unsigned short*, const char*, const float*) &rArr; touchgfx::Unicode::parseFlagsAndPrecision(const unsigned short*&, const char*&, unsigned short&, bool&, bool&, bool&, bool&, int&, bool&, int&)
</UL>
<BR>[Calls]<UL><LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[3bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::parseFlagsAndPrecision(const unsigned short*&, const char*&, unsigned short&, bool&, bool&, bool&, bool&, int&, bool&, int&)
<LI><a href="#[3bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::composeString(const unsigned short*&, unsigned short, unsigned short, bool, bool, int, bool, int, bool, int&, unsigned short, unsigned short*)
</UL>
<BR>[Called By]<UL><LI><a href="#[3b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::snprintfFloats(unsigned short*, unsigned short, const char*, const float*)
</UL>

<P><STRONG><a name="[3bb]"></a>touchgfx::Unicode::parseFlagsAndPrecision(const unsigned short*&, const char*&, unsigned short&, bool&, bool&, bool&, bool&, int&, bool&, int&)</STRONG> (Thumb, 548 bytes, Stack size 36 bytes, unicode.o(i._ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = touchgfx::Unicode::parseFlagsAndPrecision(const unsigned short*&, const char*&, unsigned short&, bool&, bool&, bool&, bool&, int&, bool&, int&)
</UL>
<BR>[Called By]<UL><LI><a href="#[3bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const unsigned short*, const char*, std::__va_list)
<LI><a href="#[3ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::snprintfFloats(unsigned short*, unsigned short, const unsigned short*, const char*, const float*)
</UL>

<P><STRONG><a name="[3be]"></a>touchgfx::Unicode::utoa(unsigned, unsigned short*, unsigned short, int)</STRONG> (Thumb, 122 bytes, Stack size 44 bytes, unicode.o(i._ZN8touchgfx7Unicode4utoaEjPtti))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = touchgfx::Unicode::utoa(unsigned, unsigned short*, unsigned short, int)
</UL>
<BR>[Called By]<UL><LI><a href="#[3bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const unsigned short*, const char*, std::__va_list)
</UL>

<P><STRONG><a name="[2dd]"></a>touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...)</STRONG> (Thumb, 22 bytes, Stack size 24 bytes, unicode.o(i._ZN8touchgfx7Unicode8snprintfEPttPKcz))
<BR><BR>[Stack]<UL><LI>Max Depth = 300<LI>Call Chain = touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const unsigned short*, const char*, std::__va_list) &rArr; touchgfx::Unicode::utoa(unsigned, unsigned short*, unsigned short, int)
</UL>
<BR>[Calls]<UL><LI><a href="#[3bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const unsigned short*, const char*, std::__va_list)
</UL>
<BR>[Called By]<UL><LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1ViewBase::Screen1ViewBase()
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1View::handleTickEvent()
<LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1View::Screen1speed()
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1View::setupScreen()
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DigitalClock::updateClock()
</UL>

<P><STRONG><a name="[3bd]"></a>touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const unsigned short*, const char*, std::__va_list)</STRONG> (Thumb, 948 bytes, Stack size 232 bytes, unicode.o(i._ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list))
<BR><BR>[Stack]<UL><LI>Max Depth = 276<LI>Call Chain = touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const unsigned short*, const char*, std::__va_list) &rArr; touchgfx::Unicode::utoa(unsigned, unsigned short*, unsigned short, int)
</UL>
<BR>[Calls]<UL><LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[3be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::utoa(unsigned, unsigned short*, unsigned short, int)
<LI><a href="#[3bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::parseFlagsAndPrecision(const unsigned short*&, const char*&, unsigned short&, bool&, bool&, bool&, bool&, int&, bool&, int&)
<LI><a href="#[3bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::composeString(const unsigned short*&, unsigned short, unsigned short, bool, bool, int, bool, int, bool, int&, unsigned short, unsigned short*)
</UL>
<BR>[Called By]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...)
</UL>

<P><STRONG><a name="[3ae]"></a>touchgfx::muldivu(unsigned, unsigned, unsigned, unsigned&)</STRONG> (Thumb, 182 bytes, Stack size 36 bytes, utils.o(i._ZN8touchgfx7muldivuEjjjRj))
<BR><BR>[Stack]<UL><LI>Max Depth = 36 + In Cycle
<LI>Call Chain = touchgfx::muldivu(unsigned, unsigned, unsigned, unsigned&) &rArr;  touchgfx::muldivu(unsigned, unsigned, unsigned, unsigned&) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::muldivu(unsigned, unsigned, unsigned, unsigned&)
<LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::clzu(unsigned)
</UL>
<BR>[Called By]<UL><LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::muldivu(unsigned, unsigned, unsigned, unsigned&)
<LI><a href="#[3af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::muldiv(int, int, int, int&)
<LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::muldiv(int, int, int)
</UL>

<P><STRONG><a name="[318]"></a>touchgfx::Callback&lang;FrontendApplicationBase, void, void, void&rang;::operator =(const touchgfx::Callback&lang;FrontendApplicationBase, void, void, void&rang;&)</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, frontendapplicationbase.o(i._ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEaSERKS2_))
<BR><BR>[Called By]<UL><LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplicationBase::gotoScreen1ScreenNoTransition()
</UL>

<P><STRONG><a name="[302]"></a>touchgfx::Drawable::setPosition(short, short, short, short)</STRONG> (Thumb, 58 bytes, Stack size 24 bytes, abstractdatagraph.o(i._ZN8touchgfx8Drawable11setPositionEssss))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = touchgfx::Drawable::setPosition(short, short, short, short)
</UL>
<BR>[Called By]<UL><LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1ViewBase::Screen1ViewBase()
<LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDataGraph::setGraphAreaMargin(short, short, short, short)
<LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDataGraph::addGraphElement(touchgfx::AbstractGraphElement&)
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ImageProgress::setValue(int)
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ImageProgress::setProgressIndicatorPosition(short, short, short, short)
</UL>

<P><STRONG><a name="[119]"></a>touchgfx::Drawable::setupDrawChain(const touchgfx::Rect&, touchgfx::Drawable**)</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, box.o(i._ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_))
<BR>[Address Reference Count : 14]<UL><LI> texturemapper.o(.constdata__ZTVN8touchgfx13TextureMapperE)
<LI> box.o(.constdata__ZTVN8touchgfx3BoxE)
<LI> canvaswidget.o(.constdata__ZTVN8touchgfx12CanvasWidgetE)
<LI> digitalclock.o(.constdata__ZTVN8touchgfx23TextAreaWithOneWildcardE)
<LI> drawable.o(.constdata__ZTVN8touchgfx8DrawableE)
<LI> image.o(.constdata__ZTVN8touchgfx5ImageE)
<LI> scalableimage.o(.constdata__ZTVN8touchgfx13ScalableImageE)
<LI> textareawithwildcard.o(.constdata__ZTVN8touchgfx24TextAreaWithWildcardBaseE)
<LI> screen1viewbase.o(.constdata__ZTVN8touchgfx6WidgetE)
<LI> screen1viewbase.o(.constdata__ZTVN8touchgfx24TextAreaWithTwoWildcardsE)
<LI> snapshotwidget.o(.constdata__ZTVN8touchgfx14SnapshotWidgetE)
<LI> tiledimage.o(.constdata__ZTVN8touchgfx10TiledImageE)
<LI> graphelements.o(.constdata__ZTVN8touchgfx16GraphElementLineE)
<LI> textarea.o(.constdata__ZTVN8touchgfx8TextAreaE)
</UL>
<P><STRONG><a name="[117]"></a>touchgfx::Drawable::handleDragEvent(const touchgfx::DragEvent&)</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, abstractclock.o(i._ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE))
<BR>[Address Reference Count : 20]<UL><LI> texturemapper.o(.constdata__ZTVN8touchgfx13TextureMapperE)
<LI> abstractclock.o(.constdata__ZTVN8touchgfx13AbstractClockE)
<LI> abstractdirectionprogress.o(.constdata__ZTVN8touchgfx25AbstractDirectionProgressE)
<LI> box.o(.constdata__ZTVN8touchgfx3BoxE)
<LI> canvaswidget.o(.constdata__ZTVN8touchgfx12CanvasWidgetE)
<LI> digitalclock.o(.constdata__ZTVN8touchgfx12DigitalClockE)
<LI> digitalclock.o(.constdata__ZTVN8touchgfx23TextAreaWithOneWildcardE)
<LI> container.o(.constdata__ZTVN8touchgfx9ContainerE)
<LI> abstractprogressindicator.o(.constdata__ZTVN8touchgfx25AbstractProgressIndicatorE)
<LI> drawable.o(.constdata__ZTVN8touchgfx8DrawableE)
<LI> imageprogress.o(.constdata__ZTVN8touchgfx13ImageProgressE)
<LI> image.o(.constdata__ZTVN8touchgfx5ImageE)
<LI> scalableimage.o(.constdata__ZTVN8touchgfx13ScalableImageE)
<LI> textareawithwildcard.o(.constdata__ZTVN8touchgfx24TextAreaWithWildcardBaseE)
<LI> screen1viewbase.o(.constdata__ZTVN8touchgfx6WidgetE)
<LI> screen1viewbase.o(.constdata__ZTVN8touchgfx24TextAreaWithTwoWildcardsE)
<LI> snapshotwidget.o(.constdata__ZTVN8touchgfx14SnapshotWidgetE)
<LI> tiledimage.o(.constdata__ZTVN8touchgfx10TiledImageE)
<LI> graphelements.o(.constdata__ZTVN8touchgfx16GraphElementLineE)
<LI> textarea.o(.constdata__ZTVN8touchgfx8TextAreaE)
</UL>
<P><STRONG><a name="[118]"></a>touchgfx::Drawable::handleTickEvent()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, abstractclock.o(i._ZN8touchgfx8Drawable15handleTickEventEv))
<BR>[Address Reference Count : 20]<UL><LI> texturemapper.o(.constdata__ZTVN8touchgfx13TextureMapperE)
<LI> abstractclock.o(.constdata__ZTVN8touchgfx13AbstractClockE)
<LI> box.o(.constdata__ZTVN8touchgfx3BoxE)
<LI> canvaswidget.o(.constdata__ZTVN8touchgfx12CanvasWidgetE)
<LI> abstractdatagraph.o(.constdata__ZTVN8touchgfx17AbstractDataGraphE)
<LI> abstractdatagraph.o(.constdata__ZTVN8touchgfx16DynamicDataGraphE)
<LI> digitalclock.o(.constdata__ZTVN8touchgfx12DigitalClockE)
<LI> digitalclock.o(.constdata__ZTVN8touchgfx23TextAreaWithOneWildcardE)
<LI> container.o(.constdata__ZTVN8touchgfx9ContainerE)
<LI> drawable.o(.constdata__ZTVN8touchgfx8DrawableE)
<LI> image.o(.constdata__ZTVN8touchgfx5ImageE)
<LI> scalableimage.o(.constdata__ZTVN8touchgfx13ScalableImageE)
<LI> textareawithwildcard.o(.constdata__ZTVN8touchgfx24TextAreaWithWildcardBaseE)
<LI> screen1viewbase.o(.constdata__ZTVN8touchgfx6WidgetE)
<LI> screen1viewbase.o(.constdata__ZTVN8touchgfx24TextAreaWithTwoWildcardsE)
<LI> screen1viewbase.o(.constdata__ZTVN8touchgfx11GraphScrollILs150EEE)
<LI> snapshotwidget.o(.constdata__ZTVN8touchgfx14SnapshotWidgetE)
<LI> tiledimage.o(.constdata__ZTVN8touchgfx10TiledImageE)
<LI> graphelements.o(.constdata__ZTVN8touchgfx16GraphElementLineE)
<LI> textarea.o(.constdata__ZTVN8touchgfx8TextAreaE)
</UL>
<P><STRONG><a name="[115]"></a>touchgfx::Drawable::handleClickEvent(const touchgfx::ClickEvent&)</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, abstractclock.o(i._ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE))
<BR>[Address Reference Count : 20]<UL><LI> texturemapper.o(.constdata__ZTVN8touchgfx13TextureMapperE)
<LI> abstractclock.o(.constdata__ZTVN8touchgfx13AbstractClockE)
<LI> abstractdirectionprogress.o(.constdata__ZTVN8touchgfx25AbstractDirectionProgressE)
<LI> box.o(.constdata__ZTVN8touchgfx3BoxE)
<LI> canvaswidget.o(.constdata__ZTVN8touchgfx12CanvasWidgetE)
<LI> digitalclock.o(.constdata__ZTVN8touchgfx12DigitalClockE)
<LI> digitalclock.o(.constdata__ZTVN8touchgfx23TextAreaWithOneWildcardE)
<LI> container.o(.constdata__ZTVN8touchgfx9ContainerE)
<LI> abstractprogressindicator.o(.constdata__ZTVN8touchgfx25AbstractProgressIndicatorE)
<LI> drawable.o(.constdata__ZTVN8touchgfx8DrawableE)
<LI> imageprogress.o(.constdata__ZTVN8touchgfx13ImageProgressE)
<LI> image.o(.constdata__ZTVN8touchgfx5ImageE)
<LI> scalableimage.o(.constdata__ZTVN8touchgfx13ScalableImageE)
<LI> textareawithwildcard.o(.constdata__ZTVN8touchgfx24TextAreaWithWildcardBaseE)
<LI> screen1viewbase.o(.constdata__ZTVN8touchgfx6WidgetE)
<LI> screen1viewbase.o(.constdata__ZTVN8touchgfx24TextAreaWithTwoWildcardsE)
<LI> snapshotwidget.o(.constdata__ZTVN8touchgfx14SnapshotWidgetE)
<LI> tiledimage.o(.constdata__ZTVN8touchgfx10TiledImageE)
<LI> graphelements.o(.constdata__ZTVN8touchgfx16GraphElementLineE)
<LI> textarea.o(.constdata__ZTVN8touchgfx8TextAreaE)
</UL>
<P><STRONG><a name="[116]"></a>touchgfx::Drawable::handleGestureEvent(const touchgfx::GestureEvent&)</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, abstractclock.o(i._ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE))
<BR>[Address Reference Count : 23]<UL><LI> texturemapper.o(.constdata__ZTVN8touchgfx13TextureMapperE)
<LI> abstractclock.o(.constdata__ZTVN8touchgfx13AbstractClockE)
<LI> abstractdirectionprogress.o(.constdata__ZTVN8touchgfx25AbstractDirectionProgressE)
<LI> box.o(.constdata__ZTVN8touchgfx3BoxE)
<LI> canvaswidget.o(.constdata__ZTVN8touchgfx12CanvasWidgetE)
<LI> abstractdatagraph.o(.constdata__ZTVN8touchgfx17AbstractDataGraphE)
<LI> abstractdatagraph.o(.constdata__ZTVN8touchgfx16DynamicDataGraphE)
<LI> digitalclock.o(.constdata__ZTVN8touchgfx12DigitalClockE)
<LI> digitalclock.o(.constdata__ZTVN8touchgfx23TextAreaWithOneWildcardE)
<LI> container.o(.constdata__ZTVN8touchgfx9ContainerE)
<LI> abstractprogressindicator.o(.constdata__ZTVN8touchgfx25AbstractProgressIndicatorE)
<LI> drawable.o(.constdata__ZTVN8touchgfx8DrawableE)
<LI> imageprogress.o(.constdata__ZTVN8touchgfx13ImageProgressE)
<LI> image.o(.constdata__ZTVN8touchgfx5ImageE)
<LI> scalableimage.o(.constdata__ZTVN8touchgfx13ScalableImageE)
<LI> textareawithwildcard.o(.constdata__ZTVN8touchgfx24TextAreaWithWildcardBaseE)
<LI> screen1viewbase.o(.constdata__ZTVN8touchgfx6WidgetE)
<LI> screen1viewbase.o(.constdata__ZTVN8touchgfx24TextAreaWithTwoWildcardsE)
<LI> screen1viewbase.o(.constdata__ZTVN8touchgfx11GraphScrollILs150EEE)
<LI> snapshotwidget.o(.constdata__ZTVN8touchgfx14SnapshotWidgetE)
<LI> tiledimage.o(.constdata__ZTVN8touchgfx10TiledImageE)
<LI> graphelements.o(.constdata__ZTVN8touchgfx16GraphElementLineE)
<LI> textarea.o(.constdata__ZTVN8touchgfx8TextAreaE)
</UL>
<P><STRONG><a name="[111]"></a>touchgfx::Drawable::setX(short)</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, abstractclock.o(i._ZN8touchgfx8Drawable4setXEs))
<BR>[Address Reference Count : 23]<UL><LI> texturemapper.o(.constdata__ZTVN8touchgfx13TextureMapperE)
<LI> abstractclock.o(.constdata__ZTVN8touchgfx13AbstractClockE)
<LI> abstractdirectionprogress.o(.constdata__ZTVN8touchgfx25AbstractDirectionProgressE)
<LI> box.o(.constdata__ZTVN8touchgfx3BoxE)
<LI> canvaswidget.o(.constdata__ZTVN8touchgfx12CanvasWidgetE)
<LI> abstractdatagraph.o(.constdata__ZTVN8touchgfx17AbstractDataGraphE)
<LI> abstractdatagraph.o(.constdata__ZTVN8touchgfx16DynamicDataGraphE)
<LI> digitalclock.o(.constdata__ZTVN8touchgfx12DigitalClockE)
<LI> digitalclock.o(.constdata__ZTVN8touchgfx23TextAreaWithOneWildcardE)
<LI> container.o(.constdata__ZTVN8touchgfx9ContainerE)
<LI> abstractprogressindicator.o(.constdata__ZTVN8touchgfx25AbstractProgressIndicatorE)
<LI> drawable.o(.constdata__ZTVN8touchgfx8DrawableE)
<LI> imageprogress.o(.constdata__ZTVN8touchgfx13ImageProgressE)
<LI> image.o(.constdata__ZTVN8touchgfx5ImageE)
<LI> scalableimage.o(.constdata__ZTVN8touchgfx13ScalableImageE)
<LI> textareawithwildcard.o(.constdata__ZTVN8touchgfx24TextAreaWithWildcardBaseE)
<LI> screen1viewbase.o(.constdata__ZTVN8touchgfx6WidgetE)
<LI> screen1viewbase.o(.constdata__ZTVN8touchgfx24TextAreaWithTwoWildcardsE)
<LI> screen1viewbase.o(.constdata__ZTVN8touchgfx11GraphScrollILs150EEE)
<LI> snapshotwidget.o(.constdata__ZTVN8touchgfx14SnapshotWidgetE)
<LI> tiledimage.o(.constdata__ZTVN8touchgfx10TiledImageE)
<LI> graphelements.o(.constdata__ZTVN8touchgfx16GraphElementLineE)
<LI> textarea.o(.constdata__ZTVN8touchgfx8TextAreaE)
</UL>
<P><STRONG><a name="[112]"></a>touchgfx::Drawable::setY(short)</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, abstractclock.o(i._ZN8touchgfx8Drawable4setYEs))
<BR>[Address Reference Count : 23]<UL><LI> texturemapper.o(.constdata__ZTVN8touchgfx13TextureMapperE)
<LI> abstractclock.o(.constdata__ZTVN8touchgfx13AbstractClockE)
<LI> abstractdirectionprogress.o(.constdata__ZTVN8touchgfx25AbstractDirectionProgressE)
<LI> box.o(.constdata__ZTVN8touchgfx3BoxE)
<LI> canvaswidget.o(.constdata__ZTVN8touchgfx12CanvasWidgetE)
<LI> abstractdatagraph.o(.constdata__ZTVN8touchgfx17AbstractDataGraphE)
<LI> abstractdatagraph.o(.constdata__ZTVN8touchgfx16DynamicDataGraphE)
<LI> digitalclock.o(.constdata__ZTVN8touchgfx12DigitalClockE)
<LI> digitalclock.o(.constdata__ZTVN8touchgfx23TextAreaWithOneWildcardE)
<LI> container.o(.constdata__ZTVN8touchgfx9ContainerE)
<LI> abstractprogressindicator.o(.constdata__ZTVN8touchgfx25AbstractProgressIndicatorE)
<LI> drawable.o(.constdata__ZTVN8touchgfx8DrawableE)
<LI> imageprogress.o(.constdata__ZTVN8touchgfx13ImageProgressE)
<LI> image.o(.constdata__ZTVN8touchgfx5ImageE)
<LI> scalableimage.o(.constdata__ZTVN8touchgfx13ScalableImageE)
<LI> textareawithwildcard.o(.constdata__ZTVN8touchgfx24TextAreaWithWildcardBaseE)
<LI> screen1viewbase.o(.constdata__ZTVN8touchgfx6WidgetE)
<LI> screen1viewbase.o(.constdata__ZTVN8touchgfx24TextAreaWithTwoWildcardsE)
<LI> screen1viewbase.o(.constdata__ZTVN8touchgfx11GraphScrollILs150EEE)
<LI> snapshotwidget.o(.constdata__ZTVN8touchgfx14SnapshotWidgetE)
<LI> tiledimage.o(.constdata__ZTVN8touchgfx10TiledImageE)
<LI> graphelements.o(.constdata__ZTVN8touchgfx16GraphElementLineE)
<LI> textarea.o(.constdata__ZTVN8touchgfx8TextAreaE)
</UL>
<P><STRONG><a name="[305]"></a>touchgfx::Drawable::setXY(short, short)</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, screen1viewbase.o(i._ZN8touchgfx8Drawable5setXYEss))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::Drawable::setXY(short, short)
</UL>
<BR>[Called By]<UL><LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1ViewBase::Screen1ViewBase()
</UL>

<P><STRONG><a name="[113]"></a>touchgfx::Drawable::setWidth(short)</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, abstractclock.o(i._ZN8touchgfx8Drawable8setWidthEs))
<BR>[Address Reference Count : 15]<UL><LI> texturemapper.o(.constdata__ZTVN8touchgfx13TextureMapperE)
<LI> abstractclock.o(.constdata__ZTVN8touchgfx13AbstractClockE)
<LI> abstractdirectionprogress.o(.constdata__ZTVN8touchgfx25AbstractDirectionProgressE)
<LI> box.o(.constdata__ZTVN8touchgfx3BoxE)
<LI> canvaswidget.o(.constdata__ZTVN8touchgfx12CanvasWidgetE)
<LI> container.o(.constdata__ZTVN8touchgfx9ContainerE)
<LI> abstractprogressindicator.o(.constdata__ZTVN8touchgfx25AbstractProgressIndicatorE)
<LI> drawable.o(.constdata__ZTVN8touchgfx8DrawableE)
<LI> imageprogress.o(.constdata__ZTVN8touchgfx13ImageProgressE)
<LI> image.o(.constdata__ZTVN8touchgfx5ImageE)
<LI> scalableimage.o(.constdata__ZTVN8touchgfx13ScalableImageE)
<LI> screen1viewbase.o(.constdata__ZTVN8touchgfx6WidgetE)
<LI> snapshotwidget.o(.constdata__ZTVN8touchgfx14SnapshotWidgetE)
<LI> tiledimage.o(.constdata__ZTVN8touchgfx10TiledImageE)
<LI> graphelements.o(.constdata__ZTVN8touchgfx16GraphElementLineE)
</UL>
<P><STRONG><a name="[114]"></a>touchgfx::Drawable::setHeight(short)</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, abstractclock.o(i._ZN8touchgfx8Drawable9setHeightEs))
<BR>[Address Reference Count : 15]<UL><LI> texturemapper.o(.constdata__ZTVN8touchgfx13TextureMapperE)
<LI> abstractclock.o(.constdata__ZTVN8touchgfx13AbstractClockE)
<LI> abstractdirectionprogress.o(.constdata__ZTVN8touchgfx25AbstractDirectionProgressE)
<LI> box.o(.constdata__ZTVN8touchgfx3BoxE)
<LI> canvaswidget.o(.constdata__ZTVN8touchgfx12CanvasWidgetE)
<LI> container.o(.constdata__ZTVN8touchgfx9ContainerE)
<LI> abstractprogressindicator.o(.constdata__ZTVN8touchgfx25AbstractProgressIndicatorE)
<LI> drawable.o(.constdata__ZTVN8touchgfx8DrawableE)
<LI> imageprogress.o(.constdata__ZTVN8touchgfx13ImageProgressE)
<LI> image.o(.constdata__ZTVN8touchgfx5ImageE)
<LI> scalableimage.o(.constdata__ZTVN8touchgfx13ScalableImageE)
<LI> screen1viewbase.o(.constdata__ZTVN8touchgfx6WidgetE)
<LI> snapshotwidget.o(.constdata__ZTVN8touchgfx14SnapshotWidgetE)
<LI> tiledimage.o(.constdata__ZTVN8touchgfx10TiledImageE)
<LI> graphelements.o(.constdata__ZTVN8touchgfx16GraphElementLineE)
</UL>
<P><STRONG><a name="[3ad]"></a>touchgfx::Drawable::Drawable__sub_object()</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, screen1viewbase.o(i._ZN8touchgfx8DrawableC2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::Drawable::Drawable__sub_object()
</UL>
<BR>[Calls]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::Rect()
</UL>
<BR>[Called By]<UL><LI><a href="#[37f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Widget::Widget__sub_object()
</UL>

<P><STRONG><a name="[388]"></a>touchgfx::Gestures::registerDragEvent(unsigned short, unsigned short, unsigned short, unsigned short)</STRONG> (Thumb, 134 bytes, Stack size 40 bytes, gestures.o(i._ZN8touchgfx8Gestures17registerDragEventEtttt))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = touchgfx::Gestures::registerDragEvent(unsigned short, unsigned short, unsigned short, unsigned short)
</UL>
<BR>[Called By]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::touch(int, int)
</UL>

<P><STRONG><a name="[389]"></a>touchgfx::Gestures::registerClickEvent(touchgfx::ClickEvent::ClickEventType, unsigned short, unsigned short)</STRONG> (Thumb, 178 bytes, Stack size 48 bytes, gestures.o(i._ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = touchgfx::Gestures::registerClickEvent(touchgfx::ClickEvent::ClickEventType, unsigned short, unsigned short)
</UL>
<BR>[Called By]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::noTouch()
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::touch(int, int)
</UL>

<P><STRONG><a name="[385]"></a>touchgfx::Gestures::registerEventListener(touchgfx::UIEventListener&)</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gestures.o(i._ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE))
<BR><BR>[Called By]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::registerEventListener(touchgfx::UIEventListener&)
</UL>

<P><STRONG><a name="[386]"></a>touchgfx::Gestures::tick()</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, gestures.o(i._ZN8touchgfx8Gestures4tickEv))
<BR><BR>[Called By]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::tick()
</UL>

<P><STRONG><a name="[3c0]"></a>touchgfx::LCD16bpp::blitCopyL8(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)</STRONG> (Thumb, 274 bytes, Stack size 24 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = touchgfx::LCD16bpp::blitCopyL8(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char) &rArr; touchgfx::LCD16bpp::blitCopyL8_ARGB8888(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
</UL>
<BR>[Calls]<UL><LI><a href="#[3c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyL8_ARGB8888(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
<LI><a href="#[3c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyL8_RGB888(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
<LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyL8_RGB565(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
</UL>
<BR>[Called By]<UL><LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::drawPartialBitmap(const touchgfx::Bitmap&, short, short, const touchgfx::Rect&, unsigned char, bool)
</UL>

<P><STRONG><a name="[412]"></a>touchgfx::LCD16bpp::div255_565(unsigned short, unsigned char)</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp10div255_565Eth))
<BR><BR>[Called By]<UL><LI><a href="#[3ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA::writePixelOnEdge(unsigned short*, const unsigned char*, const unsigned short*, short, short, int, int, unsigned char, unsigned char) const
<LI><a href="#[3e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA::writePixelOnEdge(unsigned short*, const unsigned short*, const unsigned char*, short, short, int, int, unsigned char, unsigned char, unsigned char) const
</UL>

<P><STRONG><a name="[413]"></a>touchgfx::LCD16bpp::div255_888(unsigned, unsigned char)</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp10div255_888Ejh))
<BR><BR>[Called By]<UL><LI><a href="#[3f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::writePixelOnEdge(unsigned short*, const unsigned char*, const unsigned*, short, short, int, int, unsigned char, unsigned char) const
<LI><a href="#[3f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::writePixel(unsigned short*, const unsigned char*, const unsigned*, short, int, int, unsigned char, unsigned char) const
<LI><a href="#[3f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA::writePixelOnEdge(unsigned short*, const unsigned char*, const unsigned*, short, short, int, int, unsigned char, unsigned char, unsigned char) const
<LI><a href="#[3f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA::writePixel(unsigned short*, const unsigned char*, const unsigned*, short, int, int, unsigned char, unsigned char, unsigned char) const
<LI><a href="#[3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::writePixelOnEdge(unsigned short*, const unsigned*, short, short, int, int, unsigned char, unsigned char) const
<LI><a href="#[3ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::writePixel(unsigned short*, const unsigned*, short, int, int, unsigned char, unsigned char) const
<LI><a href="#[3eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA::writePixelOnEdge(unsigned short*, const unsigned*, short, short, int, int, unsigned char, unsigned char, unsigned char) const
<LI><a href="#[3ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA::writePixel(unsigned short*, const unsigned*, short, int, int, unsigned char, unsigned char, unsigned char) const
</UL>

<P><STRONG><a name="[1e1]"></a>touchgfx::LCD16bpp::fillBuffer(unsigned char*, unsigned short, const touchgfx::Rect&, touchgfx::colortype, unsigned char)</STRONG> (Thumb, 434 bytes, Stack size 40 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = touchgfx::LCD16bpp::fillBuffer(unsigned char*, unsigned short, const touchgfx::Rect&, touchgfx::colortype, unsigned char)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bppE)
</UL>
<P><STRONG><a name="[3c4]"></a>touchgfx::LCD16bpp::blitCopyRGB888(const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)</STRONG> (Thumb, 504 bytes, Stack size 96 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = touchgfx::LCD16bpp::blitCopyRGB888(const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
</UL>
<BR>[Calls]<UL><LI><a href="#[3a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&, const touchgfx::Rect&)
<LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&)
<LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_memcpy4_8
</UL>
<BR>[Called By]<UL><LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::drawPartialBitmap(const touchgfx::Bitmap&, short, short, const touchgfx::Rect&, unsigned char, bool)
</UL>

<P><STRONG><a name="[3c5]"></a>touchgfx::LCD16bpp::blitCopyARGB8888(const unsigned*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)</STRONG> (Thumb, 484 bytes, Stack size 80 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKjRKNS_4RectES5_h))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = touchgfx::LCD16bpp::blitCopyARGB8888(const unsigned*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
</UL>
<BR>[Calls]<UL><LI><a href="#[3a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&, const touchgfx::Rect&)
<LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&)
<LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_memcpy4_8
</UL>
<BR>[Called By]<UL><LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::drawPartialBitmap(const touchgfx::Bitmap&, short, short, const touchgfx::Rect&, unsigned char, bool)
</UL>

<P><STRONG><a name="[1b7]"></a>touchgfx::LCD16bpp::DecompressorL8_L4::blitCopyRGB565(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)</STRONG> (Thumb, 496 bytes, Stack size 80 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = touchgfx::LCD16bpp::DecompressorL8_L4::blitCopyRGB565(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char) &rArr; touchgfx::LCD16bpp::DecompressorL8_L4::blendPixelRGB565(unsigned short, unsigned short, int, int) const
</UL>
<BR>[Calls]<UL><LI><a href="#[3a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&, const touchgfx::Rect&)
<LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&)
<LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_memcpy4_8
<LI><a href="#[3c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::DecompressorL8_L4::blendPixelRGB565(unsigned short, unsigned short, int, int) const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp17DecompressorL8_L4E)
</UL>
<P><STRONG><a name="[1b9]"></a>touchgfx::LCD16bpp::DecompressorL8_L4::blitCopyRGB888(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)</STRONG> (Thumb, 610 bytes, Stack size 80 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = touchgfx::LCD16bpp::DecompressorL8_L4::blitCopyRGB888(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char) &rArr; touchgfx::LCD16bpp::DecompressorL8_L4::blendPixelRGB888(const unsigned char*, unsigned short, unsigned char, unsigned char) const
</UL>
<BR>[Calls]<UL><LI><a href="#[3a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&, const touchgfx::Rect&)
<LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&)
<LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_memcpy4_8
<LI><a href="#[3c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::DecompressorL8_L4::blendPixelRGB888(const unsigned char*, unsigned short, unsigned char, unsigned char) const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp17DecompressorL8_L4E)
</UL>
<P><STRONG><a name="[1b8]"></a>touchgfx::LCD16bpp::DecompressorL8_L4::blitCopyARGB8888(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)</STRONG> (Thumb, 352 bytes, Stack size 80 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = touchgfx::LCD16bpp::DecompressorL8_L4::blitCopyARGB8888(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char) &rArr; touchgfx::LCD16bpp::DecompressorL8_L4::blendPixelARGB8888(unsigned, unsigned short, int, unsigned char) const
</UL>
<BR>[Calls]<UL><LI><a href="#[3a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&, const touchgfx::Rect&)
<LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&)
<LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_memcpy4_8
<LI><a href="#[3c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::DecompressorL8_L4::blendPixelARGB8888(unsigned, unsigned short, int, unsigned char) const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp17DecompressorL8_L4E)
</UL>
<P><STRONG><a name="[86]"></a>touchgfx::LCD16bpp::DecompressorL8_L4::~DecompressorL8_L4()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp17DecompressorL8_L4D1Ev))
<BR>[Address Reference Count : 2]<UL><LI> lcd16bpp.o(i._ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv)
<LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp17DecompressorL8_L4E)
</UL>
<P><STRONG><a name="[4d0]"></a>touchgfx::LCD16bpp::DecompressorL8_L4::~DecompressorL8_L4__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp17DecompressorL8_L4D1Ev), UNUSED)

<P><STRONG><a name="[3c1]"></a>touchgfx::LCD16bpp::blitCopyL8_RGB565(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)</STRONG> (Thumb, 416 bytes, Stack size 56 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = touchgfx::LCD16bpp::blitCopyL8_RGB565(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
</UL>
<BR>[Calls]<UL><LI><a href="#[3a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&, const touchgfx::Rect&)
<LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&)
<LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_memcpy4_8
</UL>
<BR>[Called By]<UL><LI><a href="#[3c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyL8(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
</UL>

<P><STRONG><a name="[3c3]"></a>touchgfx::LCD16bpp::blitCopyL8_RGB888(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)</STRONG> (Thumb, 536 bytes, Stack size 96 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = touchgfx::LCD16bpp::blitCopyL8_RGB888(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
</UL>
<BR>[Calls]<UL><LI><a href="#[3a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&, const touchgfx::Rect&)
<LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&)
<LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_memcpy4_8
</UL>
<BR>[Called By]<UL><LI><a href="#[3c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyL8(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
</UL>

<P><STRONG><a name="[1dc]"></a>touchgfx::LCD16bpp::drawPartialBitmap(const touchgfx::Bitmap&, short, short, const touchgfx::Rect&, unsigned char, bool)</STRONG> (Thumb, 918 bytes, Stack size 72 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = touchgfx::LCD16bpp::drawPartialBitmap(const touchgfx::Bitmap&, short, short, const touchgfx::Rect&, unsigned char, bool) &rArr; touchgfx::LCD16bpp::blitCopyL8(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char) &rArr; touchgfx::LCD16bpp::blitCopyL8_ARGB8888(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
</UL>
<BR>[Calls]<UL><LI><a href="#[32f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getHeight() const
<LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getFormat() const
<LI><a href="#[32e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getWidth() const
<LI><a href="#[3c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getData() const
<LI><a href="#[37d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::hasTransparentPixels() const
<LI><a href="#[3cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getSolidRect() const
<LI><a href="#[3ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getExtraData() const
<LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_memcpy4_8
<LI><a href="#[3cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyARGB8888Solid(const unsigned*, const touchgfx::Rect&, const touchgfx::Rect&) const
<LI><a href="#[3cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyAlphaPerPixel(const unsigned short*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
<LI><a href="#[3c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyARGB8888(const unsigned*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
<LI><a href="#[3c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyRGB888(const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
<LI><a href="#[3c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyL8(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::operator &=(const touchgfx::Rect&)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bppE)
</UL>
<P><STRONG><a name="[1ba]"></a>touchgfx::LCD16bpp::DecompressorL8_RLE::blitCopyRGB565(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)</STRONG> (Thumb, 620 bytes, Stack size 80 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = touchgfx::LCD16bpp::DecompressorL8_RLE::blitCopyRGB565(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
</UL>
<BR>[Calls]<UL><LI><a href="#[3a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&, const touchgfx::Rect&)
<LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&)
<LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_memcpy4_8
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp18DecompressorL8_RLEE)
</UL>
<P><STRONG><a name="[1bc]"></a>touchgfx::LCD16bpp::DecompressorL8_RLE::blitCopyRGB888(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)</STRONG> (Thumb, 666 bytes, Stack size 80 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = touchgfx::LCD16bpp::DecompressorL8_RLE::blitCopyRGB888(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
</UL>
<BR>[Calls]<UL><LI><a href="#[3a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&, const touchgfx::Rect&)
<LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&)
<LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_memcpy4_8
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp18DecompressorL8_RLEE)
</UL>
<P><STRONG><a name="[1bb]"></a>touchgfx::LCD16bpp::DecompressorL8_RLE::blitCopyARGB8888(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)</STRONG> (Thumb, 684 bytes, Stack size 80 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = touchgfx::LCD16bpp::DecompressorL8_RLE::blitCopyARGB8888(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
</UL>
<BR>[Calls]<UL><LI><a href="#[3a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&, const touchgfx::Rect&)
<LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&)
<LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_memcpy4_8
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp18DecompressorL8_RLEE)
</UL>
<P><STRONG><a name="[87]"></a>touchgfx::LCD16bpp::DecompressorL8_RLE::~DecompressorL8_RLE()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp18DecompressorL8_RLED1Ev))
<BR>[Address Reference Count : 2]<UL><LI> lcd16bpp.o(i._ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv)
<LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp18DecompressorL8_RLEE)
</UL>
<P><STRONG><a name="[4d1]"></a>touchgfx::LCD16bpp::DecompressorL8_RLE::~DecompressorL8_RLE__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp18DecompressorL8_RLED1Ev), UNUSED)

<P><STRONG><a name="[411]"></a>touchgfx::LCD16bpp::div255_565_FFcheck(unsigned short, unsigned char)</STRONG> (Thumb, 58 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp18div255_565_FFcheckEth))
<BR><BR>[Called By]<UL><LI><a href="#[3ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA::writePixel(unsigned short*, const unsigned char*, const unsigned short*, short, int, int, unsigned char, unsigned char) const
<LI><a href="#[3e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA::writePixel(unsigned short*, const unsigned short*, const unsigned char*, short, int, int, unsigned char, unsigned char, unsigned char) const
</UL>

<P><STRONG><a name="[1bd]"></a>touchgfx::LCD16bpp::DecompressorL8_LZW9::blitCopyRGB565(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)</STRONG> (Thumb, 998 bytes, Stack size 144 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = touchgfx::LCD16bpp::DecompressorL8_LZW9::blitCopyRGB565(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
</UL>
<BR>[Calls]<UL><LI><a href="#[3a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&, const touchgfx::Rect&)
<LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&)
<LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_memcpy4_8
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp19DecompressorL8_LZW9E)
</UL>
<P><STRONG><a name="[1bf]"></a>touchgfx::LCD16bpp::DecompressorL8_LZW9::blitCopyRGB888(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)</STRONG> (Thumb, 1032 bytes, Stack size 144 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = touchgfx::LCD16bpp::DecompressorL8_LZW9::blitCopyRGB888(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
</UL>
<BR>[Calls]<UL><LI><a href="#[3a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&, const touchgfx::Rect&)
<LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&)
<LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_memcpy4_8
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp19DecompressorL8_LZW9E)
</UL>
<P><STRONG><a name="[1be]"></a>touchgfx::LCD16bpp::DecompressorL8_LZW9::blitCopyARGB8888(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)</STRONG> (Thumb, 1034 bytes, Stack size 144 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = touchgfx::LCD16bpp::DecompressorL8_LZW9::blitCopyARGB8888(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
</UL>
<BR>[Calls]<UL><LI><a href="#[3a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&, const touchgfx::Rect&)
<LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&)
<LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_memcpy4_8
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp19DecompressorL8_LZW9E)
</UL>
<P><STRONG><a name="[88]"></a>touchgfx::LCD16bpp::DecompressorL8_LZW9::~DecompressorL8_LZW9()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp19DecompressorL8_LZW9D1Ev))
<BR>[Address Reference Count : 2]<UL><LI> lcd16bpp.o(i._ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv)
<LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp19DecompressorL8_LZW9E)
</UL>
<P><STRONG><a name="[4d2]"></a>touchgfx::LCD16bpp::DecompressorL8_LZW9::~DecompressorL8_LZW9__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp19DecompressorL8_LZW9D1Ev), UNUSED)

<P><STRONG><a name="[3c2]"></a>touchgfx::LCD16bpp::blitCopyL8_ARGB8888(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)</STRONG> (Thumb, 516 bytes, Stack size 96 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = touchgfx::LCD16bpp::blitCopyL8_ARGB8888(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
</UL>
<BR>[Calls]<UL><LI><a href="#[3a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&, const touchgfx::Rect&)
<LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&)
<LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_memcpy4_8
</UL>
<BR>[Called By]<UL><LI><a href="#[3c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyL8(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
</UL>

<P><STRONG><a name="[3e1]"></a>touchgfx::LCD16bpp::bilinearInterpolate8(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp20bilinearInterpolate8Ehhhhhh))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::LCD16bpp::bilinearInterpolate8(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)
</UL>
<BR>[Called By]<UL><LI><a href="#[3f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::writePixelOnEdge(unsigned short*, const unsigned char*, const unsigned*, short, short, int, int, unsigned char, unsigned char) const
<LI><a href="#[3f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::writePixel(unsigned short*, const unsigned char*, const unsigned*, short, int, int, unsigned char, unsigned char) const
<LI><a href="#[3f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA::writePixelOnEdge(unsigned short*, const unsigned char*, const unsigned*, short, short, int, int, unsigned char, unsigned char, unsigned char) const
<LI><a href="#[3f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA::writePixel(unsigned short*, const unsigned char*, const unsigned*, short, int, int, unsigned char, unsigned char, unsigned char) const
<LI><a href="#[3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::writePixelOnEdge(unsigned short*, const unsigned*, short, short, int, int, unsigned char, unsigned char) const
<LI><a href="#[3ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::writePixel(unsigned short*, const unsigned*, short, int, int, unsigned char, unsigned char) const
<LI><a href="#[3ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA::writePixelOnEdge(unsigned short*, const unsigned char*, const unsigned short*, short, short, int, int, unsigned char, unsigned char) const
<LI><a href="#[3ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA::writePixel(unsigned short*, const unsigned char*, const unsigned short*, short, int, int, unsigned char, unsigned char) const
<LI><a href="#[3ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA::writePixelOnEdge(unsigned short*, const unsigned char*, const unsigned char*, short, short, int, int, unsigned char, unsigned char) const
<LI><a href="#[3eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA::writePixelOnEdge(unsigned short*, const unsigned*, short, short, int, int, unsigned char, unsigned char, unsigned char) const
<LI><a href="#[3ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA::writePixel(unsigned short*, const unsigned*, short, int, int, unsigned char, unsigned char, unsigned char) const
<LI><a href="#[3e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA::writePixelOnEdge(unsigned short*, const unsigned short*, const unsigned char*, short, short, int, int, unsigned char, unsigned char, unsigned char) const
<LI><a href="#[3e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA::writePixel(unsigned short*, const unsigned short*, const unsigned char*, short, int, int, unsigned char, unsigned char, unsigned char) const
<LI><a href="#[3e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA::writePixelOnEdge(unsigned short*, const unsigned char*, const unsigned char*, short, short, int, int, unsigned char, unsigned char, unsigned char) const
<LI><a href="#[3e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA::writePixel(unsigned short*, const unsigned char*, const unsigned char*, short, int, int, unsigned char, unsigned char, unsigned char) const
<LI><a href="#[3e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_A4_BilinearInterpolation_NoGA::writePixelOnEdge(unsigned short*, const unsigned short*, short, short, short, int, int, unsigned char, unsigned char) const
<LI><a href="#[3e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_A4_BilinearInterpolation_GA::writePixelOnEdge(unsigned short*, const unsigned short*, short, short, short, int, int, unsigned char, unsigned char, unsigned char) const
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_A4_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_A4_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
</UL>

<P><STRONG><a name="[3cd]"></a>touchgfx::LCD16bpp::blitCopyAlphaPerPixel(const unsigned short*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)</STRONG> (Thumb, 574 bytes, Stack size 56 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = touchgfx::LCD16bpp::blitCopyAlphaPerPixel(const unsigned short*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
</UL>
<BR>[Calls]<UL><LI><a href="#[3a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&, const touchgfx::Rect&)
<LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&)
<LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_memcpy4_8
</UL>
<BR>[Called By]<UL><LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::drawPartialBitmap(const touchgfx::Bitmap&, short, short, const touchgfx::Rect&, unsigned char, bool)
</UL>

<P><STRONG><a name="[3e3]"></a>touchgfx::LCD16bpp::bilinearInterpolate565(unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, unsigned char)</STRONG> (Thumb, 132 bytes, Stack size 16 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp22bilinearInterpolate565Etttthh))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::LCD16bpp::bilinearInterpolate565(unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, unsigned char)
</UL>
<BR>[Called By]<UL><LI><a href="#[3ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA::writePixelOnEdge(unsigned short*, const unsigned char*, const unsigned short*, short, short, int, int, unsigned char, unsigned char) const
<LI><a href="#[3ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA::writePixel(unsigned short*, const unsigned char*, const unsigned short*, short, int, int, unsigned char, unsigned char) const
<LI><a href="#[3e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA::writePixelOnEdge(unsigned short*, const unsigned short*, const unsigned char*, short, short, int, int, unsigned char, unsigned char, unsigned char) const
<LI><a href="#[3e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA::writePixel(unsigned short*, const unsigned short*, const unsigned char*, short, int, int, unsigned char, unsigned char, unsigned char) const
<LI><a href="#[3e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA::writePixelOnEdge(unsigned short*, const unsigned char*, const unsigned short*, short, short, int, int, unsigned char, unsigned char, unsigned char) const
<LI><a href="#[3e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_BilinearInterpolation_GA::writePixelOnEdge(unsigned short*, const unsigned short*, short, short, int, int, unsigned char, unsigned char, unsigned char) const
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
</UL>

<P><STRONG><a name="[414]"></a>touchgfx::LCD16bpp::bilinearInterpolate888(unsigned, unsigned, unsigned, unsigned, unsigned char, unsigned char)</STRONG> (Thumb, 132 bytes, Stack size 32 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp22bilinearInterpolate888Ejjjjhh))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = touchgfx::LCD16bpp::bilinearInterpolate888(unsigned, unsigned, unsigned, unsigned, unsigned char, unsigned char)
</UL>
<BR>[Called By]<UL><LI><a href="#[3f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::writePixelOnEdge(unsigned short*, const unsigned char*, const unsigned*, short, short, int, int, unsigned char, unsigned char) const
<LI><a href="#[3f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::writePixel(unsigned short*, const unsigned char*, const unsigned*, short, int, int, unsigned char, unsigned char) const
<LI><a href="#[3f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA::writePixelOnEdge(unsigned short*, const unsigned char*, const unsigned*, short, short, int, int, unsigned char, unsigned char, unsigned char) const
<LI><a href="#[3f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA::writePixel(unsigned short*, const unsigned char*, const unsigned*, short, int, int, unsigned char, unsigned char, unsigned char) const
<LI><a href="#[3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::writePixelOnEdge(unsigned short*, const unsigned*, short, short, int, int, unsigned char, unsigned char) const
<LI><a href="#[3ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::writePixel(unsigned short*, const unsigned*, short, int, int, unsigned char, unsigned char) const
<LI><a href="#[3eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA::writePixelOnEdge(unsigned short*, const unsigned*, short, short, int, int, unsigned char, unsigned char, unsigned char) const
<LI><a href="#[3ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA::writePixel(unsigned short*, const unsigned*, short, int, int, unsigned char, unsigned char, unsigned char) const
</UL>

<P><STRONG><a name="[31e]"></a>touchgfx::LCD16bpp::enableTextureMapperAll()</STRONG> (Thumb, 90 bytes, Stack size 8 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = touchgfx::LCD16bpp::enableTextureMapperAll() &rArr; touchgfx::LCD16bpp::enableTextureMapperRGB565_NonOpaque_BilinearInterpolation() &rArr; __aeabi_atexit &rArr; malloc
</UL>
<BR>[Calls]<UL><LI><a href="#[3da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperRGB565_NonOpaque_BilinearInterpolation()
<LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperRGB565_Opaque_BilinearInterpolation()
<LI><a href="#[3d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperL8_ARGB8888_BilinearInterpolation()
<LI><a href="#[3db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperRGB565_NonOpaque_NearestNeighbor()
<LI><a href="#[3d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperL8_RGB888_BilinearInterpolation()
<LI><a href="#[3d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperL8_RGB565_BilinearInterpolation()
<LI><a href="#[3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperARGB8888_BilinearInterpolation()
<LI><a href="#[3d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperRGB565_Opaque_NearestNeighbor()
<LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperL8_ARGB8888_NearestNeighbor()
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperL8_RGB888_NearestNeighbor()
<LI><a href="#[3d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperL8_RGB565_NearestNeighbor()
<LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperARGB8888_NearestNeighbor()
<LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperA4_BilinearInterpolation()
<LI><a href="#[3cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperA4_NearestNeighbor()
</UL>
<BR>[Called By]<UL><LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplicationBase::FrontendApplicationBase(Model&, FrontendHeap&)
</UL>

<P><STRONG><a name="[31f]"></a>touchgfx::LCD16bpp::enableDecompressorL8_All()</STRONG> (Thumb, 142 bytes, Stack size 16 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = touchgfx::LCD16bpp::enableDecompressorL8_All() &rArr; __aeabi_atexit &rArr; malloc
</UL>
<BR>[Calls]<UL><LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_acquire
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_atexit
</UL>
<BR>[Called By]<UL><LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplicationBase::FrontendApplicationBase(Model&, FrontendHeap&)
</UL>

<P><STRONG><a name="[1e6]"></a>touchgfx::LCD16bpp::getTextureMapperDrawScanLine(const touchgfx::TextureSurface&, unsigned short, unsigned char)</STRONG> (Thumb, 362 bytes, Stack size 8 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::LCD16bpp::getTextureMapperDrawScanLine(const touchgfx::TextureSurface&, unsigned short, unsigned char)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bppE)
</UL>
<P><STRONG><a name="[1df]"></a>touchgfx::LCD16bpp::copyFrameBufferRegionToMemory(const touchgfx::Rect&, const touchgfx::Rect&, unsigned char*, short, short)</STRONG> (Thumb, 520 bytes, Stack size 88 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = touchgfx::LCD16bpp::copyFrameBufferRegionToMemory(const touchgfx::Rect&, const touchgfx::Rect&, unsigned char*, short, short) &rArr; touchgfx::Rect::operator &=(const touchgfx::Rect&)
</UL>
<BR>[Calls]<UL><LI><a href="#[3a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&, const touchgfx::Rect&)
<LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&)
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::operator &=(const touchgfx::Rect&)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bppE)
</UL>
<P><STRONG><a name="[1de]"></a>touchgfx::LCD16bpp::copyFrameBufferRegionToMemory(const touchgfx::Rect&, const touchgfx::Rect&, unsigned short)</STRONG> (Thumb, 108 bytes, Stack size 48 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = touchgfx::LCD16bpp::copyFrameBufferRegionToMemory(const touchgfx::Rect&, const touchgfx::Rect&, unsigned short) &rArr; touchgfx::Bitmap::getHeight() const
</UL>
<BR>[Calls]<UL><LI><a href="#[32f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getHeight() const
<LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getFormat() const
<LI><a href="#[32e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getWidth() const
<LI><a href="#[3c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getData() const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bppE)
</UL>
<P><STRONG><a name="[1c0]"></a>touchgfx::LCD16bpp::TextureMapper_A4_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)</STRONG> (Thumb, 784 bytes, Stack size 160 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_A4_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float) &rArr; touchgfx::LCD16bpp::DrawTextureMapScanLineBase16::overrunCheckNearestNeighbor(unsigned short*&, int&, int&, int&, int, int, short, short) const
</UL>
<BR>[Calls]<UL><LI><a href="#[3dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::DrawTextureMapScanLineBase16::overrunCheckNearestNeighbor(unsigned short*&, int&, int&, int&, int, int, short, short) const
<LI><a href="#[3dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::DrawTextureMapScanLineBase::drawTextureMapNextSubdivision(float&, float&, float&, float&, float&, float&, float, float&, float, float&, float, int, int&, int&, int&, int&)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAE)
</UL>
<P><STRONG><a name="[89]"></a>touchgfx::LCD16bpp::TextureMapper_A4_NearestNeighbor_GA::~TextureMapper_A4_NearestNeighbor_GA()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD1Ev))
<BR>[Address Reference Count : 2]<UL><LI> lcd16bpp.o(i._ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv)
<LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAE)
</UL>
<P><STRONG><a name="[4d3]"></a>touchgfx::LCD16bpp::TextureMapper_A4_NearestNeighbor_GA::~TextureMapper_A4_NearestNeighbor_GA__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD1Ev), UNUSED)

<P><STRONG><a name="[1c1]"></a>touchgfx::LCD16bpp::TextureMapper_A4_NearestNeighbor_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)</STRONG> (Thumb, 762 bytes, Stack size 160 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_A4_NearestNeighbor_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float) &rArr; touchgfx::LCD16bpp::DrawTextureMapScanLineBase16::overrunCheckNearestNeighbor(unsigned short*&, int&, int&, int&, int, int, short, short) const
</UL>
<BR>[Calls]<UL><LI><a href="#[3dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::DrawTextureMapScanLineBase16::overrunCheckNearestNeighbor(unsigned short*&, int&, int&, int&, int, int, short, short) const
<LI><a href="#[3dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::DrawTextureMapScanLineBase::drawTextureMapNextSubdivision(float&, float&, float&, float&, float&, float&, float, float&, float, float&, float, int, int&, int&, int&, int&)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAE)
</UL>
<P><STRONG><a name="[8a]"></a>touchgfx::LCD16bpp::TextureMapper_A4_NearestNeighbor_NoGA::~TextureMapper_A4_NearestNeighbor_NoGA()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD1Ev))
<BR>[Address Reference Count : 2]<UL><LI> lcd16bpp.o(i._ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv)
<LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAE)
</UL>
<P><STRONG><a name="[4d4]"></a>touchgfx::LCD16bpp::TextureMapper_A4_NearestNeighbor_NoGA::~TextureMapper_A4_NearestNeighbor_NoGA__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD1Ev), UNUSED)

<P><STRONG><a name="[3cf]"></a>touchgfx::LCD16bpp::enableTextureMapperA4_NearestNeighbor()</STRONG> (Thumb, 98 bytes, Stack size 16 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = touchgfx::LCD16bpp::enableTextureMapperA4_NearestNeighbor() &rArr; __aeabi_atexit &rArr; malloc
</UL>
<BR>[Calls]<UL><LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_acquire
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_atexit
</UL>
<BR>[Called By]<UL><LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperAll()
</UL>

<P><STRONG><a name="[1c2]"></a>touchgfx::LCD16bpp::TextureMapper_A4_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)</STRONG> (Thumb, 1002 bytes, Stack size 168 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_A4_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float) &rArr; touchgfx::LCD16bpp::TextureMapper_A4_BilinearInterpolation_GA::writePixelOnEdge(unsigned short*, const unsigned short*, short, short, short, int, int, unsigned char, unsigned char, unsigned char) const &rArr; touchgfx::LCD16bpp::bilinearInterpolate8(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)
</UL>
<BR>[Calls]<UL><LI><a href="#[3e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_A4_BilinearInterpolation_GA::writePixelOnEdge(unsigned short*, const unsigned short*, short, short, short, int, int, unsigned char, unsigned char, unsigned char) const
<LI><a href="#[3de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::DrawTextureMapScanLineBase16::overrunCheckBilinearInterpolation(unsigned short*&, int&, int&, int&, int, int, short, short) const
<LI><a href="#[3e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::bilinearInterpolate8(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)
<LI><a href="#[3dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::DrawTextureMapScanLineBase::drawTextureMapNextSubdivision(float&, float&, float&, float&, float&, float&, float, float&, float, float&, float, int, int&, int&, int&, int&)
<LI><a href="#[3df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::getAlphaFromA4(const unsigned short*, unsigned)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAE)
</UL>
<P><STRONG><a name="[8b]"></a>touchgfx::LCD16bpp::TextureMapper_A4_BilinearInterpolation_GA::~TextureMapper_A4_BilinearInterpolation_GA()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD1Ev))
<BR>[Address Reference Count : 2]<UL><LI> lcd16bpp.o(i._ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv)
<LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAE)
</UL>
<P><STRONG><a name="[4d5]"></a>touchgfx::LCD16bpp::TextureMapper_A4_BilinearInterpolation_GA::~TextureMapper_A4_BilinearInterpolation_GA__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD1Ev), UNUSED)

<P><STRONG><a name="[1c3]"></a>touchgfx::LCD16bpp::TextureMapper_A4_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)</STRONG> (Thumb, 982 bytes, Stack size 168 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_A4_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float) &rArr; touchgfx::LCD16bpp::TextureMapper_A4_BilinearInterpolation_NoGA::writePixelOnEdge(unsigned short*, const unsigned short*, short, short, short, int, int, unsigned char, unsigned char) const &rArr; touchgfx::LCD16bpp::bilinearInterpolate8(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)
</UL>
<BR>[Calls]<UL><LI><a href="#[3e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_A4_BilinearInterpolation_NoGA::writePixelOnEdge(unsigned short*, const unsigned short*, short, short, short, int, int, unsigned char, unsigned char) const
<LI><a href="#[3de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::DrawTextureMapScanLineBase16::overrunCheckBilinearInterpolation(unsigned short*&, int&, int&, int&, int, int, short, short) const
<LI><a href="#[3e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::bilinearInterpolate8(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)
<LI><a href="#[3dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::DrawTextureMapScanLineBase::drawTextureMapNextSubdivision(float&, float&, float&, float&, float&, float&, float, float&, float, float&, float, int, int&, int&, int&, int&)
<LI><a href="#[3df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::getAlphaFromA4(const unsigned short*, unsigned)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAE)
</UL>
<P><STRONG><a name="[8c]"></a>touchgfx::LCD16bpp::TextureMapper_A4_BilinearInterpolation_NoGA::~TextureMapper_A4_BilinearInterpolation_NoGA()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD1Ev))
<BR>[Address Reference Count : 2]<UL><LI> lcd16bpp.o(i._ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv)
<LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAE)
</UL>
<P><STRONG><a name="[4d6]"></a>touchgfx::LCD16bpp::TextureMapper_A4_BilinearInterpolation_NoGA::~TextureMapper_A4_BilinearInterpolation_NoGA__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD1Ev), UNUSED)

<P><STRONG><a name="[3ce]"></a>touchgfx::LCD16bpp::enableTextureMapperA4_BilinearInterpolation()</STRONG> (Thumb, 98 bytes, Stack size 16 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = touchgfx::LCD16bpp::enableTextureMapperA4_BilinearInterpolation() &rArr; __aeabi_atexit &rArr; malloc
</UL>
<BR>[Calls]<UL><LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_acquire
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_atexit
</UL>
<BR>[Called By]<UL><LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperAll()
</UL>

<P><STRONG><a name="[3d1]"></a>touchgfx::LCD16bpp::enableTextureMapperARGB8888_NearestNeighbor()</STRONG> (Thumb, 98 bytes, Stack size 16 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = touchgfx::LCD16bpp::enableTextureMapperARGB8888_NearestNeighbor() &rArr; __aeabi_atexit &rArr; malloc
</UL>
<BR>[Calls]<UL><LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_acquire
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_atexit
</UL>
<BR>[Called By]<UL><LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperAll()
</UL>

<P><STRONG><a name="[3d5]"></a>touchgfx::LCD16bpp::enableTextureMapperL8_RGB565_NearestNeighbor()</STRONG> (Thumb, 94 bytes, Stack size 16 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = touchgfx::LCD16bpp::enableTextureMapperL8_RGB565_NearestNeighbor() &rArr; __aeabi_atexit &rArr; malloc
</UL>
<BR>[Calls]<UL><LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_acquire
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_atexit
</UL>
<BR>[Called By]<UL><LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperAll()
</UL>

<P><STRONG><a name="[3d7]"></a>touchgfx::LCD16bpp::enableTextureMapperL8_RGB888_NearestNeighbor()</STRONG> (Thumb, 98 bytes, Stack size 16 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = touchgfx::LCD16bpp::enableTextureMapperL8_RGB888_NearestNeighbor() &rArr; __aeabi_atexit &rArr; malloc
</UL>
<BR>[Calls]<UL><LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_acquire
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_atexit
</UL>
<BR>[Called By]<UL><LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperAll()
</UL>

<P><STRONG><a name="[1c4]"></a>touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)</STRONG> (Thumb, 618 bytes, Stack size 160 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float) &rArr; touchgfx::LCD16bpp::DrawTextureMapScanLineBase16::overrunCheckNearestNeighbor(unsigned short*&, int&, int&, int&, int, int, short, short) const
</UL>
<BR>[Calls]<UL><LI><a href="#[3dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::DrawTextureMapScanLineBase16::overrunCheckNearestNeighbor(unsigned short*&, int&, int&, int&, int, int, short, short) const
<LI><a href="#[3dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::DrawTextureMapScanLineBase::drawTextureMapNextSubdivision(float&, float&, float&, float&, float&, float&, float, float&, float, float&, float, int, int&, int&, int&, int&)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAE)
</UL>
<P><STRONG><a name="[95]"></a>touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_NearestNeighbor_GA::~TextureMapper_RGB565_Opaque_NearestNeighbor_GA()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD1Ev))
<BR>[Address Reference Count : 2]<UL><LI> lcd16bpp.o(i._ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv)
<LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAE)
</UL>
<P><STRONG><a name="[4d7]"></a>touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_NearestNeighbor_GA::~TextureMapper_RGB565_Opaque_NearestNeighbor_GA__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD1Ev), UNUSED)

<P><STRONG><a name="[3d3]"></a>touchgfx::LCD16bpp::enableTextureMapperL8_ARGB8888_NearestNeighbor()</STRONG> (Thumb, 98 bytes, Stack size 16 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = touchgfx::LCD16bpp::enableTextureMapperL8_ARGB8888_NearestNeighbor() &rArr; __aeabi_atexit &rArr; malloc
</UL>
<BR>[Calls]<UL><LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_acquire
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_atexit
</UL>
<BR>[Called By]<UL><LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperAll()
</UL>

<P><STRONG><a name="[1c5]"></a>touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)</STRONG> (Thumb, 370 bytes, Stack size 160 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float) &rArr; touchgfx::LCD16bpp::DrawTextureMapScanLineBase16::overrunCheckNearestNeighbor(unsigned short*&, int&, int&, int&, int, int, short, short) const
</UL>
<BR>[Calls]<UL><LI><a href="#[3dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::DrawTextureMapScanLineBase16::overrunCheckNearestNeighbor(unsigned short*&, int&, int&, int&, int, int, short, short) const
<LI><a href="#[3dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::DrawTextureMapScanLineBase::drawTextureMapNextSubdivision(float&, float&, float&, float&, float&, float&, float, float&, float, float&, float, int, int&, int&, int&, int&)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAE)
</UL>
<P><STRONG><a name="[96]"></a>touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA::~TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD1Ev))
<BR>[Address Reference Count : 2]<UL><LI> lcd16bpp.o(i._ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv)
<LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAE)
</UL>
<P><STRONG><a name="[4d8]"></a>touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA::~TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD1Ev), UNUSED)

<P><STRONG><a name="[3d9]"></a>touchgfx::LCD16bpp::enableTextureMapperRGB565_Opaque_NearestNeighbor()</STRONG> (Thumb, 98 bytes, Stack size 16 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = touchgfx::LCD16bpp::enableTextureMapperRGB565_Opaque_NearestNeighbor() &rArr; __aeabi_atexit &rArr; malloc
</UL>
<BR>[Calls]<UL><LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_acquire
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_atexit
</UL>
<BR>[Called By]<UL><LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperAll()
</UL>

<P><STRONG><a name="[1c6]"></a>touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)</STRONG> (Thumb, 632 bytes, Stack size 160 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float) &rArr; touchgfx::LCD16bpp::DrawTextureMapScanLineBase16::overrunCheckNearestNeighbor(unsigned short*&, int&, int&, int&, int, int, short, short) const
</UL>
<BR>[Calls]<UL><LI><a href="#[3dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::DrawTextureMapScanLineBase16::overrunCheckNearestNeighbor(unsigned short*&, int&, int&, int&, int, int, short, short) const
<LI><a href="#[3dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::DrawTextureMapScanLineBase::drawTextureMapNextSubdivision(float&, float&, float&, float&, float&, float&, float, float&, float, float&, float, int, int&, int&, int&, int&)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAE)
</UL>
<P><STRONG><a name="[8f]"></a>touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA::~TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD1Ev))
<BR>[Address Reference Count : 2]<UL><LI> lcd16bpp.o(i._ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv)
<LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAE)
</UL>
<P><STRONG><a name="[4d9]"></a>touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA::~TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD1Ev), UNUSED)

<P><STRONG><a name="[1c7]"></a>touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)</STRONG> (Thumb, 626 bytes, Stack size 160 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float) &rArr; touchgfx::LCD16bpp::DrawTextureMapScanLineBase16::overrunCheckNearestNeighbor(unsigned short*&, int&, int&, int&, int, int, short, short) const
</UL>
<BR>[Calls]<UL><LI><a href="#[3dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::DrawTextureMapScanLineBase16::overrunCheckNearestNeighbor(unsigned short*&, int&, int&, int&, int, int, short, short) const
<LI><a href="#[3dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::DrawTextureMapScanLineBase::drawTextureMapNextSubdivision(float&, float&, float&, float&, float&, float&, float, float&, float, float&, float, int, int&, int&, int&, int&)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAE)
</UL>
<P><STRONG><a name="[91]"></a>touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA::~TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD1Ev))
<BR>[Address Reference Count : 2]<UL><LI> lcd16bpp.o(i._ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv)
<LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAE)
</UL>
<P><STRONG><a name="[4da]"></a>touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA::~TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD1Ev), UNUSED)

<P><STRONG><a name="[1c8]"></a>touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)</STRONG> (Thumb, 664 bytes, Stack size 160 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float) &rArr; touchgfx::LCD16bpp::DrawTextureMapScanLineBase16::overrunCheckNearestNeighbor(unsigned short*&, int&, int&, int&, int, int, short, short) const
</UL>
<BR>[Calls]<UL><LI><a href="#[3dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::DrawTextureMapScanLineBase16::overrunCheckNearestNeighbor(unsigned short*&, int&, int&, int&, int, int, short, short) const
<LI><a href="#[3dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::DrawTextureMapScanLineBase::drawTextureMapNextSubdivision(float&, float&, float&, float&, float&, float&, float, float&, float, float&, float, int, int&, int&, int&, int&)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAE)
</UL>
<P><STRONG><a name="[9d]"></a>touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA::~TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD1Ev))
<BR>[Address Reference Count : 2]<UL><LI> lcd16bpp.o(i._ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv)
<LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAE)
</UL>
<P><STRONG><a name="[4db]"></a>touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA::~TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD1Ev), UNUSED)

<P><STRONG><a name="[3d0]"></a>touchgfx::LCD16bpp::enableTextureMapperARGB8888_BilinearInterpolation()</STRONG> (Thumb, 98 bytes, Stack size 16 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = touchgfx::LCD16bpp::enableTextureMapperARGB8888_BilinearInterpolation() &rArr; __aeabi_atexit &rArr; malloc
</UL>
<BR>[Calls]<UL><LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_acquire
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_atexit
</UL>
<BR>[Called By]<UL><LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperAll()
</UL>

<P><STRONG><a name="[3d4]"></a>touchgfx::LCD16bpp::enableTextureMapperL8_RGB565_BilinearInterpolation()</STRONG> (Thumb, 90 bytes, Stack size 16 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = touchgfx::LCD16bpp::enableTextureMapperL8_RGB565_BilinearInterpolation() &rArr; __aeabi_atexit &rArr; malloc
</UL>
<BR>[Calls]<UL><LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_acquire
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_atexit
</UL>
<BR>[Called By]<UL><LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperAll()
</UL>

<P><STRONG><a name="[3d6]"></a>touchgfx::LCD16bpp::enableTextureMapperL8_RGB888_BilinearInterpolation()</STRONG> (Thumb, 98 bytes, Stack size 16 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = touchgfx::LCD16bpp::enableTextureMapperL8_RGB888_BilinearInterpolation() &rArr; __aeabi_atexit &rArr; malloc
</UL>
<BR>[Calls]<UL><LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_acquire
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_atexit
</UL>
<BR>[Called By]<UL><LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperAll()
</UL>

<P><STRONG><a name="[1c9]"></a>touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)</STRONG> (Thumb, 742 bytes, Stack size 160 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float) &rArr; touchgfx::LCD16bpp::DrawTextureMapScanLineBase16::overrunCheckNearestNeighbor(unsigned short*&, int&, int&, int&, int, int, short, short) const
</UL>
<BR>[Calls]<UL><LI><a href="#[3dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::DrawTextureMapScanLineBase16::overrunCheckNearestNeighbor(unsigned short*&, int&, int&, int&, int, int, short, short) const
<LI><a href="#[3dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::DrawTextureMapScanLineBase::drawTextureMapNextSubdivision(float&, float&, float&, float&, float&, float&, float, float&, float, float&, float, int, int&, int&, int&, int&)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAE)
</UL>
<P><STRONG><a name="[8d]"></a>touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA::~TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev))
<BR>[Address Reference Count : 2]<UL><LI> lcd16bpp.o(i._ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv)
<LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAE)
</UL>
<P><STRONG><a name="[4dc]"></a>touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA::~TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev), UNUSED)

<P><STRONG><a name="[1ca]"></a>touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)</STRONG> (Thumb, 374 bytes, Stack size 160 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float) &rArr; touchgfx::LCD16bpp::DrawTextureMapScanLineBase16::overrunCheckNearestNeighbor(unsigned short*&, int&, int&, int&, int, int, short, short) const
</UL>
<BR>[Calls]<UL><LI><a href="#[3dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::DrawTextureMapScanLineBase16::overrunCheckNearestNeighbor(unsigned short*&, int&, int&, int&, int, int, short, short) const
<LI><a href="#[3dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::DrawTextureMapScanLineBase::drawTextureMapNextSubdivision(float&, float&, float&, float&, float&, float&, float, float&, float, float&, float, int, int&, int&, int&, int&)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAE)
</UL>
<P><STRONG><a name="[90]"></a>touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA::~TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD1Ev))
<BR>[Address Reference Count : 2]<UL><LI> lcd16bpp.o(i._ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv)
<LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAE)
</UL>
<P><STRONG><a name="[4dd]"></a>touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA::~TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD1Ev), UNUSED)

<P><STRONG><a name="[1cb]"></a>touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)</STRONG> (Thumb, 434 bytes, Stack size 160 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float) &rArr; touchgfx::LCD16bpp::DrawTextureMapScanLineBase16::overrunCheckNearestNeighbor(unsigned short*&, int&, int&, int&, int, int, short, short) const
</UL>
<BR>[Calls]<UL><LI><a href="#[3dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::DrawTextureMapScanLineBase16::overrunCheckNearestNeighbor(unsigned short*&, int&, int&, int&, int, int, short, short) const
<LI><a href="#[3dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::DrawTextureMapScanLineBase::drawTextureMapNextSubdivision(float&, float&, float&, float&, float&, float&, float, float&, float, float&, float, int, int&, int&, int&, int&)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAE)
</UL>
<P><STRONG><a name="[92]"></a>touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA::~TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD1Ev))
<BR>[Address Reference Count : 2]<UL><LI> lcd16bpp.o(i._ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv)
<LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAE)
</UL>
<P><STRONG><a name="[4de]"></a>touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA::~TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD1Ev), UNUSED)

<P><STRONG><a name="[1cc]"></a>touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)</STRONG> (Thumb, 678 bytes, Stack size 160 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float) &rArr; touchgfx::LCD16bpp::DrawTextureMapScanLineBase16::overrunCheckNearestNeighbor(unsigned short*&, int&, int&, int&, int, int, short, short) const
</UL>
<BR>[Calls]<UL><LI><a href="#[3dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::DrawTextureMapScanLineBase16::overrunCheckNearestNeighbor(unsigned short*&, int&, int&, int&, int, int, short, short) const
<LI><a href="#[3dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::DrawTextureMapScanLineBase::drawTextureMapNextSubdivision(float&, float&, float&, float&, float&, float&, float, float&, float, float&, float, int, int&, int&, int&, int&)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAE)
</UL>
<P><STRONG><a name="[9e]"></a>touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA::~TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD1Ev))
<BR>[Address Reference Count : 2]<UL><LI> lcd16bpp.o(i._ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv)
<LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAE)
</UL>
<P><STRONG><a name="[4df]"></a>touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA::~TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD1Ev), UNUSED)

<P><STRONG><a name="[3db]"></a>touchgfx::LCD16bpp::enableTextureMapperRGB565_NonOpaque_NearestNeighbor()</STRONG> (Thumb, 98 bytes, Stack size 16 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = touchgfx::LCD16bpp::enableTextureMapperRGB565_NonOpaque_NearestNeighbor() &rArr; __aeabi_atexit &rArr; malloc
</UL>
<BR>[Calls]<UL><LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_acquire
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_atexit
</UL>
<BR>[Called By]<UL><LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperAll()
</UL>

<P><STRONG><a name="[1cd]"></a>touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)</STRONG> (Thumb, 768 bytes, Stack size 160 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float) &rArr; touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_BilinearInterpolation_GA::writePixelOnEdge(unsigned short*, const unsigned short*, short, short, int, int, unsigned char, unsigned char, unsigned char) const &rArr; touchgfx::LCD16bpp::bilinearInterpolate565(unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, unsigned char)
</UL>
<BR>[Calls]<UL><LI><a href="#[3e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_BilinearInterpolation_GA::writePixelOnEdge(unsigned short*, const unsigned short*, short, short, int, int, unsigned char, unsigned char, unsigned char) const
<LI><a href="#[3de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::DrawTextureMapScanLineBase16::overrunCheckBilinearInterpolation(unsigned short*&, int&, int&, int&, int, int, short, short) const
<LI><a href="#[3e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::bilinearInterpolate565(unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, unsigned char)
<LI><a href="#[3dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::DrawTextureMapScanLineBase::drawTextureMapNextSubdivision(float&, float&, float&, float&, float&, float&, float, float&, float, float&, float, int, int&, int&, int&, int&)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAE)
</UL>
<P><STRONG><a name="[a1]"></a>touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_BilinearInterpolation_GA::~TextureMapper_RGB565_Opaque_BilinearInterpolation_GA()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD1Ev))
<BR>[Address Reference Count : 2]<UL><LI> lcd16bpp.o(i._ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv)
<LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAE)
</UL>
<P><STRONG><a name="[4e0]"></a>touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_BilinearInterpolation_GA::~TextureMapper_RGB565_Opaque_BilinearInterpolation_GA__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD1Ev), UNUSED)

<P><STRONG><a name="[3d2]"></a>touchgfx::LCD16bpp::enableTextureMapperL8_ARGB8888_BilinearInterpolation()</STRONG> (Thumb, 98 bytes, Stack size 16 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = touchgfx::LCD16bpp::enableTextureMapperL8_ARGB8888_BilinearInterpolation() &rArr; __aeabi_atexit &rArr; malloc
</UL>
<BR>[Calls]<UL><LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_acquire
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_atexit
</UL>
<BR>[Called By]<UL><LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperAll()
</UL>

<P><STRONG><a name="[1ce]"></a>touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)</STRONG> (Thumb, 720 bytes, Stack size 160 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float) &rArr; touchgfx::LCD16bpp::DrawTextureMapScanLineBase16::overrunCheckNearestNeighbor(unsigned short*&, int&, int&, int&, int, int, short, short) const
</UL>
<BR>[Calls]<UL><LI><a href="#[3dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::DrawTextureMapScanLineBase16::overrunCheckNearestNeighbor(unsigned short*&, int&, int&, int&, int, int, short, short) const
<LI><a href="#[3dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::DrawTextureMapScanLineBase::drawTextureMapNextSubdivision(float&, float&, float&, float&, float&, float&, float, float&, float, float&, float, int, int&, int&, int&, int&)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAE)
</UL>
<P><STRONG><a name="[8e]"></a>touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA::~TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev))
<BR>[Address Reference Count : 2]<UL><LI> lcd16bpp.o(i._ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv)
<LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAE)
</UL>
<P><STRONG><a name="[4e1]"></a>touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA::~TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev), UNUSED)

<P><STRONG><a name="[1cf]"></a>touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)</STRONG> (Thumb, 672 bytes, Stack size 160 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float) &rArr; touchgfx::LCD16bpp::DrawTextureMapScanLineBase16::overrunCheckNearestNeighbor(unsigned short*&, int&, int&, int&, int, int, short, short) const
</UL>
<BR>[Calls]<UL><LI><a href="#[3dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::DrawTextureMapScanLineBase16::overrunCheckNearestNeighbor(unsigned short*&, int&, int&, int&, int, int, short, short) const
<LI><a href="#[3dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::DrawTextureMapScanLineBase::drawTextureMapNextSubdivision(float&, float&, float&, float&, float&, float&, float, float&, float, float&, float, int, int&, int&, int&, int&)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAE)
</UL>
<P><STRONG><a name="[93]"></a>touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA::~TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev))
<BR>[Address Reference Count : 2]<UL><LI> lcd16bpp.o(i._ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv)
<LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAE)
</UL>
<P><STRONG><a name="[4e2]"></a>touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA::~TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev), UNUSED)

<P><STRONG><a name="[1d0]"></a>touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)</STRONG> (Thumb, 638 bytes, Stack size 160 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float) &rArr; touchgfx::LCD16bpp::DrawTextureMapScanLineBase16::overrunCheckBilinearInterpolation(unsigned short*&, int&, int&, int&, int, int, short, short) const
</UL>
<BR>[Calls]<UL><LI><a href="#[3de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::DrawTextureMapScanLineBase16::overrunCheckBilinearInterpolation(unsigned short*&, int&, int&, int&, int, int, short, short) const
<LI><a href="#[3e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::bilinearInterpolate565(unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, unsigned char)
<LI><a href="#[3dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::DrawTextureMapScanLineBase::drawTextureMapNextSubdivision(float&, float&, float&, float&, float&, float&, float, float&, float, float&, float, int, int&, int&, int&, int&)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAE)
</UL>
<P><STRONG><a name="[a2]"></a>touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA::~TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev))
<BR>[Address Reference Count : 2]<UL><LI> lcd16bpp.o(i._ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv)
<LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAE)
</UL>
<P><STRONG><a name="[4e3]"></a>touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA::~TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev), UNUSED)

<P><STRONG><a name="[3d8]"></a>touchgfx::LCD16bpp::enableTextureMapperRGB565_Opaque_BilinearInterpolation()</STRONG> (Thumb, 98 bytes, Stack size 16 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = touchgfx::LCD16bpp::enableTextureMapperRGB565_Opaque_BilinearInterpolation() &rArr; __aeabi_atexit &rArr; malloc
</UL>
<BR>[Calls]<UL><LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_acquire
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_atexit
</UL>
<BR>[Called By]<UL><LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperAll()
</UL>

<P><STRONG><a name="[1d1]"></a>touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)</STRONG> (Thumb, 824 bytes, Stack size 160 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float) &rArr; touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA::writePixelOnEdge(unsigned short*, const unsigned char*, const unsigned short*, short, short, int, int, unsigned char, unsigned char, unsigned char) const &rArr; touchgfx::LCD16bpp::bilinearInterpolate565(unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, unsigned char)
</UL>
<BR>[Calls]<UL><LI><a href="#[3e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA::writePixelOnEdge(unsigned short*, const unsigned char*, const unsigned short*, short, short, int, int, unsigned char, unsigned char, unsigned char) const
<LI><a href="#[3de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::DrawTextureMapScanLineBase16::overrunCheckBilinearInterpolation(unsigned short*&, int&, int&, int&, int, int, short, short) const
<LI><a href="#[3e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::bilinearInterpolate565(unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, unsigned char)
<LI><a href="#[3dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::DrawTextureMapScanLineBase::drawTextureMapNextSubdivision(float&, float&, float&, float&, float&, float&, float, float&, float, float&, float, int, int&, int&, int&, int&)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAE)
</UL>
<P><STRONG><a name="[99]"></a>touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA::~TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD1Ev))
<BR>[Address Reference Count : 2]<UL><LI> lcd16bpp.o(i._ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv)
<LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAE)
</UL>
<P><STRONG><a name="[4e4]"></a>touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA::~TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD1Ev), UNUSED)

<P><STRONG><a name="[1d2]"></a>touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)</STRONG> (Thumb, 486 bytes, Stack size 168 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float) &rArr; touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA::writePixelOnEdge(unsigned short*, const unsigned char*, const unsigned char*, short, short, int, int, unsigned char, unsigned char, unsigned char) const &rArr; touchgfx::LCD16bpp::bilinearInterpolate8(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)
</UL>
<BR>[Calls]<UL><LI><a href="#[3e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA::writePixelOnEdge(unsigned short*, const unsigned char*, const unsigned char*, short, short, int, int, unsigned char, unsigned char, unsigned char) const
<LI><a href="#[3e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA::writePixel(unsigned short*, const unsigned char*, const unsigned char*, short, int, int, unsigned char, unsigned char, unsigned char) const
<LI><a href="#[3de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::DrawTextureMapScanLineBase16::overrunCheckBilinearInterpolation(unsigned short*&, int&, int&, int&, int, int, short, short) const
<LI><a href="#[3dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::DrawTextureMapScanLineBase::drawTextureMapNextSubdivision(float&, float&, float&, float&, float&, float&, float, float&, float, float&, float, int, int&, int&, int&, int&)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAE)
</UL>
<P><STRONG><a name="[9b]"></a>touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA::~TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD1Ev))
<BR>[Address Reference Count : 2]<UL><LI> lcd16bpp.o(i._ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv)
<LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAE)
</UL>
<P><STRONG><a name="[4e5]"></a>touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA::~TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD1Ev), UNUSED)

<P><STRONG><a name="[1d3]"></a>touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)</STRONG> (Thumb, 484 bytes, Stack size 168 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float) &rArr; touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA::writePixelOnEdge(unsigned short*, const unsigned short*, const unsigned char*, short, short, int, int, unsigned char, unsigned char, unsigned char) const &rArr; touchgfx::LCD16bpp::bilinearInterpolate565(unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, unsigned char)
</UL>
<BR>[Calls]<UL><LI><a href="#[3e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA::writePixelOnEdge(unsigned short*, const unsigned short*, const unsigned char*, short, short, int, int, unsigned char, unsigned char, unsigned char) const
<LI><a href="#[3e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA::writePixel(unsigned short*, const unsigned short*, const unsigned char*, short, int, int, unsigned char, unsigned char, unsigned char) const
<LI><a href="#[3de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::DrawTextureMapScanLineBase16::overrunCheckBilinearInterpolation(unsigned short*&, int&, int&, int&, int, int, short, short) const
<LI><a href="#[3dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::DrawTextureMapScanLineBase::drawTextureMapNextSubdivision(float&, float&, float&, float&, float&, float&, float, float&, float, float&, float, int, int&, int&, int&, int&)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAE)
</UL>
<P><STRONG><a name="[a3]"></a>touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA::~TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD1Ev))
<BR>[Address Reference Count : 2]<UL><LI> lcd16bpp.o(i._ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv)
<LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAE)
</UL>
<P><STRONG><a name="[4e6]"></a>touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA::~TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD1Ev), UNUSED)

<P><STRONG><a name="[1d4]"></a>touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)</STRONG> (Thumb, 724 bytes, Stack size 160 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float) &rArr; touchgfx::LCD16bpp::DrawTextureMapScanLineBase16::overrunCheckNearestNeighbor(unsigned short*&, int&, int&, int&, int, int, short, short) const
</UL>
<BR>[Calls]<UL><LI><a href="#[3dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::DrawTextureMapScanLineBase16::overrunCheckNearestNeighbor(unsigned short*&, int&, int&, int&, int, int, short, short) const
<LI><a href="#[3dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::DrawTextureMapScanLineBase::drawTextureMapNextSubdivision(float&, float&, float&, float&, float&, float&, float, float&, float, float&, float, int, int&, int&, int&, int&)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAE)
</UL>
<P><STRONG><a name="[94]"></a>touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA::~TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev))
<BR>[Address Reference Count : 2]<UL><LI> lcd16bpp.o(i._ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv)
<LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAE)
</UL>
<P><STRONG><a name="[4e7]"></a>touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA::~TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev), UNUSED)

<P><STRONG><a name="[1d5]"></a>touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)</STRONG> (Thumb, 470 bytes, Stack size 168 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float) &rArr; touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA::writePixelOnEdge(unsigned short*, const unsigned*, short, short, int, int, unsigned char, unsigned char, unsigned char) const &rArr; touchgfx::LCD16bpp::bilinearInterpolate888(unsigned, unsigned, unsigned, unsigned, unsigned char, unsigned char)
</UL>
<BR>[Calls]<UL><LI><a href="#[3eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA::writePixelOnEdge(unsigned short*, const unsigned*, short, short, int, int, unsigned char, unsigned char, unsigned char) const
<LI><a href="#[3ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA::writePixel(unsigned short*, const unsigned*, short, int, int, unsigned char, unsigned char, unsigned char) const
<LI><a href="#[3de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::DrawTextureMapScanLineBase16::overrunCheckBilinearInterpolation(unsigned short*&, int&, int&, int&, int, int, short, short) const
<LI><a href="#[3dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::DrawTextureMapScanLineBase::drawTextureMapNextSubdivision(float&, float&, float&, float&, float&, float&, float, float&, float, float&, float, int, int&, int&, int&, int&)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAE)
</UL>
<P><STRONG><a name="[97]"></a>touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA::~TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev))
<BR>[Address Reference Count : 2]<UL><LI> lcd16bpp.o(i._ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv)
<LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAE)
</UL>
<P><STRONG><a name="[4e8]"></a>touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA::~TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev), UNUSED)

<P><STRONG><a name="[1d6]"></a>touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)</STRONG> (Thumb, 734 bytes, Stack size 160 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float) &rArr; touchgfx::LCD16bpp::DrawTextureMapScanLineBase16::overrunCheckBilinearInterpolation(unsigned short*&, int&, int&, int&, int, int, short, short) const
</UL>
<BR>[Calls]<UL><LI><a href="#[3de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::DrawTextureMapScanLineBase16::overrunCheckBilinearInterpolation(unsigned short*&, int&, int&, int&, int, int, short, short) const
<LI><a href="#[3e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::bilinearInterpolate565(unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, unsigned char)
<LI><a href="#[3dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::DrawTextureMapScanLineBase::drawTextureMapNextSubdivision(float&, float&, float&, float&, float&, float&, float, float&, float, float&, float, int, int&, int&, int&, int&)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAE)
</UL>
<P><STRONG><a name="[9a]"></a>touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA::~TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev))
<BR>[Address Reference Count : 2]<UL><LI> lcd16bpp.o(i._ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv)
<LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAE)
</UL>
<P><STRONG><a name="[4e9]"></a>touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA::~TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev), UNUSED)

<P><STRONG><a name="[1d7]"></a>touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)</STRONG> (Thumb, 816 bytes, Stack size 168 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float) &rArr; touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA::writePixelOnEdge(unsigned short*, const unsigned char*, const unsigned char*, short, short, int, int, unsigned char, unsigned char) const &rArr; touchgfx::LCD16bpp::bilinearInterpolate8(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)
</UL>
<BR>[Calls]<UL><LI><a href="#[3ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA::writePixelOnEdge(unsigned short*, const unsigned char*, const unsigned char*, short, short, int, int, unsigned char, unsigned char) const
<LI><a href="#[3de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::DrawTextureMapScanLineBase16::overrunCheckBilinearInterpolation(unsigned short*&, int&, int&, int&, int, int, short, short) const
<LI><a href="#[3e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::bilinearInterpolate8(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)
<LI><a href="#[3dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::DrawTextureMapScanLineBase::drawTextureMapNextSubdivision(float&, float&, float&, float&, float&, float&, float, float&, float, float&, float, int, int&, int&, int&, int&)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAE)
</UL>
<P><STRONG><a name="[9c]"></a>touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA::~TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD1Ev))
<BR>[Address Reference Count : 2]<UL><LI> lcd16bpp.o(i._ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv)
<LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAE)
</UL>
<P><STRONG><a name="[4ea]"></a>touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA::~TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD1Ev), UNUSED)

<P><STRONG><a name="[1d8]"></a>touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)</STRONG> (Thumb, 484 bytes, Stack size 168 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float) &rArr; touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA::writePixelOnEdge(unsigned short*, const unsigned char*, const unsigned short*, short, short, int, int, unsigned char, unsigned char) const &rArr; touchgfx::LCD16bpp::bilinearInterpolate565(unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, unsigned char)
</UL>
<BR>[Calls]<UL><LI><a href="#[3ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA::writePixelOnEdge(unsigned short*, const unsigned char*, const unsigned short*, short, short, int, int, unsigned char, unsigned char) const
<LI><a href="#[3ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA::writePixel(unsigned short*, const unsigned char*, const unsigned short*, short, int, int, unsigned char, unsigned char) const
<LI><a href="#[3de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::DrawTextureMapScanLineBase16::overrunCheckBilinearInterpolation(unsigned short*&, int&, int&, int&, int, int, short, short) const
<LI><a href="#[3dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::DrawTextureMapScanLineBase::drawTextureMapNextSubdivision(float&, float&, float&, float&, float&, float&, float, float&, float, float&, float, int, int&, int&, int&, int&)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAE)
</UL>
<P><STRONG><a name="[a4]"></a>touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA::~TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD1Ev))
<BR>[Address Reference Count : 2]<UL><LI> lcd16bpp.o(i._ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv)
<LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAE)
</UL>
<P><STRONG><a name="[4eb]"></a>touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA::~TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD1Ev), UNUSED)

<P><STRONG><a name="[3da]"></a>touchgfx::LCD16bpp::enableTextureMapperRGB565_NonOpaque_BilinearInterpolation()</STRONG> (Thumb, 98 bytes, Stack size 16 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = touchgfx::LCD16bpp::enableTextureMapperRGB565_NonOpaque_BilinearInterpolation() &rArr; __aeabi_atexit &rArr; malloc
</UL>
<BR>[Calls]<UL><LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_acquire
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_atexit
</UL>
<BR>[Called By]<UL><LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperAll()
</UL>

<P><STRONG><a name="[1d9]"></a>touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)</STRONG> (Thumb, 462 bytes, Stack size 168 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float) &rArr; touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::writePixelOnEdge(unsigned short*, const unsigned*, short, short, int, int, unsigned char, unsigned char) const &rArr; touchgfx::LCD16bpp::bilinearInterpolate888(unsigned, unsigned, unsigned, unsigned, unsigned char, unsigned char)
</UL>
<BR>[Calls]<UL><LI><a href="#[3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::writePixelOnEdge(unsigned short*, const unsigned*, short, short, int, int, unsigned char, unsigned char) const
<LI><a href="#[3ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::writePixel(unsigned short*, const unsigned*, short, int, int, unsigned char, unsigned char) const
<LI><a href="#[3de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::DrawTextureMapScanLineBase16::overrunCheckBilinearInterpolation(unsigned short*&, int&, int&, int&, int, int, short, short) const
<LI><a href="#[3dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::DrawTextureMapScanLineBase::drawTextureMapNextSubdivision(float&, float&, float&, float&, float&, float&, float, float&, float, float&, float, int, int&, int&, int&, int&)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAE)
</UL>
<P><STRONG><a name="[98]"></a>touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::~TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev))
<BR>[Address Reference Count : 2]<UL><LI> lcd16bpp.o(i._ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv)
<LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAE)
</UL>
<P><STRONG><a name="[4ec]"></a>touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::~TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev), UNUSED)

<P><STRONG><a name="[1da]"></a>touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)</STRONG> (Thumb, 486 bytes, Stack size 168 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float) &rArr; touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA::writePixelOnEdge(unsigned short*, const unsigned char*, const unsigned*, short, short, int, int, unsigned char, unsigned char, unsigned char) const &rArr; touchgfx::LCD16bpp::bilinearInterpolate888(unsigned, unsigned, unsigned, unsigned, unsigned char, unsigned char)
</UL>
<BR>[Calls]<UL><LI><a href="#[3f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA::writePixelOnEdge(unsigned short*, const unsigned char*, const unsigned*, short, short, int, int, unsigned char, unsigned char, unsigned char) const
<LI><a href="#[3f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA::writePixel(unsigned short*, const unsigned char*, const unsigned*, short, int, int, unsigned char, unsigned char, unsigned char) const
<LI><a href="#[3de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::DrawTextureMapScanLineBase16::overrunCheckBilinearInterpolation(unsigned short*&, int&, int&, int&, int, int, short, short) const
<LI><a href="#[3dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::DrawTextureMapScanLineBase::drawTextureMapNextSubdivision(float&, float&, float&, float&, float&, float&, float, float&, float, float&, float, int, int&, int&, int&, int&)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAE)
</UL>
<P><STRONG><a name="[9f]"></a>touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA::~TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev))
<BR>[Address Reference Count : 2]<UL><LI> lcd16bpp.o(i._ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv)
<LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAE)
</UL>
<P><STRONG><a name="[4ed]"></a>touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA::~TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev), UNUSED)

<P><STRONG><a name="[1db]"></a>touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)</STRONG> (Thumb, 486 bytes, Stack size 168 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffiiiifffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float) &rArr; touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::writePixelOnEdge(unsigned short*, const unsigned char*, const unsigned*, short, short, int, int, unsigned char, unsigned char) const &rArr; touchgfx::LCD16bpp::bilinearInterpolate888(unsigned, unsigned, unsigned, unsigned, unsigned char, unsigned char)
</UL>
<BR>[Calls]<UL><LI><a href="#[3f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::writePixelOnEdge(unsigned short*, const unsigned char*, const unsigned*, short, short, int, int, unsigned char, unsigned char) const
<LI><a href="#[3f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::writePixel(unsigned short*, const unsigned char*, const unsigned*, short, int, int, unsigned char, unsigned char) const
<LI><a href="#[3de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::DrawTextureMapScanLineBase16::overrunCheckBilinearInterpolation(unsigned short*&, int&, int&, int&, int, int, short, short) const
<LI><a href="#[3dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::DrawTextureMapScanLineBase::drawTextureMapNextSubdivision(float&, float&, float&, float&, float&, float&, float, float&, float, float&, float, int, int&, int&, int&, int&)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAE)
</UL>
<P><STRONG><a name="[a0]"></a>touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::~TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev))
<BR>[Address Reference Count : 2]<UL><LI> lcd16bpp.o(i._ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv)
<LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAE)
</UL>
<P><STRONG><a name="[4ee]"></a>touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::~TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev), UNUSED)

<P><STRONG><a name="[1dd]"></a>touchgfx::LCD16bpp::blitCopy(const unsigned short*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char, bool)</STRONG> (Thumb, 490 bytes, Stack size 80 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = touchgfx::LCD16bpp::blitCopy(const unsigned short*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char, bool)
</UL>
<BR>[Calls]<UL><LI><a href="#[3a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&, const touchgfx::Rect&)
<LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&)
<LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_memcpy4_8
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bppE)
</UL>
<P><STRONG><a name="[1e0]"></a>touchgfx::LCD16bpp::fillRect(const touchgfx::Rect&, touchgfx::colortype, unsigned char)</STRONG> (Thumb, 158 bytes, Stack size 48 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = touchgfx::LCD16bpp::fillRect(const touchgfx::Rect&, touchgfx::colortype, unsigned char)
</UL>
<BR>[Calls]<UL><LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&)
<LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_memcpy4_8
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bppE)
</UL>
<P><STRONG><a name="[3f9]"></a>touchgfx::LCD16bpp::nextLine(bool, touchgfx::TextRotation)</STRONG> (Thumb, 100 bytes, Stack size 8 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::LCD16bpp::nextLine(bool, touchgfx::TextRotation)
</UL>
<BR>[Called By]<UL><LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::drawGlyph(unsigned short*, touchgfx::Rect, short, short, unsigned short, unsigned short, const touchgfx::Rect&, const touchgfx::GlyphNode*, const unsigned char*, unsigned char, touchgfx::colortype, unsigned char, unsigned char, touchgfx::TextRotation)
</UL>

<P><STRONG><a name="[1e8]"></a>touchgfx::LCD16bpp::drawGlyph(unsigned short*, touchgfx::Rect, short, short, unsigned short, unsigned short, const touchgfx::Rect&, const touchgfx::GlyphNode*, const unsigned char*, unsigned char, touchgfx::colortype, unsigned char, unsigned char, touchgfx::TextRotation)</STRONG> (Thumb, 924 bytes, Stack size 104 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = touchgfx::LCD16bpp::drawGlyph(unsigned short*, touchgfx::Rect, short, short, unsigned short, unsigned short, const touchgfx::Rect&, const touchgfx::GlyphNode*, const unsigned char*, unsigned char, touchgfx::colortype, unsigned char, unsigned char, touchgfx::TextRotation) &rArr; touchgfx::LCD::realY(const touchgfx::Rect&, short, short, touchgfx::TextRotation)
</UL>
<BR>[Calls]<UL><LI><a href="#[3f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::realY(const touchgfx::Rect&, short, short, touchgfx::TextRotation)
<LI><a href="#[3f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::realX(const touchgfx::Rect&, short, short, touchgfx::TextRotation)
<LI><a href="#[3f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(short&, short&)
<LI><a href="#[3f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::nextPixel(bool, touchgfx::TextRotation)
<LI><a href="#[3f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::nextLine(bool, touchgfx::TextRotation)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bppE)
</UL>
<P><STRONG><a name="[3f8]"></a>touchgfx::LCD16bpp::nextPixel(bool, touchgfx::TextRotation)</STRONG> (Thumb, 100 bytes, Stack size 8 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::LCD16bpp::nextPixel(bool, touchgfx::TextRotation)
</UL>
<BR>[Called By]<UL><LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::drawGlyph(unsigned short*, touchgfx::Rect, short, short, unsigned short, unsigned short, const touchgfx::Rect&, const touchgfx::GlyphNode*, const unsigned char*, unsigned char, touchgfx::colortype, unsigned char, unsigned char, touchgfx::TextRotation)
</UL>

<P><STRONG><a name="[422]"></a>touchgfx::LCD16bpp::LCD16bpp()</STRONG> (Thumb, 74 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bppC1Ev))
<BR><BR>[Called By]<UL><LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___25_TouchGFXConfiguration_cpp_f5abfd34
</UL>

<P><STRONG><a name="[4ef]"></a>touchgfx::LCD16bpp::LCD16bpp__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bppC1Ev), UNUSED)

<P><STRONG><a name="[a9]"></a>touchgfx::LCD16bpp::~LCD16bpp()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bppD1Ev))
<BR>[Address Reference Count : 2]<UL><LI> touchgfxconfiguration.o(i.__sti___25_TouchGFXConfiguration_cpp_f5abfd34)
<LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bppE)
</UL>
<P><STRONG><a name="[4f0]"></a>touchgfx::LCD16bpp::~LCD16bpp__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bppD1Ev), UNUSED)

<P><STRONG><a name="[3fa]"></a>touchgfx::TextArea::BoundingArea::BoundingArea()</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, screen1viewbase.o(i._ZN8touchgfx8TextArea12BoundingAreaC1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::TextArea::BoundingArea::BoundingArea() &rArr; touchgfx::Rect::Rect(short, short, short, short)
</UL>
<BR>[Calls]<UL><LI><a href="#[3fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::Rect(short, short, short, short)
</UL>
<BR>[Called By]<UL><LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::TextArea()
</UL>

<P><STRONG><a name="[4f1]"></a>touchgfx::TextArea::BoundingArea::BoundingArea__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, screen1viewbase.o(i._ZN8touchgfx8TextArea12BoundingAreaC1Ev), UNUSED)

<P><STRONG><a name="[308]"></a>touchgfx::TextArea::setTypedText(const touchgfx::TypedText&)</STRONG> (Thumb, 56 bytes, Stack size 24 bytes, textarea.o(i._ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = touchgfx::TextArea::setTypedText(const touchgfx::TypedText&) &rArr; touchgfx::TextArea::resizeToCurrentText()
</UL>
<BR>[Calls]<UL><LI><a href="#[3fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::resizeToCurrentText()
</UL>
<BR>[Called By]<UL><LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1ViewBase::Screen1ViewBase()
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DigitalClock::setTypedText(touchgfx::TypedText)
</UL>

<P><STRONG><a name="[306]"></a>touchgfx::TextArea::setLinespacing(short)</STRONG> (Thumb, 30 bytes, Stack size 24 bytes, screen1viewbase.o(i._ZN8touchgfx8TextArea14setLinespacingEs))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = touchgfx::TextArea::setLinespacing(short)
</UL>
<BR>[Called By]<UL><LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1ViewBase::Screen1ViewBase()
</UL>

<P><STRONG><a name="[3fc]"></a>touchgfx::TextArea::resizeToCurrentText()</STRONG> (Thumb, 100 bytes, Stack size 16 bytes, textarea.o(i._ZN8touchgfx8TextArea19resizeToCurrentTextEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::TextArea::resizeToCurrentText()
</UL>
<BR>[Called By]<UL><LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::setTypedText(const touchgfx::TypedText&)
</UL>

<P><STRONG><a name="[196]"></a>touchgfx::TextArea::setWidth(short)</STRONG> (Thumb, 36 bytes, Stack size 24 bytes, digitalclock.o(i._ZN8touchgfx8TextArea8setWidthEs))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = touchgfx::TextArea::setWidth(short)
</UL>
<BR>[Address Reference Count : 4]<UL><LI> digitalclock.o(.constdata__ZTVN8touchgfx23TextAreaWithOneWildcardE)
<LI> textareawithwildcard.o(.constdata__ZTVN8touchgfx24TextAreaWithWildcardBaseE)
<LI> screen1viewbase.o(.constdata__ZTVN8touchgfx24TextAreaWithTwoWildcardsE)
<LI> textarea.o(.constdata__ZTVN8touchgfx8TextAreaE)
</UL>
<P><STRONG><a name="[197]"></a>touchgfx::TextArea::setHeight(short)</STRONG> (Thumb, 36 bytes, Stack size 24 bytes, digitalclock.o(i._ZN8touchgfx8TextArea9setHeightEs))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = touchgfx::TextArea::setHeight(short)
</UL>
<BR>[Address Reference Count : 4]<UL><LI> digitalclock.o(.constdata__ZTVN8touchgfx23TextAreaWithOneWildcardE)
<LI> textareawithwildcard.o(.constdata__ZTVN8touchgfx24TextAreaWithWildcardBaseE)
<LI> screen1viewbase.o(.constdata__ZTVN8touchgfx24TextAreaWithTwoWildcardsE)
<LI> textarea.o(.constdata__ZTVN8touchgfx8TextAreaE)
</UL>
<P><STRONG><a name="[2f7]"></a>touchgfx::TextArea::TextArea()</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, screen1viewbase.o(i._ZN8touchgfx8TextAreaC1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = touchgfx::TextArea::TextArea() &rArr; touchgfx::TextArea::BoundingArea::BoundingArea() &rArr; touchgfx::Rect::Rect(short, short, short, short)
</UL>
<BR>[Calls]<UL><LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TypedText::TypedText(unsigned short)
<LI><a href="#[3fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::BoundingArea::BoundingArea()
<LI><a href="#[37f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Widget::Widget__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1ViewBase::Screen1ViewBase()
<LI><a href="#[378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithWildcardBase::TextAreaWithWildcardBase()
</UL>

<P><STRONG><a name="[4f2]"></a>touchgfx::TextArea::TextArea__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, screen1viewbase.o(i._ZN8touchgfx8TextAreaC1Ev), UNUSED)

<P><STRONG><a name="[1e9]"></a>touchgfx::TextArea::~TextArea()</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, textarea.o(i._ZN8touchgfx8TextAreaD1Ev))
<BR><BR>[Called By]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1ViewBase::~Screen1ViewBase()
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithTwoWildcards::~TextAreaWithTwoWildcards()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> textarea.o(.constdata__ZTVN8touchgfx8TextAreaE)
</UL>
<P><STRONG><a name="[4f3]"></a>touchgfx::TextArea::~TextArea__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, textarea.o(i._ZN8touchgfx8TextAreaD1Ev), UNUSED)

<P><STRONG><a name="[352]"></a>touchgfx::ConstFont::ConstFont__sub_object(const touchgfx::GlyphNode*, unsigned short, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned short, unsigned short)</STRONG> (Thumb, 64 bytes, Stack size 36 bytes, constfont.o(i._ZN8touchgfx9ConstFontC2EPKNS_9GlyphNodeEttthhhhhhtt))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = touchgfx::ConstFont::ConstFont__sub_object(const touchgfx::GlyphNode*, unsigned short, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned short, unsigned short)
</UL>
<BR>[Called By]<UL><LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GeneratedFont::GeneratedFont(const touchgfx::GlyphNode*, unsigned short, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, const unsigned char*const *, const touchgfx::KerningNode*, unsigned short, unsigned short, const unsigned short*, const touchgfx::FontContextualFormsTable*)
</UL>

<P><STRONG><a name="[129]"></a>touchgfx::Container::getLastChild(short, short, touchgfx::Drawable**)</STRONG> (Thumb, 108 bytes, Stack size 24 bytes, container.o(i._ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = touchgfx::Container::getLastChild(short, short, touchgfx::Drawable**)
</UL>
<BR>[Called By]<UL><LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Container::getLastChildNear(short, short, touchgfx::Drawable**, short*, short*)
</UL>
<BR>[Address Reference Count : 9]<UL><LI> abstractclock.o(.constdata__ZTVN8touchgfx13AbstractClockE)
<LI> abstractdirectionprogress.o(.constdata__ZTVN8touchgfx25AbstractDirectionProgressE)
<LI> abstractdatagraph.o(.constdata__ZTVN8touchgfx17AbstractDataGraphE)
<LI> abstractdatagraph.o(.constdata__ZTVN8touchgfx16DynamicDataGraphE)
<LI> digitalclock.o(.constdata__ZTVN8touchgfx12DigitalClockE)
<LI> container.o(.constdata__ZTVN8touchgfx9ContainerE)
<LI> abstractprogressindicator.o(.constdata__ZTVN8touchgfx25AbstractProgressIndicatorE)
<LI> imageprogress.o(.constdata__ZTVN8touchgfx13ImageProgressE)
<LI> screen1viewbase.o(.constdata__ZTVN8touchgfx11GraphScrollILs150EEE)
</UL>
<P><STRONG><a name="[128]"></a>touchgfx::Container::getFirstChild()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, abstractclock.o(i._ZN8touchgfx9Container13getFirstChildEv))
<BR>[Address Reference Count : 9]<UL><LI> abstractclock.o(.constdata__ZTVN8touchgfx13AbstractClockE)
<LI> abstractdirectionprogress.o(.constdata__ZTVN8touchgfx25AbstractDirectionProgressE)
<LI> abstractdatagraph.o(.constdata__ZTVN8touchgfx17AbstractDataGraphE)
<LI> abstractdatagraph.o(.constdata__ZTVN8touchgfx16DynamicDataGraphE)
<LI> digitalclock.o(.constdata__ZTVN8touchgfx12DigitalClockE)
<LI> container.o(.constdata__ZTVN8touchgfx9ContainerE)
<LI> abstractprogressindicator.o(.constdata__ZTVN8touchgfx25AbstractProgressIndicatorE)
<LI> imageprogress.o(.constdata__ZTVN8touchgfx13ImageProgressE)
<LI> screen1viewbase.o(.constdata__ZTVN8touchgfx11GraphScrollILs150EEE)
</UL>
<P><STRONG><a name="[12e]"></a>touchgfx::Container::setupDrawChain(const touchgfx::Rect&, touchgfx::Drawable**)</STRONG> (Thumb, 104 bytes, Stack size 24 bytes, container.o(i._ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = touchgfx::Container::setupDrawChain(const touchgfx::Rect&, touchgfx::Drawable**) &rArr; touchgfx::Rect::operator &(const touchgfx::Rect&) const
</UL>
<BR>[Calls]<UL><LI><a href="#[3ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::operator &(const touchgfx::Rect&) const
</UL>
<BR>[Called By]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::draw(touchgfx::Rect&)
</UL>
<BR>[Address Reference Count : 9]<UL><LI> abstractclock.o(.constdata__ZTVN8touchgfx13AbstractClockE)
<LI> abstractdirectionprogress.o(.constdata__ZTVN8touchgfx25AbstractDirectionProgressE)
<LI> abstractdatagraph.o(.constdata__ZTVN8touchgfx17AbstractDataGraphE)
<LI> abstractdatagraph.o(.constdata__ZTVN8touchgfx16DynamicDataGraphE)
<LI> digitalclock.o(.constdata__ZTVN8touchgfx12DigitalClockE)
<LI> container.o(.constdata__ZTVN8touchgfx9ContainerE)
<LI> abstractprogressindicator.o(.constdata__ZTVN8touchgfx25AbstractProgressIndicatorE)
<LI> imageprogress.o(.constdata__ZTVN8touchgfx13ImageProgressE)
<LI> screen1viewbase.o(.constdata__ZTVN8touchgfx11GraphScrollILs150EEE)
</UL>
<P><STRONG><a name="[131]"></a>touchgfx::Container::getLastChildNear(short, short, touchgfx::Drawable**, short*, short*)</STRONG> (Thumb, 554 bytes, Stack size 160 bytes, container.o(i._ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = touchgfx::Container::getLastChildNear(short, short, touchgfx::Drawable**, short*, short*) &rArr; touchgfx::Container::getLastChild(short, short, touchgfx::Drawable**)
</UL>
<BR>[Calls]<UL><LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Container::getLastChild(short, short, touchgfx::Drawable**)
<LI><a href="#[363]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::getAbsoluteRect() const
</UL>
<BR>[Called By]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::handleClickEvent(const touchgfx::ClickEvent&)
</UL>
<BR>[Address Reference Count : 9]<UL><LI> abstractclock.o(.constdata__ZTVN8touchgfx13AbstractClockE)
<LI> abstractdirectionprogress.o(.constdata__ZTVN8touchgfx25AbstractDirectionProgressE)
<LI> abstractdatagraph.o(.constdata__ZTVN8touchgfx17AbstractDataGraphE)
<LI> abstractdatagraph.o(.constdata__ZTVN8touchgfx16DynamicDataGraphE)
<LI> digitalclock.o(.constdata__ZTVN8touchgfx12DigitalClockE)
<LI> container.o(.constdata__ZTVN8touchgfx9ContainerE)
<LI> abstractprogressindicator.o(.constdata__ZTVN8touchgfx25AbstractProgressIndicatorE)
<LI> imageprogress.o(.constdata__ZTVN8touchgfx13ImageProgressE)
<LI> screen1viewbase.o(.constdata__ZTVN8touchgfx11GraphScrollILs150EEE)
</UL>
<P><STRONG><a name="[12f]"></a>touchgfx::Container::add(touchgfx::Drawable&)</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, container.o(i._ZN8touchgfx9Container3addERNS_8DrawableE))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::Container::add(touchgfx::Drawable&)
</UL>
<BR>[Called By]<UL><LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1ViewBase::Screen1ViewBase()
<LI><a href="#[373]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDataGraph::AbstractDataGraph__sub_object(short)
<LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDataGraph::addGraphElement(touchgfx::AbstractGraphElement&)
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ImageProgress::ImageProgress()
<LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DigitalClock::DigitalClock()
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::add(touchgfx::Drawable&)
<LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractProgressIndicator::AbstractProgressIndicator()
</UL>
<BR>[Address Reference Count : 9]<UL><LI> abstractclock.o(.constdata__ZTVN8touchgfx13AbstractClockE)
<LI> abstractdirectionprogress.o(.constdata__ZTVN8touchgfx25AbstractDirectionProgressE)
<LI> abstractdatagraph.o(.constdata__ZTVN8touchgfx17AbstractDataGraphE)
<LI> abstractdatagraph.o(.constdata__ZTVN8touchgfx16DynamicDataGraphE)
<LI> digitalclock.o(.constdata__ZTVN8touchgfx12DigitalClockE)
<LI> container.o(.constdata__ZTVN8touchgfx9ContainerE)
<LI> abstractprogressindicator.o(.constdata__ZTVN8touchgfx25AbstractProgressIndicatorE)
<LI> imageprogress.o(.constdata__ZTVN8touchgfx13ImageProgressE)
<LI> screen1viewbase.o(.constdata__ZTVN8touchgfx11GraphScrollILs150EEE)
</UL>
<P><STRONG><a name="[130]"></a>touchgfx::Container::remove(touchgfx::Drawable&)</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, container.o(i._ZN8touchgfx9Container6removeERNS_8DrawableE))
<BR>[Address Reference Count : 9]<UL><LI> abstractclock.o(.constdata__ZTVN8touchgfx13AbstractClockE)
<LI> abstractdirectionprogress.o(.constdata__ZTVN8touchgfx25AbstractDirectionProgressE)
<LI> abstractdatagraph.o(.constdata__ZTVN8touchgfx17AbstractDataGraphE)
<LI> abstractdatagraph.o(.constdata__ZTVN8touchgfx16DynamicDataGraphE)
<LI> digitalclock.o(.constdata__ZTVN8touchgfx12DigitalClockE)
<LI> container.o(.constdata__ZTVN8touchgfx9ContainerE)
<LI> abstractprogressindicator.o(.constdata__ZTVN8touchgfx25AbstractProgressIndicatorE)
<LI> imageprogress.o(.constdata__ZTVN8touchgfx13ImageProgressE)
<LI> screen1viewbase.o(.constdata__ZTVN8touchgfx11GraphScrollILs150EEE)
</UL>
<P><STRONG><a name="[2f9]"></a>touchgfx::Container::Container()</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, abstractdatagraph.o(i._ZN8touchgfx9ContainerC1Ev))
<BR><BR>[Called By]<UL><LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1ViewBase::Screen1ViewBase()
<LI><a href="#[373]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDataGraph::AbstractDataGraph__sub_object(short)
</UL>

<P><STRONG><a name="[4f4]"></a>touchgfx::Container::Container__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, abstractdatagraph.o(i._ZN8touchgfx9ContainerC1Ev), UNUSED)

<P><STRONG><a name="[393]"></a>touchgfx::Gradients::Gradients(const touchgfx::Point3D*)</STRONG> (Thumb, 848 bytes, Stack size 32 bytes, texturemaptypes.o(i._ZN8touchgfx9GradientsC1EPKNS_7Point3DE))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = touchgfx::Gradients::Gradients(const touchgfx::Point3D*)
</UL>
<BR>[Called By]<UL><LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::drawTextureMapTriangle(const touchgfx::DrawingSurface&, const touchgfx::Point3D*, const touchgfx::TextureSurface&, const touchgfx::Rect&, const touchgfx::Rect&, unsigned short, unsigned char, unsigned short)
</UL>

<P><STRONG><a name="[4f5]"></a>touchgfx::Gradients::Gradients__sub_object(const touchgfx::Point3D*)</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, texturemaptypes.o(i._ZN8touchgfx9GradientsC1EPKNS_7Point3DE), UNUSED)

<P><STRONG><a name="[361]"></a>touchgfx::Matrix4x4::setViewDistance(float)</STRONG> (Thumb, 82 bytes, Stack size 96 bytes, math3d.o(i._ZN8touchgfx9Matrix4x415setViewDistanceEf))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = touchgfx::Matrix4x4::setViewDistance(float)
</UL>
<BR>[Called By]<UL><LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextureMapper::applyTransformation()
</UL>

<P><STRONG><a name="[35d]"></a>touchgfx::Matrix4x4::concatenateXScale(float)</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, math3d.o(i._ZN8touchgfx9Matrix4x417concatenateXScaleEf))
<BR><BR>[Called By]<UL><LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextureMapper::applyTransformation()
</UL>

<P><STRONG><a name="[35e]"></a>touchgfx::Matrix4x4::concatenateYScale(float)</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, math3d.o(i._ZN8touchgfx9Matrix4x417concatenateYScaleEf))
<BR><BR>[Called By]<UL><LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextureMapper::applyTransformation()
</UL>

<P><STRONG><a name="[35f]"></a>touchgfx::Matrix4x4::concatenateZScale(float)</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, math3d.o(i._ZN8touchgfx9Matrix4x417concatenateZScaleEf))
<BR><BR>[Called By]<UL><LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextureMapper::applyTransformation()
</UL>

<P><STRONG><a name="[35a]"></a>touchgfx::Matrix4x4::concatenateXRotation(float)</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, math3d.o(i._ZN8touchgfx9Matrix4x420concatenateXRotationEf))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = touchgfx::Matrix4x4::concatenateXRotation(float) &rArr; __hardfp_sinf &rArr; __mathlib_rredf2
</UL>
<BR>[Calls]<UL><LI><a href="#[3fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sinf
<LI><a href="#[3fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_cosf
</UL>
<BR>[Called By]<UL><LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextureMapper::applyTransformation()
</UL>

<P><STRONG><a name="[35b]"></a>touchgfx::Matrix4x4::concatenateYRotation(float)</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, math3d.o(i._ZN8touchgfx9Matrix4x420concatenateYRotationEf))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = touchgfx::Matrix4x4::concatenateYRotation(float) &rArr; __hardfp_sinf &rArr; __mathlib_rredf2
</UL>
<BR>[Calls]<UL><LI><a href="#[3fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sinf
<LI><a href="#[3fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_cosf
</UL>
<BR>[Called By]<UL><LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextureMapper::applyTransformation()
</UL>

<P><STRONG><a name="[35c]"></a>touchgfx::Matrix4x4::concatenateZRotation(float)</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, math3d.o(i._ZN8touchgfx9Matrix4x420concatenateZRotationEf))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = touchgfx::Matrix4x4::concatenateZRotation(float) &rArr; __hardfp_sinf &rArr; __mathlib_rredf2
</UL>
<BR>[Calls]<UL><LI><a href="#[3fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sinf
<LI><a href="#[3fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_cosf
</UL>
<BR>[Called By]<UL><LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextureMapper::applyTransformation()
</UL>

<P><STRONG><a name="[357]"></a>touchgfx::Matrix4x4::concatenateXTranslation(float)</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, math3d.o(i._ZN8touchgfx9Matrix4x423concatenateXTranslationEf))
<BR><BR>[Called By]<UL><LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextureMapper::applyTransformation()
</UL>

<P><STRONG><a name="[358]"></a>touchgfx::Matrix4x4::concatenateYTranslation(float)</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, math3d.o(i._ZN8touchgfx9Matrix4x423concatenateYTranslationEf))
<BR><BR>[Called By]<UL><LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextureMapper::applyTransformation()
</UL>

<P><STRONG><a name="[359]"></a>touchgfx::Matrix4x4::concatenateZTranslation(float)</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, math3d.o(i._ZN8touchgfx9Matrix4x423concatenateZTranslationEf))
<BR><BR>[Called By]<UL><LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextureMapper::applyTransformation()
</UL>

<P><STRONG><a name="[356]"></a>touchgfx::Matrix4x4::Matrix4x4()</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, math3d.o(i._ZN8touchgfx9Matrix4x4C1Ev))
<BR><BR>[Called By]<UL><LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextureMapper::applyTransformation()
</UL>

<P><STRONG><a name="[4f6]"></a>touchgfx::Matrix4x4::Matrix4x4__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, math3d.o(i._ZN8touchgfx9Matrix4x4C1Ev), UNUSED)

<P><STRONG><a name="[307]"></a>touchgfx::TypedText::TypedText(unsigned short)</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, screen1viewbase.o(i._ZN8touchgfx9TypedTextC1Et))
<BR><BR>[Called By]<UL><LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1ViewBase::Screen1ViewBase()
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::TextArea()
</UL>

<P><STRONG><a name="[4f7]"></a>touchgfx::TypedText::TypedText__sub_object(unsigned short)</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, screen1viewbase.o(i._ZN8touchgfx9TypedTextC1Et), UNUSED)

<P><STRONG><a name="[362]"></a>touchgfx::operator *(const touchgfx::Matrix4x4&, const touchgfx::Point4&)</STRONG> (Thumb, 92 bytes, Stack size 24 bytes, math3d.o(i._ZN8touchgfxmlERKNS_9Matrix4x4ERKNS_6Point4E))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = touchgfx::operator *(const touchgfx::Matrix4x4&, const touchgfx::Point4&)
</UL>
<BR>[Called By]<UL><LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextureMapper::applyTransformation()
</UL>

<P><STRONG><a name="[360]"></a>touchgfx::operator *(const touchgfx::Matrix4x4&, const touchgfx::Matrix4x4&)</STRONG> (Thumb, 196 bytes, Stack size 176 bytes, math3d.o(i._ZN8touchgfxmlERKNS_9Matrix4x4ES2_))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = touchgfx::operator *(const touchgfx::Matrix4x4&, const touchgfx::Matrix4x4&)
</UL>
<BR>[Called By]<UL><LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextureMapper::applyTransformation()
</UL>

<P><STRONG><a name="[c5]"></a>TouchGFXHAL::getTFTFrameBuffer() const</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, touchgfxhal.o(i._ZNK11TouchGFXHAL17getTFTFrameBufferEv))
<BR>[Address Reference Count : 1]<UL><LI> touchgfxhal.o(.constdata__ZTV11TouchGFXHAL)
</UL>
<P><STRONG><a name="[4f8]"></a>TouchGFXGeneratedHAL::getTFTFrameBuffer() const</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, touchgfxgeneratedhal.o(i._ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv), UNUSED)

<P><STRONG><a name="[10b]"></a>touchgfx::TiledImage::getSolidRect() const</STRONG> (Thumb, 308 bytes, Stack size 32 bytes, tiledimage.o(i._ZNK8touchgfx10TiledImage12getSolidRectEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = touchgfx::TiledImage::getSolidRect() const &rArr; touchgfx::Bitmap::getHeight() const
</UL>
<BR>[Calls]<UL><LI><a href="#[32f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getHeight() const
<LI><a href="#[32e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getWidth() const
<LI><a href="#[3cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getSolidRect() const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tiledimage.o(.constdata__ZTVN8touchgfx10TiledImageE)
</UL>
<P><STRONG><a name="[10a]"></a>touchgfx::TiledImage::draw(const touchgfx::Rect&) const</STRONG> (Thumb, 492 bytes, Stack size 88 bytes, tiledimage.o(i._ZNK8touchgfx10TiledImage4drawERKNS_4RectE))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = touchgfx::TiledImage::draw(const touchgfx::Rect&) const &rArr; touchgfx::Bitmap::getHeight() const
</UL>
<BR>[Calls]<UL><LI><a href="#[32f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getHeight() const
<LI><a href="#[32e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getWidth() const
<LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_memcpy4_8
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tiledimage.o(.constdata__ZTVN8touchgfx10TiledImageE)
</UL>
<P><STRONG><a name="[146]"></a>touchgfx::CanvasWidget::invalidate() const</STRONG> (Thumb, 62 bytes, Stack size 24 bytes, canvaswidget.o(i._ZNK8touchgfx12CanvasWidget10invalidateEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = touchgfx::CanvasWidget::invalidate() const &rArr; touchgfx::Rect::operator &=(const touchgfx::Rect&)
</UL>
<BR>[Calls]<UL><LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::operator &=(const touchgfx::Rect&)
</UL>
<BR>[Address Reference Count : 2]<UL><LI> canvaswidget.o(.constdata__ZTVN8touchgfx12CanvasWidgetE)
<LI> graphelements.o(.constdata__ZTVN8touchgfx16GraphElementLineE)
</UL>
<P><STRONG><a name="[145]"></a>touchgfx::CanvasWidget::getSolidRect() const</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, canvaswidget.o(i._ZNK8touchgfx12CanvasWidget12getSolidRectEv))
<BR>[Address Reference Count : 2]<UL><LI> canvaswidget.o(.constdata__ZTVN8touchgfx12CanvasWidgetE)
<LI> graphelements.o(.constdata__ZTVN8touchgfx16GraphElementLineE)
</UL>
<P><STRONG><a name="[148]"></a>touchgfx::CanvasWidget::getMinimalRect() const</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, canvaswidget.o(i._ZNK8touchgfx12CanvasWidget14getMinimalRectEv))
<BR>[Address Reference Count : 2]<UL><LI> canvaswidget.o(.constdata__ZTVN8touchgfx12CanvasWidgetE)
<LI> graphelements.o(.constdata__ZTVN8touchgfx16GraphElementLineE)
</UL>
<P><STRONG><a name="[144]"></a>touchgfx::CanvasWidget::draw(const touchgfx::Rect&) const</STRONG> (Thumb, 302 bytes, Stack size 48 bytes, canvaswidget.o(i._ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = touchgfx::CanvasWidget::draw(const touchgfx::Rect&) const &rArr; touchgfx::Rect::operator &=(const touchgfx::Rect&)
</UL>
<BR>[Calls]<UL><LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_memcpy4_8
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::operator &=(const touchgfx::Rect&)
</UL>
<BR>[Address Reference Count : 2]<UL><LI> canvaswidget.o(.constdata__ZTVN8touchgfx12CanvasWidgetE)
<LI> graphelements.o(.constdata__ZTVN8touchgfx16GraphElementLineE)
</UL>
<P><STRONG><a name="[147]"></a>touchgfx::CanvasWidget::getAlpha() const</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, canvaswidget.o(i._ZNK8touchgfx12CanvasWidget8getAlphaEv))
<BR>[Address Reference Count : 2]<UL><LI> canvaswidget.o(.constdata__ZTVN8touchgfx12CanvasWidgetE)
<LI> graphelements.o(.constdata__ZTVN8touchgfx16GraphElementLineE)
</UL>
<P><STRONG><a name="[339]"></a>touchgfx::AbstractClock::getCurrentAM() const</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, abstractclock.o(i._ZNK8touchgfx13AbstractClock12getCurrentAMEv))
<BR><BR>[Called By]<UL><LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DigitalClock::updateClock()
</UL>

<P><STRONG><a name="[33b]"></a>touchgfx::AbstractClock::getCurrentHour12() const</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, abstractclock.o(i._ZNK8touchgfx13AbstractClock16getCurrentHour12Ev))
<BR><BR>[Called By]<UL><LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DigitalClock::updateClock()
</UL>

<P><STRONG><a name="[33c]"></a>touchgfx::AbstractClock::getCurrentHour24() const</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, abstractclock.o(i._ZNK8touchgfx13AbstractClock16getCurrentHour24Ev))
<BR><BR>[Called By]<UL><LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DigitalClock::updateClock()
</UL>

<P><STRONG><a name="[33a]"></a>touchgfx::AbstractClock::getCurrentMinute() const</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, abstractclock.o(i._ZNK8touchgfx13AbstractClock16getCurrentMinuteEv))
<BR><BR>[Called By]<UL><LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DigitalClock::updateClock()
</UL>

<P><STRONG><a name="[33d]"></a>touchgfx::AbstractClock::getCurrentSecond() const</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, abstractclock.o(i._ZNK8touchgfx13AbstractClock16getCurrentSecondEv))
<BR><BR>[Called By]<UL><LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DigitalClock::updateClock()
</UL>

<P><STRONG><a name="[15b]"></a>touchgfx::GeneratedFont::getKerning(unsigned short, const touchgfx::GlyphNode*) const</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, generatedfont.o(i._ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::GeneratedFont::getKerning(unsigned short, const touchgfx::GlyphNode*) const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> generatedfont.o(.constdata__ZTVN8touchgfx13GeneratedFontE)
</UL>
<P><STRONG><a name="[15c]"></a>touchgfx::GeneratedFont::getGSUBTable() const</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, generatedfont.o(i._ZNK8touchgfx13GeneratedFont12getGSUBTableEv))
<BR>[Address Reference Count : 1]<UL><LI> generatedfont.o(.constdata__ZTVN8touchgfx13GeneratedFontE)
</UL>
<P><STRONG><a name="[15e]"></a>touchgfx::GeneratedFont::getPixelData(const touchgfx::GlyphNode*) const</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, generatedfont.o(i._ZNK8touchgfx13GeneratedFont12getPixelDataEPKNS_9GlyphNodeE))
<BR>[Address Reference Count : 1]<UL><LI> generatedfont.o(.constdata__ZTVN8touchgfx13GeneratedFontE)
</UL>
<P><STRONG><a name="[15d]"></a>touchgfx::GeneratedFont::getContextualFormsTable() const</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, generatedfont.o(i._ZNK8touchgfx13GeneratedFont23getContextualFormsTableEv))
<BR>[Address Reference Count : 1]<UL><LI> generatedfont.o(.constdata__ZTVN8touchgfx13GeneratedFontE)
</UL>
<P><STRONG><a name="[16a]"></a>touchgfx::PainterRGB565::getRenderingMethod() const</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, painterrgb565.o(i._ZNK8touchgfx13PainterRGB56518getRenderingMethodEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::PainterRGB565::getRenderingMethod() const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> painterrgb565.o(.constdata__ZTVN8touchgfx13PainterRGB565E)
</UL>
<P><STRONG><a name="[16d]"></a>touchgfx::PainterRGB565::paint(unsigned char*, short, short, short, short, unsigned char) const</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, painterrgb565.o(i._ZNK8touchgfx13PainterRGB5655paintEPhssssh))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = touchgfx::PainterRGB565::paint(unsigned char*, short, short, short, short, unsigned char) const &rArr; touchgfx::paint::rgb565::lineFromColor(unsigned short*, unsigned, unsigned, unsigned char, unsigned)
</UL>
<BR>[Calls]<UL><LI><a href="#[3ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::paint::rgb565::lineFromColor(unsigned short*, unsigned, unsigned, unsigned char, unsigned)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> painterrgb565.o(.constdata__ZTVN8touchgfx13PainterRGB565E)
</UL>
<P><STRONG><a name="[16c]"></a>touchgfx::PainterRGB565::tearDown() const</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, painterrgb565.o(i._ZNK8touchgfx13PainterRGB5658tearDownEv))
<BR><BR>[Calls]<UL><LI><a href="#[400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::paint::tearDown()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> painterrgb565.o(.constdata__ZTVN8touchgfx13PainterRGB565E)
</UL>
<P><STRONG><a name="[170]"></a>touchgfx::ScalableImage::getSolidRect() const</STRONG> (Thumb, 110 bytes, Stack size 32 bytes, scalableimage.o(i._ZNK8touchgfx13ScalableImage12getSolidRectEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = touchgfx::ScalableImage::getSolidRect() const &rArr; touchgfx::Rect::operator &(const touchgfx::Rect&) const
</UL>
<BR>[Calls]<UL><LI><a href="#[32f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getHeight() const
<LI><a href="#[32e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getWidth() const
<LI><a href="#[3cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getSolidRect() const
<LI><a href="#[3ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::operator &(const touchgfx::Rect&) const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scalableimage.o(.constdata__ZTVN8touchgfx13ScalableImageE)
</UL>
<P><STRONG><a name="[16f]"></a>touchgfx::ScalableImage::draw(const touchgfx::Rect&) const</STRONG> (Thumb, 278 bytes, Stack size 136 bytes, scalableimage.o(i._ZNK8touchgfx13ScalableImage4drawERKNS_4RectE))
<BR><BR>[Stack]<UL><LI>Max Depth = 432<LI>Call Chain = touchgfx::ScalableImage::draw(const touchgfx::Rect&) const &rArr; touchgfx::ScalableImage::drawQuad(const touchgfx::Rect&, unsigned short*, const float*, const float*, const float*, const float*, const float*) const &rArr; touchgfx::Rect::operator &(const touchgfx::Rect&) const
</UL>
<BR>[Calls]<UL><LI><a href="#[32f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getHeight() const
<LI><a href="#[32e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getWidth() const
<LI><a href="#[401]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ScalableImage::drawQuad(const touchgfx::Rect&, unsigned short*, const float*, const float*, const float*, const float*, const float*) const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scalableimage.o(.constdata__ZTVN8touchgfx13ScalableImageE)
</UL>
<P><STRONG><a name="[401]"></a>touchgfx::ScalableImage::drawQuad(const touchgfx::Rect&, unsigned short*, const float*, const float*, const float*, const float*, const float*) const</STRONG> (Thumb, 628 bytes, Stack size 264 bytes, scalableimage.o(i._ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = touchgfx::ScalableImage::drawQuad(const touchgfx::Rect&, unsigned short*, const float*, const float*, const float*, const float*, const float*) const &rArr; touchgfx::Rect::operator &(const touchgfx::Rect&) const
</UL>
<BR>[Calls]<UL><LI><a href="#[32f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getHeight() const
<LI><a href="#[32e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getWidth() const
<LI><a href="#[3c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getData() const
<LI><a href="#[3ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getExtraData() const
<LI><a href="#[3a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&, const touchgfx::Rect&)
<LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&)
<LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::lookupNearestNeighborRenderVariant(const touchgfx::Bitmap&)
<LI><a href="#[37b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::lookupBilinearRenderVariant(const touchgfx::Bitmap&)
<LI><a href="#[402]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(float&, float&, const touchgfx::Rect&)
<LI><a href="#[363]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::getAbsoluteRect() const
<LI><a href="#[3ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::operator &(const touchgfx::Rect&) const
</UL>
<BR>[Called By]<UL><LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ScalableImage::draw(const touchgfx::Rect&) const
</UL>

<P><STRONG><a name="[174]"></a>touchgfx::TextureMapper::getSolidRect() const</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, texturemapper.o(i._ZNK8touchgfx13TextureMapper12getSolidRectEv))
<BR>[Address Reference Count : 1]<UL><LI> texturemapper.o(.constdata__ZTVN8touchgfx13TextureMapperE)
</UL>
<P><STRONG><a name="[403]"></a>touchgfx::TextureMapper::getBoundingRect() const</STRONG> (Thumb, 398 bytes, Stack size 48 bytes, texturemapper.o(i._ZNK8touchgfx13TextureMapper15getBoundingRectEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = touchgfx::TextureMapper::getBoundingRect() const
</UL>
<BR>[Calls]<UL><LI><a href="#[404]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_floorf
<LI><a href="#[405]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_ceilf
</UL>
<BR>[Called By]<UL><LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextureMapper::invalidateContent() const
</UL>

<P><STRONG><a name="[175]"></a>touchgfx::TextureMapper::invalidateContent() const</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, texturemapper.o(i._ZNK8touchgfx13TextureMapper17invalidateContentEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = touchgfx::TextureMapper::invalidateContent() const &rArr; touchgfx::TextureMapper::getBoundingRect() const
</UL>
<BR>[Calls]<UL><LI><a href="#[403]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextureMapper::getBoundingRect() const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> texturemapper.o(.constdata__ZTVN8touchgfx13TextureMapperE)
</UL>
<P><STRONG><a name="[173]"></a>touchgfx::TextureMapper::draw(const touchgfx::Rect&) const</STRONG> (Thumb, 574 bytes, Stack size 152 bytes, texturemapper.o(i._ZNK8touchgfx13TextureMapper4drawERKNS_4RectE))
<BR><BR>[Stack]<UL><LI>Max Depth = 440<LI>Call Chain = touchgfx::TextureMapper::draw(const touchgfx::Rect&) const &rArr; touchgfx::TextureMapper::drawQuad(const touchgfx::Rect&, unsigned short*, const float*, const float*, const float*, const float*, const float*) const &rArr; touchgfx::lookupNearestNeighborRenderVariant(const touchgfx::Bitmap&) &rArr; touchgfx::Bitmap::getFormat() const
</UL>
<BR>[Calls]<UL><LI><a href="#[406]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextureMapper::drawQuad(const touchgfx::Rect&, unsigned short*, const float*, const float*, const float*, const float*, const float*) const
<LI><a href="#[32f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getHeight() const
<LI><a href="#[32e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getWidth() const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> texturemapper.o(.constdata__ZTVN8touchgfx13TextureMapperE)
</UL>
<P><STRONG><a name="[406]"></a>touchgfx::TextureMapper::drawQuad(const touchgfx::Rect&, unsigned short*, const float*, const float*, const float*, const float*, const float*) const</STRONG> (Thumb, 806 bytes, Stack size 264 bytes, texturemapper.o(i._ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = touchgfx::TextureMapper::drawQuad(const touchgfx::Rect&, unsigned short*, const float*, const float*, const float*, const float*, const float*) const &rArr; touchgfx::lookupNearestNeighborRenderVariant(const touchgfx::Bitmap&) &rArr; touchgfx::Bitmap::getFormat() const
</UL>
<BR>[Calls]<UL><LI><a href="#[32f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getHeight() const
<LI><a href="#[32e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getWidth() const
<LI><a href="#[3c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getData() const
<LI><a href="#[3ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getExtraData() const
<LI><a href="#[3a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&, const touchgfx::Rect&)
<LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&)
<LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_memcpy4_8
<LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::lookupNearestNeighborRenderVariant(const touchgfx::Bitmap&)
<LI><a href="#[37b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::lookupBilinearRenderVariant(const touchgfx::Bitmap&)
<LI><a href="#[402]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(float&, float&, const touchgfx::Rect&)
<LI><a href="#[363]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::getAbsoluteRect() const
</UL>
<BR>[Called By]<UL><LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextureMapper::draw(const touchgfx::Rect&) const
</UL>

<P><STRONG><a name="[17f]"></a>touchgfx::SnapshotWidget::getSolidRect() const</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, snapshotwidget.o(i._ZNK8touchgfx14SnapshotWidget12getSolidRectEv))
<BR>[Address Reference Count : 1]<UL><LI> snapshotwidget.o(.constdata__ZTVN8touchgfx14SnapshotWidgetE)
</UL>
<P><STRONG><a name="[17e]"></a>touchgfx::SnapshotWidget::draw(const touchgfx::Rect&) const</STRONG> (Thumb, 136 bytes, Stack size 40 bytes, snapshotwidget.o(i._ZNK8touchgfx14SnapshotWidget4drawERKNS_4RectE))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = touchgfx::SnapshotWidget::draw(const touchgfx::Rect&) const &rArr; touchgfx::Bitmap::getWidth() const
</UL>
<BR>[Calls]<UL><LI><a href="#[32e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getWidth() const
<LI><a href="#[3c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getData() const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> snapshotwidget.o(.constdata__ZTVN8touchgfx14SnapshotWidgetE)
</UL>
<P><STRONG><a name="[191]"></a>touchgfx::AbstractPainter::getRenderingMethod() const</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, screen1viewbase.o(i._ZNK8touchgfx15AbstractPainter18getRenderingMethodEv))
<BR>[Address Reference Count : 1]<UL><LI> screen1viewbase.o(.constdata__ZTVN8touchgfx21AbstractPainterRGB565E)
</UL>
<P><STRONG><a name="[16b]"></a>touchgfx::AbstractPainter::setup(const touchgfx::Rect&) const</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, painterrgb565.o(i._ZNK8touchgfx15AbstractPainter5setupERKNS_4RectE))
<BR>[Address Reference Count : 2]<UL><LI> painterrgb565.o(.constdata__ZTVN8touchgfx13PainterRGB565E)
<LI> screen1viewbase.o(.constdata__ZTVN8touchgfx21AbstractPainterRGB565E)
</UL>
<P><STRONG><a name="[192]"></a>touchgfx::AbstractPainter::tearDown() const</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, screen1viewbase.o(i._ZNK8touchgfx15AbstractPainter8tearDownEv))
<BR>[Address Reference Count : 1]<UL><LI> screen1viewbase.o(.constdata__ZTVN8touchgfx21AbstractPainterRGB565E)
</UL>
<P><STRONG><a name="[143]"></a>touchgfx::GraphScrollData::dataIndex(short) const</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, graphscroll.o(i._ZNK8touchgfx15GraphScrollData9dataIndexEs))
<BR>[Address Reference Count : 1]<UL><LI> screen1viewbase.o(.constdata__ZTVN8touchgfx11GraphScrollILs150EEE)
</UL>
<P><STRONG><a name="[13d]"></a>touchgfx::DynamicDataGraph::indexToScreenXQ5(short) const</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, abstractdatagraph.o(i._ZNK8touchgfx16DynamicDataGraph16indexToScreenXQ5Es))
<BR>[Address Reference Count : 2]<UL><LI> abstractdatagraph.o(.constdata__ZTVN8touchgfx16DynamicDataGraphE)
<LI> screen1viewbase.o(.constdata__ZTVN8touchgfx11GraphScrollILs150EEE)
</UL>
<P><STRONG><a name="[13e]"></a>touchgfx::DynamicDataGraph::indexToScreenYQ5(short) const</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, abstractdatagraph.o(i._ZNK8touchgfx16DynamicDataGraph16indexToScreenYQ5Es))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::DynamicDataGraph::indexToScreenYQ5(short) const
</UL>
<BR>[Address Reference Count : 2]<UL><LI> abstractdatagraph.o(.constdata__ZTVN8touchgfx16DynamicDataGraphE)
<LI> screen1viewbase.o(.constdata__ZTVN8touchgfx11GraphScrollILs150EEE)
</UL>
<P><STRONG><a name="[13f]"></a>touchgfx::DynamicDataGraph::xScreenRangeToIndexRange(short, short, short&, short&) const</STRONG> (Thumb, 358 bytes, Stack size 48 bytes, abstractdatagraph.o(i._ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = touchgfx::DynamicDataGraph::xScreenRangeToIndexRange(short, short, short&, short&) const &rArr; touchgfx::muldiv(int, int, int) &rArr; touchgfx::muldivu(unsigned, unsigned, unsigned, unsigned&) &rArr;  touchgfx::muldivu(unsigned, unsigned, unsigned, unsigned&) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::muldiv(int, int, int)
<LI><a href="#[407]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDataGraph::scaled2intX(int) const
</UL>
<BR>[Address Reference Count : 2]<UL><LI> abstractdatagraph.o(.constdata__ZTVN8touchgfx16DynamicDataGraphE)
<LI> screen1viewbase.o(.constdata__ZTVN8touchgfx11GraphScrollILs150EEE)
</UL>
<P><STRONG><a name="[187]"></a>touchgfx::DynamicDataGraph::dataIndex(short) const</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, abstractdatagraph.o(i._ZNK8touchgfx16DynamicDataGraph9dataIndexEs))
<BR>[Address Reference Count : 1]<UL><LI> abstractdatagraph.o(.constdata__ZTVN8touchgfx16DynamicDataGraphE)
</UL>
<P><STRONG><a name="[133]"></a>touchgfx::DynamicDataGraph::getScaleX() const</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, abstractdatagraph.o(i._ZNK8touchgfx16DynamicDataGraph9getScaleXEv))
<BR>[Address Reference Count : 2]<UL><LI> abstractdatagraph.o(.constdata__ZTVN8touchgfx16DynamicDataGraphE)
<LI> screen1viewbase.o(.constdata__ZTVN8touchgfx11GraphScrollILs150EEE)
</UL>
<P><STRONG><a name="[135]"></a>touchgfx::DynamicDataGraph::getScaleY() const</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, abstractdatagraph.o(i._ZNK8touchgfx16DynamicDataGraph9getScaleYEv))
<BR>[Address Reference Count : 2]<UL><LI> abstractdatagraph.o(.constdata__ZTVN8touchgfx16DynamicDataGraphE)
<LI> screen1viewbase.o(.constdata__ZTVN8touchgfx11GraphScrollILs150EEE)
</UL>
<P><STRONG><a name="[408]"></a>touchgfx::GraphElementLine::drawIndexRange(touchgfx::Canvas&, const touchgfx::AbstractDataGraph*, short, short) const</STRONG> (Thumb, 420 bytes, Stack size 88 bytes, graphelements.o(i._ZNK8touchgfx16GraphElementLine14drawIndexRangeERNS_6CanvasEPKNS_17AbstractDataGraphEss))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = touchgfx::GraphElementLine::drawIndexRange(touchgfx::Canvas&, const touchgfx::AbstractDataGraph*, short, short) const &rArr; touchgfx::Canvas::moveTo(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5) &rArr; touchgfx::Outline::moveTo(int, int) &rArr; touchgfx::Outline::renderLine(int, int, int, int) &rArr; touchgfx::Outline::renderScanline(int, int, int, int, int) &rArr; touchgfx::Outline::setCurCellNew(int, int)
</UL>
<BR>[Calls]<UL><LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::muldiv(int, int, int)
<LI><a href="#[3a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Canvas::moveTo(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5)
<LI><a href="#[409]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CWRUtil::Q5::round() const
<LI><a href="#[3b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CWRUtil::length(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5)
</UL>
<BR>[Called By]<UL><LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GraphElementLine::drawCanvasWidget(const touchgfx::Rect&) const
</UL>

<P><STRONG><a name="[188]"></a>touchgfx::GraphElementLine::drawCanvasWidget(const touchgfx::Rect&) const</STRONG> (Thumb, 276 bytes, Stack size 168 bytes, graphelements.o(i._ZNK8touchgfx16GraphElementLine16drawCanvasWidgetERKNS_4RectE))
<BR><BR>[Stack]<UL><LI>Max Depth = 680<LI>Call Chain = touchgfx::GraphElementLine::drawCanvasWidget(const touchgfx::Rect&) const &rArr; touchgfx::Canvas::render(unsigned char) &rArr; touchgfx::Outline::closeOutlineAndSortCells() &rArr; touchgfx::Outline::qsortCells(touchgfx::Cell*, unsigned)
</UL>
<BR>[Calls]<UL><LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_memcpy4_8
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::operator &=(const touchgfx::Rect&)
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Outline::~Outline()
<LI><a href="#[3a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Canvas::Canvas(const touchgfx::CanvasWidget*, const touchgfx::Rect&)
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Canvas::render(unsigned char)
<LI><a href="#[40a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CWRUtil::Q5::ceil() const
<LI><a href="#[408]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GraphElementLine::drawIndexRange(touchgfx::Canvas&, const touchgfx::AbstractDataGraph*, short, short) const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> graphelements.o(.constdata__ZTVN8touchgfx16GraphElementLineE)
</UL>
<P><STRONG><a name="[407]"></a>touchgfx::AbstractDataGraph::scaled2intX(int) const</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, abstractdatagraph.o(i._ZNK8touchgfx17AbstractDataGraph11scaled2intXEi))
<BR><BR>[Called By]<UL><LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DynamicDataGraph::xScreenRangeToIndexRange(short, short, short&, short&) const
</UL>

<P><STRONG><a name="[369]"></a>touchgfx::AbstractDataGraph::float2scaledY(float) const</STRONG> (Thumb, 78 bytes, Stack size 0 bytes, abstractdatagraph.o(i._ZNK8touchgfx17AbstractDataGraph13float2scaledYEf))
<BR><BR>[Called By]<UL><LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DynamicDataGraph::addDataPoint(float)
</UL>

<P><STRONG><a name="[40b]"></a>touchgfx::AbstractDataGraph::indexToScreenX(short) const</STRONG> (Thumb, 58 bytes, Stack size 24 bytes, abstractdatagraph.o(i._ZNK8touchgfx17AbstractDataGraph14indexToScreenXEs))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = touchgfx::AbstractDataGraph::indexToScreenX(short) const
</UL>
<BR>[Called By]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDataGraph::getNearestIndexForScreenX(short, short&) const
</UL>

<P><STRONG><a name="[13b]"></a>touchgfx::AbstractDataGraph::valueToScreenXQ5(int) const</STRONG> (Thumb, 58 bytes, Stack size 24 bytes, abstractdatagraph.o(i._ZNK8touchgfx17AbstractDataGraph16valueToScreenXQ5Ei))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = touchgfx::AbstractDataGraph::valueToScreenXQ5(int) const &rArr; touchgfx::CWRUtil::muldiv_toQ5(int, int, int) &rArr; touchgfx::muldiv(int, int, int) &rArr; touchgfx::muldivu(unsigned, unsigned, unsigned, unsigned&) &rArr;  touchgfx::muldivu(unsigned, unsigned, unsigned, unsigned&) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CWRUtil::muldiv_toQ5(int, int, int)
</UL>
<BR>[Address Reference Count : 3]<UL><LI> abstractdatagraph.o(.constdata__ZTVN8touchgfx17AbstractDataGraphE)
<LI> abstractdatagraph.o(.constdata__ZTVN8touchgfx16DynamicDataGraphE)
<LI> screen1viewbase.o(.constdata__ZTVN8touchgfx11GraphScrollILs150EEE)
</UL>
<P><STRONG><a name="[13c]"></a>touchgfx::AbstractDataGraph::valueToScreenYQ5(int) const</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, abstractdatagraph.o(i._ZNK8touchgfx17AbstractDataGraph16valueToScreenYQ5Ei))
<BR><BR>[Stack]<UL><LI>Max Depth = 140<LI>Call Chain = touchgfx::AbstractDataGraph::valueToScreenYQ5(int) const &rArr; touchgfx::CWRUtil::muldiv_toQ5(int, int, int) &rArr; touchgfx::muldiv(int, int, int) &rArr; touchgfx::muldivu(unsigned, unsigned, unsigned, unsigned&) &rArr;  touchgfx::muldivu(unsigned, unsigned, unsigned, unsigned&) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CWRUtil::muldiv_toQ5(int, int, int)
</UL>
<BR>[Address Reference Count : 3]<UL><LI> abstractdatagraph.o(.constdata__ZTVN8touchgfx17AbstractDataGraphE)
<LI> abstractdatagraph.o(.constdata__ZTVN8touchgfx16DynamicDataGraphE)
<LI> screen1viewbase.o(.constdata__ZTVN8touchgfx11GraphScrollILs150EEE)
</UL>
<P><STRONG><a name="[13a]"></a>touchgfx::AbstractDataGraph::getNearestIndexForScreenX(short, short&) const</STRONG> (Thumb, 144 bytes, Stack size 40 bytes, abstractdatagraph.o(i._ZNK8touchgfx17AbstractDataGraph25getNearestIndexForScreenXEsRs))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = touchgfx::AbstractDataGraph::getNearestIndexForScreenX(short, short&) const &rArr; touchgfx::AbstractDataGraph::indexToScreenX(short) const
</UL>
<BR>[Calls]<UL><LI><a href="#[40b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDataGraph::indexToScreenX(short) const
</UL>
<BR>[Address Reference Count : 3]<UL><LI> abstractdatagraph.o(.constdata__ZTVN8touchgfx17AbstractDataGraphE)
<LI> abstractdatagraph.o(.constdata__ZTVN8touchgfx16DynamicDataGraphE)
<LI> screen1viewbase.o(.constdata__ZTVN8touchgfx11GraphScrollILs150EEE)
</UL>
<P><STRONG><a name="[18b]"></a>touchgfx::LCD16DebugPrinter::draw(const touchgfx::Rect&) const</STRONG> (Thumb, 488 bytes, Stack size 56 bytes, lcd16debugprinter.o(i._ZNK8touchgfx17LCD16DebugPrinter4drawERKNS_4RectE))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = touchgfx::LCD16DebugPrinter::draw(const touchgfx::Rect&) const
</UL>
<BR>[Calls]<UL><LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&)
<LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_memcpy4_8
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16debugprinter.o(.constdata__ZTVN8touchgfx17LCD16DebugPrinterE)
</UL>
<P><STRONG><a name="[36c]"></a>touchgfx::AbstractGraphElement::rectAround(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5) const</STRONG> (Thumb, 56 bytes, Stack size 44 bytes, graphelements.o(i._ZNK8touchgfx20AbstractGraphElement10rectAroundENS_7CWRUtil2Q5ES2_S2_))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = touchgfx::AbstractGraphElement::rectAround(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5) const &rArr; touchgfx::AbstractGraphElement::rectFromQ5Coordinates(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5) const
</UL>
<BR>[Calls]<UL><LI><a href="#[40c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractGraphElement::rectFromQ5Coordinates(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5) const
</UL>
<BR>[Called By]<UL><LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GraphElementLine::invalidateGraphPointAt(short)
</UL>

<P><STRONG><a name="[40c]"></a>touchgfx::AbstractGraphElement::rectFromQ5Coordinates(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5) const</STRONG> (Thumb, 108 bytes, Stack size 4 bytes, graphelements.o(i._ZNK8touchgfx20AbstractGraphElement21rectFromQ5CoordinatesENS_7CWRUtil2Q5ES2_S2_S2_))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = touchgfx::AbstractGraphElement::rectFromQ5Coordinates(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5) const
</UL>
<BR>[Called By]<UL><LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractGraphElement::rectAround(touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5, touchgfx::CWRUtil::Q5) const
</UL>

<P><STRONG><a name="[19c]"></a>touchgfx::TextAreaWithOneWildcard::getWildcard1() const</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, digitalclock.o(i._ZNK8touchgfx23TextAreaWithOneWildcard12getWildcard1Ev))
<BR>[Address Reference Count : 1]<UL><LI> digitalclock.o(.constdata__ZTVN8touchgfx23TextAreaWithOneWildcardE)
</UL>
<P><STRONG><a name="[1a0]"></a>touchgfx::TextAreaWithTwoWildcards::getWildcard1() const</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, screen1viewbase.o(i._ZNK8touchgfx24TextAreaWithTwoWildcards12getWildcard1Ev))
<BR>[Address Reference Count : 1]<UL><LI> screen1viewbase.o(.constdata__ZTVN8touchgfx24TextAreaWithTwoWildcardsE)
</UL>
<P><STRONG><a name="[1a1]"></a>touchgfx::TextAreaWithTwoWildcards::getWildcard2() const</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, screen1viewbase.o(i._ZNK8touchgfx24TextAreaWithTwoWildcards12getWildcard2Ev))
<BR>[Address Reference Count : 1]<UL><LI> screen1viewbase.o(.constdata__ZTVN8touchgfx24TextAreaWithTwoWildcardsE)
</UL>
<P><STRONG><a name="[19e]"></a>touchgfx::TextAreaWithWildcardBase::calculateBoundingArea() const</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, digitalclock.o(i._ZNK8touchgfx24TextAreaWithWildcardBase21calculateBoundingAreaEv))
<BR>[Address Reference Count : 3]<UL><LI> digitalclock.o(.constdata__ZTVN8touchgfx23TextAreaWithOneWildcardE)
<LI> textareawithwildcard.o(.constdata__ZTVN8touchgfx24TextAreaWithWildcardBaseE)
<LI> screen1viewbase.o(.constdata__ZTVN8touchgfx24TextAreaWithTwoWildcardsE)
</UL>
<P><STRONG><a name="[194]"></a>touchgfx::TextAreaWithWildcardBase::draw(const touchgfx::Rect&) const</STRONG> (Thumb, 246 bytes, Stack size 88 bytes, textareawithwildcard.o(i._ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE))
<BR><BR>[Stack]<UL><LI>Max Depth = 888<LI>Call Chain = touchgfx::TextAreaWithWildcardBase::draw(const touchgfx::Rect&) const &rArr; touchgfx::LCD::drawString(touchgfx::Rect, const touchgfx::Rect&, const touchgfx::LCD::StringVisuals&, const unsigned short*, ...) &rArr; touchgfx::LCD::drawStringLTR(const touchgfx::Rect&, const touchgfx::Rect&, const touchgfx::LCD::StringVisuals&, const unsigned short*, std::__va_list) &rArr; touchgfx::LCD::drawStringInternal(unsigned short*, const touchgfx::Rect*, short, short, const touchgfx::Rect&, const touchgfx::LCD::StringVisuals*, unsigned char, touchgfx::TextProvider&, int, bool) &rArr; touchgfx::TextProvider::getNextLigature(unsigned char, const touchgfx::Font*, const touchgfx::GlyphNode*&, const unsigned char*&, unsigned char&) &rArr; touchgfx::TextProvider::getNextLigature(unsigned char) &rArr; touchgfx::TextProvider::substituteGlyphs() &rArr; touchgfx::TextProvider::applyGsubRules(const unsigned short*, unsigned short) &rArr; touchgfx::TextProvider::replaceInputCharacters(unsigned short, unsigned short, const unsigned short*) &rArr; touchgfx::TextProvider::fillInputBuffer()
</UL>
<BR>[Calls]<UL><LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::drawString(touchgfx::Rect, const touchgfx::Rect&, const touchgfx::LCD::StringVisuals&, const unsigned short*, ...)
<LI><a href="#[40d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Texts::getText(unsigned short) const
<LI><a href="#[363]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::getAbsoluteRect() const
</UL>
<BR>[Address Reference Count : 3]<UL><LI> digitalclock.o(.constdata__ZTVN8touchgfx23TextAreaWithOneWildcardE)
<LI> textareawithwildcard.o(.constdata__ZTVN8touchgfx24TextAreaWithWildcardBaseE)
<LI> screen1viewbase.o(.constdata__ZTVN8touchgfx24TextAreaWithTwoWildcardsE)
</UL>
<P><STRONG><a name="[166]"></a>touchgfx::AbstractProgressIndicator::getProgress(unsigned short) const</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, abstractprogressindicator.o(i._ZNK8touchgfx25AbstractProgressIndicator11getProgressEt))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = touchgfx::AbstractProgressIndicator::getProgress(unsigned short) const &rArr; touchgfx::muldiv(int, int, int, int&) &rArr; touchgfx::muldivu(unsigned, unsigned, unsigned, unsigned&) &rArr;  touchgfx::muldivu(unsigned, unsigned, unsigned, unsigned&) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::muldiv(int, int, int, int&)
</UL>
<BR>[Called By]<UL><LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ImageProgress::setValue(int)
</UL>
<BR>[Address Reference Count : 3]<UL><LI> abstractdirectionprogress.o(.constdata__ZTVN8touchgfx25AbstractDirectionProgressE)
<LI> abstractprogressindicator.o(.constdata__ZTVN8touchgfx25AbstractProgressIndicatorE)
<LI> imageprogress.o(.constdata__ZTVN8touchgfx13ImageProgressE)
</UL>
<P><STRONG><a name="[165]"></a>touchgfx::AbstractProgressIndicator::getValue() const</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, abstractprogressindicator.o(i._ZNK8touchgfx25AbstractProgressIndicator8getValueEv))
<BR>[Address Reference Count : 3]<UL><LI> abstractdirectionprogress.o(.constdata__ZTVN8touchgfx25AbstractDirectionProgressE)
<LI> abstractprogressindicator.o(.constdata__ZTVN8touchgfx25AbstractProgressIndicatorE)
<LI> imageprogress.o(.constdata__ZTVN8touchgfx13ImageProgressE)
</UL>
<P><STRONG><a name="[1a6]"></a>touchgfx::Box::getSolidRect() const</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, box.o(i._ZNK8touchgfx3Box12getSolidRectEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::Box::getSolidRect() const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> box.o(.constdata__ZTVN8touchgfx3BoxE)
</UL>
<P><STRONG><a name="[1a5]"></a>touchgfx::Box::draw(const touchgfx::Rect&) const</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, box.o(i._ZNK8touchgfx3Box4drawERKNS_4RectE))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::Box::draw(const touchgfx::Rect&) const
</UL>
<BR>[Calls]<UL><LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_memcpy4_8
</UL>
<BR>[Address Reference Count : 1]<UL><LI> box.o(.constdata__ZTVN8touchgfx3BoxE)
</UL>
<P><STRONG><a name="[382]"></a>touchgfx::HAL::getDstAddress(unsigned short, unsigned short, unsigned short*) const</STRONG> (Thumb, 48 bytes, Stack size 32 bytes, hal.o(i._ZNK8touchgfx3HAL13getDstAddressEttPt))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = touchgfx::HAL::getDstAddress(unsigned short, unsigned short, unsigned short*) const &rArr; touchgfx::HAL::getDstAddress(unsigned short, unsigned short, unsigned short*, unsigned short, touchgfx::Bitmap::BitmapFormat) const
</UL>
<BR>[Calls]<UL><LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::getDstAddress(unsigned short, unsigned short, unsigned short*, unsigned short, touchgfx::Bitmap::BitmapFormat) const
<LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::lcd()
</UL>
<BR>[Called By]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::copyFBRegionToMemory(touchgfx::Rect, unsigned short*, unsigned)
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::blitCopyGlyph(const unsigned char*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, touchgfx::colortype, unsigned char, touchgfx::BlitOperations, bool)
</UL>

<P><STRONG><a name="[38a]"></a>touchgfx::HAL::getDstAddress(unsigned short, unsigned short, unsigned short*, unsigned short, touchgfx::Bitmap::BitmapFormat) const</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, hal.o(i._ZNK8touchgfx3HAL13getDstAddressEttPttNS_6Bitmap12BitmapFormatE))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::HAL::getDstAddress(unsigned short, unsigned short, unsigned short*, unsigned short, touchgfx::Bitmap::BitmapFormat) const
</UL>
<BR>[Called By]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::blitFill(touchgfx::colortype, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, unsigned short, touchgfx::Bitmap::BitmapFormat, bool)
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::blitCopy(const unsigned short*, const unsigned char*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, bool, unsigned short, touchgfx::Bitmap::BitmapFormat, touchgfx::Bitmap::BitmapFormat, bool)
<LI><a href="#[382]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::getDstAddress(unsigned short, unsigned short, unsigned short*) const
</UL>

<P><STRONG><a name="[40f]"></a>touchgfx::LCD::DrawTextureMapScanLineBase::is1x1Inside(int, int, int, int) const</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZNK8touchgfx3LCD26DrawTextureMapScanLineBase11is1x1InsideEiiii))
<BR><BR>[Called By]<UL><LI><a href="#[3dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::DrawTextureMapScanLineBase16::overrunCheckNearestNeighbor(unsigned short*&, int&, int&, int&, int, int, short, short) const
</UL>

<P><STRONG><a name="[410]"></a>touchgfx::LCD::DrawTextureMapScanLineBase::is2x2Inside(int, int, int, int) const</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZNK8touchgfx3LCD26DrawTextureMapScanLineBase11is2x2InsideEiiii))
<BR><BR>[Called By]<UL><LI><a href="#[3de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::DrawTextureMapScanLineBase16::overrunCheckBilinearInterpolation(unsigned short*&, int&, int&, int&, int, int, short, short) const
</UL>

<P><STRONG><a name="[1ac]"></a>touchgfx::Font::getKerning(unsigned short, const touchgfx::GlyphNode*) const</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, texts.o(i._ZNK8touchgfx4Font10getKerningEtPKNS_9GlyphNodeE))
<BR>[Address Reference Count : 1]<UL><LI> texts.o(.constdata__ZTVN8touchgfx4FontE)
</UL>
<P><STRONG><a name="[157]"></a>touchgfx::Font::getBaseline() const</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, constfont.o(i._ZNK8touchgfx4Font11getBaselineEv))
<BR>[Address Reference Count : 3]<UL><LI> generatedfont.o(.constdata__ZTVN8touchgfx13GeneratedFontE)
<LI> texts.o(.constdata__ZTVN8touchgfx4FontE)
<LI> constfont.o(.constdata__ZTVN8touchgfx9ConstFontE)
</UL>
<P><STRONG><a name="[1ad]"></a>touchgfx::Font::getGSUBTable() const</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, constfont.o(i._ZNK8touchgfx4Font12getGSUBTableEv))
<BR>[Address Reference Count : 2]<UL><LI> texts.o(.constdata__ZTVN8touchgfx4FontE)
<LI> constfont.o(.constdata__ZTVN8touchgfx9ConstFontE)
</UL>
<P><STRONG><a name="[156]"></a>touchgfx::Font::getStringWidth(unsigned char, const unsigned short*, ...) const</STRONG> (Thumb, 18 bytes, Stack size 24 bytes, texts.o(i._ZNK8touchgfx4Font14getStringWidthEhPKtz))
<BR><BR>[Stack]<UL><LI>Max Depth = 360<LI>Call Chain = touchgfx::Font::getStringWidth(unsigned char, const unsigned short*, ...) const &rArr; touchgfx::Font::getStringWidthLTR(unsigned char, const unsigned short*, std::__va_list) const &rArr; touchgfx::TextProvider::getNextLigature(unsigned char, const touchgfx::Font*, const touchgfx::GlyphNode*&) &rArr; touchgfx::TextProvider::getNextLigature(unsigned char) &rArr; touchgfx::TextProvider::substituteGlyphs() &rArr; touchgfx::TextProvider::applyGsubRules(const unsigned short*, unsigned short) &rArr; touchgfx::TextProvider::replaceInputCharacters(unsigned short, unsigned short, const unsigned short*) &rArr; touchgfx::TextProvider::fillInputBuffer()
</UL>
<BR>[Calls]<UL><LI><a href="#[40e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Font::getStringWidthLTR(unsigned char, const unsigned short*, std::__va_list) const
</UL>
<BR>[Address Reference Count : 3]<UL><LI> generatedfont.o(.constdata__ZTVN8touchgfx13GeneratedFontE)
<LI> texts.o(.constdata__ZTVN8touchgfx4FontE)
<LI> constfont.o(.constdata__ZTVN8touchgfx9ConstFontE)
</UL>
<P><STRONG><a name="[159]"></a>touchgfx::Font::getBitsPerPixel() const</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, constfont.o(i._ZNK8touchgfx4Font15getBitsPerPixelEv))
<BR>[Address Reference Count : 3]<UL><LI> generatedfont.o(.constdata__ZTVN8touchgfx13GeneratedFontE)
<LI> texts.o(.constdata__ZTVN8touchgfx4FontE)
<LI> constfont.o(.constdata__ZTVN8touchgfx9ConstFontE)
</UL>
<P><STRONG><a name="[15a]"></a>touchgfx::Font::getByteAlignRow() const</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, constfont.o(i._ZNK8touchgfx4Font15getByteAlignRowEv))
<BR>[Address Reference Count : 3]<UL><LI> generatedfont.o(.constdata__ZTVN8touchgfx13GeneratedFontE)
<LI> texts.o(.constdata__ZTVN8touchgfx4FontE)
<LI> constfont.o(.constdata__ZTVN8touchgfx9ConstFontE)
</UL>
<P><STRONG><a name="[155]"></a>touchgfx::Font::getEllipsisChar() const</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, constfont.o(i._ZNK8touchgfx4Font15getEllipsisCharEv))
<BR>[Address Reference Count : 3]<UL><LI> generatedfont.o(.constdata__ZTVN8touchgfx13GeneratedFontE)
<LI> texts.o(.constdata__ZTVN8touchgfx4FontE)
<LI> constfont.o(.constdata__ZTVN8touchgfx9ConstFontE)
</UL>
<P><STRONG><a name="[154]"></a>touchgfx::Font::getFallbackChar() const</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, constfont.o(i._ZNK8touchgfx4Font15getFallbackCharEv))
<BR>[Address Reference Count : 3]<UL><LI> generatedfont.o(.constdata__ZTVN8touchgfx13GeneratedFontE)
<LI> texts.o(.constdata__ZTVN8touchgfx4FontE)
<LI> constfont.o(.constdata__ZTVN8touchgfx9ConstFontE)
</UL>
<P><STRONG><a name="[40e]"></a>touchgfx::Font::getStringWidthLTR(unsigned char, const unsigned short*, std::__va_list) const</STRONG> (Thumb, 162 bytes, Stack size 160 bytes, font.o(i._ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = touchgfx::Font::getStringWidthLTR(unsigned char, const unsigned short*, std::__va_list) const &rArr; touchgfx::TextProvider::getNextLigature(unsigned char, const touchgfx::Font*, const touchgfx::GlyphNode*&) &rArr; touchgfx::TextProvider::getNextLigature(unsigned char) &rArr; touchgfx::TextProvider::substituteGlyphs() &rArr; touchgfx::TextProvider::applyGsubRules(const unsigned short*, unsigned short) &rArr; touchgfx::TextProvider::replaceInputCharacters(unsigned short, unsigned short, const unsigned short*) &rArr; touchgfx::TextProvider::fillInputBuffer()
</UL>
<BR>[Calls]<UL><LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::TextProvider()
<LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::initialize(const unsigned short*, std::__va_list, const unsigned short*, const touchgfx::FontContextualFormsTable*)
<LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::getNextLigature(unsigned char, const touchgfx::Font*, const touchgfx::GlyphNode*&)
</UL>
<BR>[Called By]<UL><LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Font::getStringWidth(unsigned char, const unsigned short*, ...) const
</UL>

<P><STRONG><a name="[1ae]"></a>touchgfx::Font::getContextualFormsTable() const</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, constfont.o(i._ZNK8touchgfx4Font23getContextualFormsTableEv))
<BR>[Address Reference Count : 2]<UL><LI> texts.o(.constdata__ZTVN8touchgfx4FontE)
<LI> constfont.o(.constdata__ZTVN8touchgfx9ConstFontE)
</UL>
<P><STRONG><a name="[153]"></a>touchgfx::Font::getGlyph(unsigned short) const</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, constfont.o(i._ZNK8touchgfx4Font8getGlyphEt))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::Font::getGlyph(unsigned short) const
</UL>
<BR>[Address Reference Count : 3]<UL><LI> generatedfont.o(.constdata__ZTVN8touchgfx13GeneratedFontE)
<LI> texts.o(.constdata__ZTVN8touchgfx4FontE)
<LI> constfont.o(.constdata__ZTVN8touchgfx9ConstFontE)
</UL>
<P><STRONG><a name="[158]"></a>touchgfx::Font::getHeight() const</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, constfont.o(i._ZNK8touchgfx4Font9getHeightEv))
<BR>[Address Reference Count : 3]<UL><LI> generatedfont.o(.constdata__ZTVN8touchgfx13GeneratedFontE)
<LI> texts.o(.constdata__ZTVN8touchgfx4FontE)
<LI> constfont.o(.constdata__ZTVN8touchgfx9ConstFontE)
</UL>
<P><STRONG><a name="[3ab]"></a>touchgfx::Rect::operator &(const touchgfx::Rect&) const</STRONG> (Thumb, 158 bytes, Stack size 32 bytes, container.o(i._ZNK8touchgfx4RectanERKS0_))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = touchgfx::Rect::operator &(const touchgfx::Rect&) const
</UL>
<BR>[Calls]<UL><LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_memcpy4_8
</UL>
<BR>[Called By]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::draw(touchgfx::Rect&)
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Container::draw(const touchgfx::Rect&) const
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Container::setupDrawChain(const touchgfx::Rect&, touchgfx::Drawable**)
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::JSMOC(const touchgfx::Rect&, touchgfx::Drawable*)
<LI><a href="#[401]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ScalableImage::drawQuad(const touchgfx::Rect&, unsigned short*, const float*, const float*, const float*, const float*, const float*) const
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ScalableImage::getSolidRect() const
</UL>

<P><STRONG><a name="[1b0]"></a>touchgfx::Image::getSolidRect() const</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, image.o(i._ZNK8touchgfx5Image12getSolidRectEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::Image::getSolidRect() const &rArr; touchgfx::Bitmap::getSolidRect() const
</UL>
<BR>[Calls]<UL><LI><a href="#[3cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getSolidRect() const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> image.o(.constdata__ZTVN8touchgfx5ImageE)
</UL>
<P><STRONG><a name="[1af]"></a>touchgfx::Image::draw(const touchgfx::Rect&) const</STRONG> (Thumb, 324 bytes, Stack size 64 bytes, image.o(i._ZNK8touchgfx5Image4drawERKNS_4RectE))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = touchgfx::Image::draw(const touchgfx::Rect&) const &rArr; touchgfx::Bitmap::getHeight() const
</UL>
<BR>[Calls]<UL><LI><a href="#[32f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getHeight() const
<LI><a href="#[32e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getWidth() const
<LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_memcpy4_8
</UL>
<BR>[Address Reference Count : 1]<UL><LI> image.o(.constdata__ZTVN8touchgfx5ImageE)
</UL>
<P><STRONG><a name="[40d]"></a>touchgfx::Texts::getText(unsigned short) const</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, texts.o(i._ZNK8touchgfx5Texts7getTextEt))
<BR><BR>[Called By]<UL><LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TypedText::getText() const
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithWildcardBase::draw(const touchgfx::Rect&) const
</UL>

<P><STRONG><a name="[3ca]"></a>touchgfx::Bitmap::getExtraData() const</STRONG> (Thumb, 160 bytes, Stack size 8 bytes, bitmap.o(i._ZNK8touchgfx6Bitmap12getExtraDataEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::Bitmap::getExtraData() const
</UL>
<BR>[Called By]<UL><LI><a href="#[406]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextureMapper::drawQuad(const touchgfx::Rect&, unsigned short*, const float*, const float*, const float*, const float*, const float*) const
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::drawPartialBitmap(const touchgfx::Bitmap&, short, short, const touchgfx::Rect&, unsigned char, bool)
<LI><a href="#[401]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ScalableImage::drawQuad(const touchgfx::Rect&, unsigned short*, const float*, const float*, const float*, const float*, const float*) const
</UL>

<P><STRONG><a name="[3cb]"></a>touchgfx::Bitmap::getSolidRect() const</STRONG> (Thumb, 142 bytes, Stack size 8 bytes, bitmap.o(i._ZNK8touchgfx6Bitmap12getSolidRectEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::Bitmap::getSolidRect() const
</UL>
<BR>[Called By]<UL><LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TiledImage::getSolidRect() const
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::drawPartialBitmap(const touchgfx::Bitmap&, short, short, const touchgfx::Rect&, unsigned char, bool)
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ScalableImage::getSolidRect() const
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Image::getSolidRect() const
</UL>

<P><STRONG><a name="[37d]"></a>touchgfx::Bitmap::hasTransparentPixels() const</STRONG> (Thumb, 102 bytes, Stack size 8 bytes, bitmap.o(i._ZNK8touchgfx6Bitmap20hasTransparentPixelsEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::Bitmap::hasTransparentPixels() const
</UL>
<BR>[Called By]<UL><LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::drawPartialBitmap(const touchgfx::Bitmap&, short, short, const touchgfx::Rect&, unsigned char, bool)
<LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::lookupNearestNeighborRenderVariant(const touchgfx::Bitmap&)
<LI><a href="#[37b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::lookupBilinearRenderVariant(const touchgfx::Bitmap&)
</UL>

<P><STRONG><a name="[3c9]"></a>touchgfx::Bitmap::getData() const</STRONG> (Thumb, 86 bytes, Stack size 8 bytes, bitmap.o(i._ZNK8touchgfx6Bitmap7getDataEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::Bitmap::getData() const
</UL>
<BR>[Called By]<UL><LI><a href="#[406]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextureMapper::drawQuad(const touchgfx::Rect&, unsigned short*, const float*, const float*, const float*, const float*, const float*) const
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::copyFrameBufferRegionToMemory(const touchgfx::Rect&, const touchgfx::Rect&, unsigned short)
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::drawPartialBitmap(const touchgfx::Bitmap&, short, short, const touchgfx::Rect&, unsigned char, bool)
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::SnapshotWidget::draw(const touchgfx::Rect&) const
<LI><a href="#[401]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ScalableImage::drawQuad(const touchgfx::Rect&, unsigned short*, const float*, const float*, const float*, const float*, const float*) const
</UL>

<P><STRONG><a name="[32e]"></a>touchgfx::Bitmap::getWidth() const</STRONG> (Thumb, 86 bytes, Stack size 8 bytes, bitmap.o(i._ZNK8touchgfx6Bitmap8getWidthEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::Bitmap::getWidth() const
</UL>
<BR>[Called By]<UL><LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TiledImage::draw(const touchgfx::Rect&) const
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TiledImage::getSolidRect() const
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TiledImage::setXOffset(short)
<LI><a href="#[406]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextureMapper::drawQuad(const touchgfx::Rect&, unsigned short*, const float*, const float*, const float*, const float*, const float*) const
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextureMapper::draw(const touchgfx::Rect&) const
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::copyFrameBufferRegionToMemory(const touchgfx::Rect&, const touchgfx::Rect&, unsigned short)
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::drawPartialBitmap(const touchgfx::Bitmap&, short, short, const touchgfx::Rect&, unsigned char, bool)
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Image::setBitmap(const touchgfx::Bitmap&)
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextureMapper::applyTransformation()
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::SnapshotWidget::draw(const touchgfx::Rect&) const
<LI><a href="#[401]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ScalableImage::drawQuad(const touchgfx::Rect&, unsigned short*, const float*, const float*, const float*, const float*, const float*) const
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ScalableImage::draw(const touchgfx::Rect&) const
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ScalableImage::getSolidRect() const
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Image::draw(const touchgfx::Rect&) const
</UL>

<P><STRONG><a name="[37c]"></a>touchgfx::Bitmap::getFormat() const</STRONG> (Thumb, 110 bytes, Stack size 8 bytes, bitmap.o(i._ZNK8touchgfx6Bitmap9getFormatEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::Bitmap::getFormat() const
</UL>
<BR>[Called By]<UL><LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::copyFrameBufferRegionToMemory(const touchgfx::Rect&, const touchgfx::Rect&, unsigned short)
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::drawPartialBitmap(const touchgfx::Bitmap&, short, short, const touchgfx::Rect&, unsigned char, bool)
<LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::lookupNearestNeighborRenderVariant(const touchgfx::Bitmap&)
<LI><a href="#[37b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::lookupBilinearRenderVariant(const touchgfx::Bitmap&)
</UL>

<P><STRONG><a name="[32f]"></a>touchgfx::Bitmap::getHeight() const</STRONG> (Thumb, 86 bytes, Stack size 8 bytes, bitmap.o(i._ZNK8touchgfx6Bitmap9getHeightEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::Bitmap::getHeight() const
</UL>
<BR>[Called By]<UL><LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TiledImage::draw(const touchgfx::Rect&) const
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TiledImage::getSolidRect() const
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TiledImage::setYOffset(short)
<LI><a href="#[406]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextureMapper::drawQuad(const touchgfx::Rect&, unsigned short*, const float*, const float*, const float*, const float*, const float*) const
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextureMapper::draw(const touchgfx::Rect&) const
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::copyFrameBufferRegionToMemory(const touchgfx::Rect&, const touchgfx::Rect&, unsigned short)
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::drawPartialBitmap(const touchgfx::Bitmap&, short, short, const touchgfx::Rect&, unsigned char, bool)
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Image::setBitmap(const touchgfx::Bitmap&)
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextureMapper::applyTransformation()
<LI><a href="#[401]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ScalableImage::drawQuad(const touchgfx::Rect&, unsigned short*, const float*, const float*, const float*, const float*, const float*) const
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ScalableImage::draw(const touchgfx::Rect&) const
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ScalableImage::getSolidRect() const
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Image::draw(const touchgfx::Rect&) const
</UL>

<P><STRONG><a name="[40a]"></a>touchgfx::CWRUtil::Q5::ceil() const</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, graphelements.o(i._ZNK8touchgfx7CWRUtil2Q54ceilEv))
<BR><BR>[Called By]<UL><LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GraphElementLine::drawCanvasWidget(const touchgfx::Rect&) const
</UL>

<P><STRONG><a name="[409]"></a>touchgfx::CWRUtil::Q5::round() const</STRONG> (Thumb, 48 bytes, Stack size 12 bytes, graphelements.o(i._ZNK8touchgfx7CWRUtil2Q55roundEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = touchgfx::CWRUtil::Q5::round() const
</UL>
<BR>[Called By]<UL><LI><a href="#[408]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GraphElementLine::drawIndexRange(touchgfx::Canvas&, const touchgfx::AbstractDataGraph*, short, short) const
</UL>

<P><STRONG><a name="[10d]"></a>touchgfx::Drawable::invalidate() const</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, drawable.o(i._ZNK8touchgfx8Drawable10invalidateEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::Drawable::invalidate() const
</UL>
<BR>[Called By]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1View::handleTickEvent()
<LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1View::Screen1speed()
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1View::setupScreen()
<LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1View::runAnimcar()
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDirectionProgress::setDirection(touchgfx::AbstractDirectionProgress::DirectionType)
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDataGraph::setGraphRangeYScaled(int, int)
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDataGraph::setGraphRangeXScaled(int, int)
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GraphScrollData::addValue(int)
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ImageProgress::setValue(int)
<LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDataGraph::invalidateAllXAxisPoints()
</UL>
<BR>[Address Reference Count : 21]<UL><LI> texturemapper.o(.constdata__ZTVN8touchgfx13TextureMapperE)
<LI> abstractclock.o(.constdata__ZTVN8touchgfx13AbstractClockE)
<LI> abstractdirectionprogress.o(.constdata__ZTVN8touchgfx25AbstractDirectionProgressE)
<LI> box.o(.constdata__ZTVN8touchgfx3BoxE)
<LI> abstractdatagraph.o(.constdata__ZTVN8touchgfx17AbstractDataGraphE)
<LI> abstractdatagraph.o(.constdata__ZTVN8touchgfx16DynamicDataGraphE)
<LI> digitalclock.o(.constdata__ZTVN8touchgfx12DigitalClockE)
<LI> digitalclock.o(.constdata__ZTVN8touchgfx23TextAreaWithOneWildcardE)
<LI> container.o(.constdata__ZTVN8touchgfx9ContainerE)
<LI> abstractprogressindicator.o(.constdata__ZTVN8touchgfx25AbstractProgressIndicatorE)
<LI> drawable.o(.constdata__ZTVN8touchgfx8DrawableE)
<LI> imageprogress.o(.constdata__ZTVN8touchgfx13ImageProgressE)
<LI> image.o(.constdata__ZTVN8touchgfx5ImageE)
<LI> scalableimage.o(.constdata__ZTVN8touchgfx13ScalableImageE)
<LI> textareawithwildcard.o(.constdata__ZTVN8touchgfx24TextAreaWithWildcardBaseE)
<LI> screen1viewbase.o(.constdata__ZTVN8touchgfx6WidgetE)
<LI> screen1viewbase.o(.constdata__ZTVN8touchgfx24TextAreaWithTwoWildcardsE)
<LI> screen1viewbase.o(.constdata__ZTVN8touchgfx11GraphScrollILs150EEE)
<LI> snapshotwidget.o(.constdata__ZTVN8touchgfx14SnapshotWidgetE)
<LI> tiledimage.o(.constdata__ZTVN8touchgfx10TiledImageE)
<LI> textarea.o(.constdata__ZTVN8touchgfx8TextAreaE)
</UL>
<P><STRONG><a name="[10f]"></a>touchgfx::Drawable::getVisibleRect(touchgfx::Rect&) const</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, drawable.o(i._ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = touchgfx::Drawable::getVisibleRect(touchgfx::Rect&) const &rArr; touchgfx::Rect::operator &=(const touchgfx::Rect&)
</UL>
<BR>[Calls]<UL><LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::operator &=(const touchgfx::Rect&)
</UL>
<BR>[Address Reference Count : 23]<UL><LI> texturemapper.o(.constdata__ZTVN8touchgfx13TextureMapperE)
<LI> abstractclock.o(.constdata__ZTVN8touchgfx13AbstractClockE)
<LI> abstractdirectionprogress.o(.constdata__ZTVN8touchgfx25AbstractDirectionProgressE)
<LI> box.o(.constdata__ZTVN8touchgfx3BoxE)
<LI> canvaswidget.o(.constdata__ZTVN8touchgfx12CanvasWidgetE)
<LI> abstractdatagraph.o(.constdata__ZTVN8touchgfx17AbstractDataGraphE)
<LI> abstractdatagraph.o(.constdata__ZTVN8touchgfx16DynamicDataGraphE)
<LI> digitalclock.o(.constdata__ZTVN8touchgfx12DigitalClockE)
<LI> digitalclock.o(.constdata__ZTVN8touchgfx23TextAreaWithOneWildcardE)
<LI> container.o(.constdata__ZTVN8touchgfx9ContainerE)
<LI> abstractprogressindicator.o(.constdata__ZTVN8touchgfx25AbstractProgressIndicatorE)
<LI> drawable.o(.constdata__ZTVN8touchgfx8DrawableE)
<LI> imageprogress.o(.constdata__ZTVN8touchgfx13ImageProgressE)
<LI> image.o(.constdata__ZTVN8touchgfx5ImageE)
<LI> scalableimage.o(.constdata__ZTVN8touchgfx13ScalableImageE)
<LI> textareawithwildcard.o(.constdata__ZTVN8touchgfx24TextAreaWithWildcardBaseE)
<LI> screen1viewbase.o(.constdata__ZTVN8touchgfx6WidgetE)
<LI> screen1viewbase.o(.constdata__ZTVN8touchgfx24TextAreaWithTwoWildcardsE)
<LI> screen1viewbase.o(.constdata__ZTVN8touchgfx11GraphScrollILs150EEE)
<LI> snapshotwidget.o(.constdata__ZTVN8touchgfx14SnapshotWidgetE)
<LI> tiledimage.o(.constdata__ZTVN8touchgfx10TiledImageE)
<LI> graphelements.o(.constdata__ZTVN8touchgfx16GraphElementLineE)
<LI> textarea.o(.constdata__ZTVN8touchgfx8TextAreaE)
</UL>
<P><STRONG><a name="[10c]"></a>touchgfx::Drawable::invalidateRect(touchgfx::Rect&) const</STRONG> (Thumb, 114 bytes, Stack size 24 bytes, drawable.o(i._ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = touchgfx::Drawable::invalidateRect(touchgfx::Rect&) const &rArr; touchgfx::Rect::operator &=(const touchgfx::Rect&)
</UL>
<BR>[Calls]<UL><LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::getInstance()
<LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_memcpy4_8
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::operator &=(const touchgfx::Rect&)
</UL>
<BR>[Called By]<UL><LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ImageProgress::setValue(int)
</UL>
<BR>[Address Reference Count : 23]<UL><LI> texturemapper.o(.constdata__ZTVN8touchgfx13TextureMapperE)
<LI> abstractclock.o(.constdata__ZTVN8touchgfx13AbstractClockE)
<LI> abstractdirectionprogress.o(.constdata__ZTVN8touchgfx25AbstractDirectionProgressE)
<LI> box.o(.constdata__ZTVN8touchgfx3BoxE)
<LI> canvaswidget.o(.constdata__ZTVN8touchgfx12CanvasWidgetE)
<LI> abstractdatagraph.o(.constdata__ZTVN8touchgfx17AbstractDataGraphE)
<LI> abstractdatagraph.o(.constdata__ZTVN8touchgfx16DynamicDataGraphE)
<LI> digitalclock.o(.constdata__ZTVN8touchgfx12DigitalClockE)
<LI> digitalclock.o(.constdata__ZTVN8touchgfx23TextAreaWithOneWildcardE)
<LI> container.o(.constdata__ZTVN8touchgfx9ContainerE)
<LI> abstractprogressindicator.o(.constdata__ZTVN8touchgfx25AbstractProgressIndicatorE)
<LI> drawable.o(.constdata__ZTVN8touchgfx8DrawableE)
<LI> imageprogress.o(.constdata__ZTVN8touchgfx13ImageProgressE)
<LI> image.o(.constdata__ZTVN8touchgfx5ImageE)
<LI> scalableimage.o(.constdata__ZTVN8touchgfx13ScalableImageE)
<LI> textareawithwildcard.o(.constdata__ZTVN8touchgfx24TextAreaWithWildcardBaseE)
<LI> screen1viewbase.o(.constdata__ZTVN8touchgfx6WidgetE)
<LI> screen1viewbase.o(.constdata__ZTVN8touchgfx24TextAreaWithTwoWildcardsE)
<LI> screen1viewbase.o(.constdata__ZTVN8touchgfx11GraphScrollILs150EEE)
<LI> snapshotwidget.o(.constdata__ZTVN8touchgfx14SnapshotWidgetE)
<LI> tiledimage.o(.constdata__ZTVN8touchgfx10TiledImageE)
<LI> graphelements.o(.constdata__ZTVN8touchgfx16GraphElementLineE)
<LI> textarea.o(.constdata__ZTVN8touchgfx8TextAreaE)
</UL>
<P><STRONG><a name="[363]"></a>touchgfx::Drawable::getAbsoluteRect() const</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, drawable.o(i._ZNK8touchgfx8Drawable15getAbsoluteRectEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::Drawable::getAbsoluteRect() const
</UL>
<BR>[Called By]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::draw(touchgfx::Rect&)
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::handleGestureEvent(const touchgfx::GestureEvent&)
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::handleClickEvent(const touchgfx::ClickEvent&)
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::handleDragEvent(const touchgfx::DragEvent&)
<LI><a href="#[406]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextureMapper::drawQuad(const touchgfx::Rect&, unsigned short*, const float*, const float*, const float*, const float*, const float*) const
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::draw(const touchgfx::Rect&) const
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithWildcardBase::draw(const touchgfx::Rect&) const
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Container::getLastChildNear(short, short, touchgfx::Drawable**, short*, short*)
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::SnapshotWidget::makeSnapshot(unsigned short)
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::JSMOC(const touchgfx::Rect&, touchgfx::Drawable*)
<LI><a href="#[401]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ScalableImage::drawQuad(const touchgfx::Rect&, unsigned short*, const float*, const float*, const float*, const float*, const float*) const
</UL>

<P><STRONG><a name="[110]"></a>touchgfx::Drawable::translateRectToAbsolute(touchgfx::Rect&) const</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, drawable.o(i._ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE))
<BR>[Address Reference Count : 23]<UL><LI> texturemapper.o(.constdata__ZTVN8touchgfx13TextureMapperE)
<LI> abstractclock.o(.constdata__ZTVN8touchgfx13AbstractClockE)
<LI> abstractdirectionprogress.o(.constdata__ZTVN8touchgfx25AbstractDirectionProgressE)
<LI> box.o(.constdata__ZTVN8touchgfx3BoxE)
<LI> canvaswidget.o(.constdata__ZTVN8touchgfx12CanvasWidgetE)
<LI> abstractdatagraph.o(.constdata__ZTVN8touchgfx17AbstractDataGraphE)
<LI> abstractdatagraph.o(.constdata__ZTVN8touchgfx16DynamicDataGraphE)
<LI> digitalclock.o(.constdata__ZTVN8touchgfx12DigitalClockE)
<LI> digitalclock.o(.constdata__ZTVN8touchgfx23TextAreaWithOneWildcardE)
<LI> container.o(.constdata__ZTVN8touchgfx9ContainerE)
<LI> abstractprogressindicator.o(.constdata__ZTVN8touchgfx25AbstractProgressIndicatorE)
<LI> drawable.o(.constdata__ZTVN8touchgfx8DrawableE)
<LI> imageprogress.o(.constdata__ZTVN8touchgfx13ImageProgressE)
<LI> image.o(.constdata__ZTVN8touchgfx5ImageE)
<LI> scalableimage.o(.constdata__ZTVN8touchgfx13ScalableImageE)
<LI> textareawithwildcard.o(.constdata__ZTVN8touchgfx24TextAreaWithWildcardBaseE)
<LI> screen1viewbase.o(.constdata__ZTVN8touchgfx6WidgetE)
<LI> screen1viewbase.o(.constdata__ZTVN8touchgfx24TextAreaWithTwoWildcardsE)
<LI> screen1viewbase.o(.constdata__ZTVN8touchgfx11GraphScrollILs150EEE)
<LI> snapshotwidget.o(.constdata__ZTVN8touchgfx14SnapshotWidgetE)
<LI> tiledimage.o(.constdata__ZTVN8touchgfx10TiledImageE)
<LI> graphelements.o(.constdata__ZTVN8touchgfx16GraphElementLineE)
<LI> textarea.o(.constdata__ZTVN8touchgfx8TextAreaE)
</UL>
<P><STRONG><a name="[3c6]"></a>touchgfx::LCD16bpp::DecompressorL8_L4::blendPixelRGB565(unsigned short, unsigned short, int, int) const</STRONG> (Thumb, 120 bytes, Stack size 16 bytes, lcd16bpp.o(i._ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::LCD16bpp::DecompressorL8_L4::blendPixelRGB565(unsigned short, unsigned short, int, int) const
</UL>
<BR>[Called By]<UL><LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::DecompressorL8_L4::blitCopyRGB565(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
</UL>

<P><STRONG><a name="[3c7]"></a>touchgfx::LCD16bpp::DecompressorL8_L4::blendPixelRGB888(const unsigned char*, unsigned short, unsigned char, unsigned char) const</STRONG> (Thumb, 124 bytes, Stack size 16 bytes, lcd16bpp.o(i._ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::LCD16bpp::DecompressorL8_L4::blendPixelRGB888(const unsigned char*, unsigned short, unsigned char, unsigned char) const
</UL>
<BR>[Called By]<UL><LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::DecompressorL8_L4::blitCopyRGB888(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
</UL>

<P><STRONG><a name="[3c8]"></a>touchgfx::LCD16bpp::DecompressorL8_L4::blendPixelARGB8888(unsigned, unsigned short, int, unsigned char) const</STRONG> (Thumb, 214 bytes, Stack size 36 bytes, lcd16bpp.o(i._ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Ejtih))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = touchgfx::LCD16bpp::DecompressorL8_L4::blendPixelARGB8888(unsigned, unsigned short, int, unsigned char) const
</UL>
<BR>[Called By]<UL><LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::DecompressorL8_L4::blitCopyARGB8888(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
</UL>

<P><STRONG><a name="[1e2]"></a>touchgfx::LCD16bpp::framebufferFormat() const</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZNK8touchgfx8LCD16bpp17framebufferFormatEv))
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bppE)
</UL>
<P><STRONG><a name="[1e3]"></a>touchgfx::LCD16bpp::framebufferStride() const</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, lcd16bpp.o(i._ZNK8touchgfx8LCD16bpp17framebufferStrideEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::LCD16bpp::framebufferStride() const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bppE)
</UL>
<P><STRONG><a name="[3cc]"></a>touchgfx::LCD16bpp::blitCopyARGB8888Solid(const unsigned*, const touchgfx::Rect&, const touchgfx::Rect&) const</STRONG> (Thumb, 224 bytes, Stack size 56 bytes, lcd16bpp.o(i._ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKjRKNS_4RectES5_))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = touchgfx::LCD16bpp::blitCopyARGB8888Solid(const unsigned*, const touchgfx::Rect&, const touchgfx::Rect&) const
</UL>
<BR>[Calls]<UL><LI><a href="#[3a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&, const touchgfx::Rect&)
<LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&)
<LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_memcpy4_8
</UL>
<BR>[Called By]<UL><LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::drawPartialBitmap(const touchgfx::Bitmap&, short, short, const touchgfx::Rect&, unsigned char, bool)
</UL>

<P><STRONG><a name="[3dc]"></a>touchgfx::LCD16bpp::DrawTextureMapScanLineBase16::overrunCheckNearestNeighbor(unsigned short*&, int&, int&, int&, int, int, short, short) const</STRONG> (Thumb, 154 bytes, Stack size 40 bytes, lcd16bpp.o(i._ZNK8touchgfx8LCD16bpp28DrawTextureMapScanLineBase1627overrunCheckNearestNeighborERPtRiS4_S4_iiss))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = touchgfx::LCD16bpp::DrawTextureMapScanLineBase16::overrunCheckNearestNeighbor(unsigned short*&, int&, int&, int&, int, int, short, short) const
</UL>
<BR>[Calls]<UL><LI><a href="#[40f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::DrawTextureMapScanLineBase::is1x1Inside(int, int, int, int) const
</UL>
<BR>[Called By]<UL><LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_A4_NearestNeighbor_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_A4_NearestNeighbor_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
</UL>

<P><STRONG><a name="[3de]"></a>touchgfx::LCD16bpp::DrawTextureMapScanLineBase16::overrunCheckBilinearInterpolation(unsigned short*&, int&, int&, int&, int, int, short, short) const</STRONG> (Thumb, 172 bytes, Stack size 40 bytes, lcd16bpp.o(i._ZNK8touchgfx8LCD16bpp28DrawTextureMapScanLineBase1633overrunCheckBilinearInterpolationERPtRiS4_S4_iiss))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = touchgfx::LCD16bpp::DrawTextureMapScanLineBase16::overrunCheckBilinearInterpolation(unsigned short*&, int&, int&, int&, int, int, short, short) const
</UL>
<BR>[Calls]<UL><LI><a href="#[410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::DrawTextureMapScanLineBase::is2x2Inside(int, int, int, int) const
</UL>
<BR>[Called By]<UL><LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_A4_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_A4_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
</UL>

<P><STRONG><a name="[3e0]"></a>touchgfx::LCD16bpp::TextureMapper_A4_BilinearInterpolation_GA::writePixelOnEdge(unsigned short*, const unsigned short*, short, short, short, int, int, unsigned char, unsigned char, unsigned char) const</STRONG> (Thumb, 340 bytes, Stack size 80 bytes, lcd16bpp.o(i._ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_A4_BilinearInterpolation_GA::writePixelOnEdge(unsigned short*, const unsigned short*, short, short, short, int, int, unsigned char, unsigned char, unsigned char) const &rArr; touchgfx::LCD16bpp::bilinearInterpolate8(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)
</UL>
<BR>[Calls]<UL><LI><a href="#[3e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::bilinearInterpolate8(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)
<LI><a href="#[3df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::getAlphaFromA4(const unsigned short*, unsigned)
</UL>
<BR>[Called By]<UL><LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_A4_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
</UL>

<P><STRONG><a name="[3e2]"></a>touchgfx::LCD16bpp::TextureMapper_A4_BilinearInterpolation_NoGA::writePixelOnEdge(unsigned short*, const unsigned short*, short, short, short, int, int, unsigned char, unsigned char) const</STRONG> (Thumb, 300 bytes, Stack size 80 bytes, lcd16bpp.o(i._ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_A4_BilinearInterpolation_NoGA::writePixelOnEdge(unsigned short*, const unsigned short*, short, short, short, int, int, unsigned char, unsigned char) const &rArr; touchgfx::LCD16bpp::bilinearInterpolate8(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)
</UL>
<BR>[Calls]<UL><LI><a href="#[3e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::bilinearInterpolate8(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)
<LI><a href="#[3df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::getAlphaFromA4(const unsigned short*, unsigned)
</UL>
<BR>[Called By]<UL><LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_A4_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
</UL>

<P><STRONG><a name="[3e4]"></a>touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_BilinearInterpolation_GA::writePixelOnEdge(unsigned short*, const unsigned short*, short, short, int, int, unsigned char, unsigned char, unsigned char) const</STRONG> (Thumb, 268 bytes, Stack size 48 bytes, lcd16bpp.o(i._ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_BilinearInterpolation_GA::writePixelOnEdge(unsigned short*, const unsigned short*, short, short, int, int, unsigned char, unsigned char, unsigned char) const &rArr; touchgfx::LCD16bpp::bilinearInterpolate565(unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, unsigned char)
</UL>
<BR>[Calls]<UL><LI><a href="#[3e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::bilinearInterpolate565(unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, unsigned char)
</UL>
<BR>[Called By]<UL><LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_Opaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
</UL>

<P><STRONG><a name="[3e5]"></a>touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA::writePixelOnEdge(unsigned short*, const unsigned char*, const unsigned short*, short, short, int, int, unsigned char, unsigned char, unsigned char) const</STRONG> (Thumb, 266 bytes, Stack size 56 bytes, lcd16bpp.o(i._ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA::writePixelOnEdge(unsigned short*, const unsigned char*, const unsigned short*, short, short, int, int, unsigned char, unsigned char, unsigned char) const &rArr; touchgfx::LCD16bpp::bilinearInterpolate565(unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, unsigned char)
</UL>
<BR>[Calls]<UL><LI><a href="#[3e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::bilinearInterpolate565(unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, unsigned char)
</UL>
<BR>[Called By]<UL><LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
</UL>

<P><STRONG><a name="[3e6]"></a>touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA::writePixel(unsigned short*, const unsigned char*, const unsigned char*, short, int, int, unsigned char, unsigned char, unsigned char) const</STRONG> (Thumb, 278 bytes, Stack size 56 bytes, lcd16bpp.o(i._ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA10writePixelEPtPKhS4_siihhh))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA::writePixel(unsigned short*, const unsigned char*, const unsigned char*, short, int, int, unsigned char, unsigned char, unsigned char) const &rArr; touchgfx::LCD16bpp::bilinearInterpolate8(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)
</UL>
<BR>[Calls]<UL><LI><a href="#[3e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::bilinearInterpolate8(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)
</UL>
<BR>[Called By]<UL><LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
</UL>

<P><STRONG><a name="[3e7]"></a>touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA::writePixelOnEdge(unsigned short*, const unsigned char*, const unsigned char*, short, short, int, int, unsigned char, unsigned char, unsigned char) const</STRONG> (Thumb, 372 bytes, Stack size 80 bytes, lcd16bpp.o(i._ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA::writePixelOnEdge(unsigned short*, const unsigned char*, const unsigned char*, short, short, int, int, unsigned char, unsigned char, unsigned char) const &rArr; touchgfx::LCD16bpp::bilinearInterpolate8(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)
</UL>
<BR>[Calls]<UL><LI><a href="#[3e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::bilinearInterpolate8(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)
</UL>
<BR>[Called By]<UL><LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
</UL>

<P><STRONG><a name="[3e8]"></a>touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA::writePixel(unsigned short*, const unsigned short*, const unsigned char*, short, int, int, unsigned char, unsigned char, unsigned char) const</STRONG> (Thumb, 420 bytes, Stack size 80 bytes, lcd16bpp.o(i._ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA10writePixelEPtPKtPKhsiihhh))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA::writePixel(unsigned short*, const unsigned short*, const unsigned char*, short, int, int, unsigned char, unsigned char, unsigned char) const &rArr; touchgfx::LCD16bpp::bilinearInterpolate565(unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, unsigned char)
</UL>
<BR>[Calls]<UL><LI><a href="#[3e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::bilinearInterpolate565(unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, unsigned char)
<LI><a href="#[3e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::bilinearInterpolate8(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)
<LI><a href="#[411]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::div255_565_FFcheck(unsigned short, unsigned char)
</UL>
<BR>[Called By]<UL><LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
</UL>

<P><STRONG><a name="[3e9]"></a>touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA::writePixelOnEdge(unsigned short*, const unsigned short*, const unsigned char*, short, short, int, int, unsigned char, unsigned char, unsigned char) const</STRONG> (Thumb, 382 bytes, Stack size 96 bytes, lcd16bpp.o(i._ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA::writePixelOnEdge(unsigned short*, const unsigned short*, const unsigned char*, short, short, int, int, unsigned char, unsigned char, unsigned char) const &rArr; touchgfx::LCD16bpp::bilinearInterpolate565(unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, unsigned char)
</UL>
<BR>[Calls]<UL><LI><a href="#[3e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::bilinearInterpolate565(unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, unsigned char)
<LI><a href="#[3e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::bilinearInterpolate8(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)
<LI><a href="#[412]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::div255_565(unsigned short, unsigned char)
</UL>
<BR>[Called By]<UL><LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
</UL>

<P><STRONG><a name="[3ea]"></a>touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA::writePixel(unsigned short*, const unsigned*, short, int, int, unsigned char, unsigned char, unsigned char) const</STRONG> (Thumb, 330 bytes, Stack size 80 bytes, lcd16bpp.o(i._ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA10writePixelEPtPKjsiihhh))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA::writePixel(unsigned short*, const unsigned*, short, int, int, unsigned char, unsigned char, unsigned char) const &rArr; touchgfx::LCD16bpp::bilinearInterpolate888(unsigned, unsigned, unsigned, unsigned, unsigned char, unsigned char)
</UL>
<BR>[Calls]<UL><LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::bilinearInterpolate888(unsigned, unsigned, unsigned, unsigned, unsigned char, unsigned char)
<LI><a href="#[3e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::bilinearInterpolate8(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)
<LI><a href="#[413]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::div255_888(unsigned, unsigned char)
</UL>
<BR>[Called By]<UL><LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
</UL>

<P><STRONG><a name="[3eb]"></a>touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA::writePixelOnEdge(unsigned short*, const unsigned*, short, short, int, int, unsigned char, unsigned char, unsigned char) const</STRONG> (Thumb, 378 bytes, Stack size 96 bytes, lcd16bpp.o(i._ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKjssiihhh))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA::writePixelOnEdge(unsigned short*, const unsigned*, short, short, int, int, unsigned char, unsigned char, unsigned char) const &rArr; touchgfx::LCD16bpp::bilinearInterpolate888(unsigned, unsigned, unsigned, unsigned, unsigned char, unsigned char)
</UL>
<BR>[Calls]<UL><LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::bilinearInterpolate888(unsigned, unsigned, unsigned, unsigned, unsigned char, unsigned char)
<LI><a href="#[3e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::bilinearInterpolate8(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)
<LI><a href="#[413]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::div255_888(unsigned, unsigned char)
</UL>
<BR>[Called By]<UL><LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
</UL>

<P><STRONG><a name="[3ec]"></a>touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA::writePixelOnEdge(unsigned short*, const unsigned char*, const unsigned char*, short, short, int, int, unsigned char, unsigned char) const</STRONG> (Thumb, 260 bytes, Stack size 64 bytes, lcd16bpp.o(i._ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA::writePixelOnEdge(unsigned short*, const unsigned char*, const unsigned char*, short, short, int, int, unsigned char, unsigned char) const &rArr; touchgfx::LCD16bpp::bilinearInterpolate8(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)
</UL>
<BR>[Calls]<UL><LI><a href="#[3e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::bilinearInterpolate8(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)
</UL>
<BR>[Called By]<UL><LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
</UL>

<P><STRONG><a name="[3ed]"></a>touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA::writePixel(unsigned short*, const unsigned char*, const unsigned short*, short, int, int, unsigned char, unsigned char) const</STRONG> (Thumb, 388 bytes, Stack size 72 bytes, lcd16bpp.o(i._ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA10writePixelEPtPKhPKtsiihh))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA::writePixel(unsigned short*, const unsigned char*, const unsigned short*, short, int, int, unsigned char, unsigned char) const &rArr; touchgfx::LCD16bpp::bilinearInterpolate565(unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, unsigned char)
</UL>
<BR>[Calls]<UL><LI><a href="#[3e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::bilinearInterpolate565(unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, unsigned char)
<LI><a href="#[3e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::bilinearInterpolate8(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)
<LI><a href="#[411]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::div255_565_FFcheck(unsigned short, unsigned char)
</UL>
<BR>[Called By]<UL><LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
</UL>

<P><STRONG><a name="[3ee]"></a>touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA::writePixelOnEdge(unsigned short*, const unsigned char*, const unsigned short*, short, short, int, int, unsigned char, unsigned char) const</STRONG> (Thumb, 342 bytes, Stack size 96 bytes, lcd16bpp.o(i._ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA::writePixelOnEdge(unsigned short*, const unsigned char*, const unsigned short*, short, short, int, int, unsigned char, unsigned char) const &rArr; touchgfx::LCD16bpp::bilinearInterpolate565(unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, unsigned char)
</UL>
<BR>[Calls]<UL><LI><a href="#[3e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::bilinearInterpolate565(unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, unsigned char)
<LI><a href="#[3e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::bilinearInterpolate8(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)
<LI><a href="#[412]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::div255_565(unsigned short, unsigned char)
</UL>
<BR>[Called By]<UL><LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
</UL>

<P><STRONG><a name="[3ef]"></a>touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::writePixel(unsigned short*, const unsigned*, short, int, int, unsigned char, unsigned char) const</STRONG> (Thumb, 318 bytes, Stack size 64 bytes, lcd16bpp.o(i._ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA10writePixelEPtPKjsiihh))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::writePixel(unsigned short*, const unsigned*, short, int, int, unsigned char, unsigned char) const &rArr; touchgfx::LCD16bpp::bilinearInterpolate888(unsigned, unsigned, unsigned, unsigned, unsigned char, unsigned char)
</UL>
<BR>[Calls]<UL><LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::bilinearInterpolate888(unsigned, unsigned, unsigned, unsigned, unsigned char, unsigned char)
<LI><a href="#[3e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::bilinearInterpolate8(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)
<LI><a href="#[413]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::div255_888(unsigned, unsigned char)
</UL>
<BR>[Called By]<UL><LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
</UL>

<P><STRONG><a name="[3f0]"></a>touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::writePixelOnEdge(unsigned short*, const unsigned*, short, short, int, int, unsigned char, unsigned char) const</STRONG> (Thumb, 354 bytes, Stack size 80 bytes, lcd16bpp.o(i._ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKjssiihh))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::writePixelOnEdge(unsigned short*, const unsigned*, short, short, int, int, unsigned char, unsigned char) const &rArr; touchgfx::LCD16bpp::bilinearInterpolate888(unsigned, unsigned, unsigned, unsigned, unsigned char, unsigned char)
</UL>
<BR>[Calls]<UL><LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::bilinearInterpolate888(unsigned, unsigned, unsigned, unsigned, unsigned char, unsigned char)
<LI><a href="#[3e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::bilinearInterpolate8(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)
<LI><a href="#[413]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::div255_888(unsigned, unsigned char)
</UL>
<BR>[Called By]<UL><LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
</UL>

<P><STRONG><a name="[3f1]"></a>touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA::writePixel(unsigned short*, const unsigned char*, const unsigned*, short, int, int, unsigned char, unsigned char, unsigned char) const</STRONG> (Thumb, 338 bytes, Stack size 80 bytes, lcd16bpp.o(i._ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA10writePixelEPtPKhPKjsiihhh))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA::writePixel(unsigned short*, const unsigned char*, const unsigned*, short, int, int, unsigned char, unsigned char, unsigned char) const &rArr; touchgfx::LCD16bpp::bilinearInterpolate888(unsigned, unsigned, unsigned, unsigned, unsigned char, unsigned char)
</UL>
<BR>[Calls]<UL><LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::bilinearInterpolate888(unsigned, unsigned, unsigned, unsigned, unsigned char, unsigned char)
<LI><a href="#[3e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::bilinearInterpolate8(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)
<LI><a href="#[413]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::div255_888(unsigned, unsigned char)
</UL>
<BR>[Called By]<UL><LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
</UL>

<P><STRONG><a name="[3f2]"></a>touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA::writePixelOnEdge(unsigned short*, const unsigned char*, const unsigned*, short, short, int, int, unsigned char, unsigned char, unsigned char) const</STRONG> (Thumb, 386 bytes, Stack size 96 bytes, lcd16bpp.o(i._ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKjssiihhh))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA::writePixelOnEdge(unsigned short*, const unsigned char*, const unsigned*, short, short, int, int, unsigned char, unsigned char, unsigned char) const &rArr; touchgfx::LCD16bpp::bilinearInterpolate888(unsigned, unsigned, unsigned, unsigned, unsigned char, unsigned char)
</UL>
<BR>[Calls]<UL><LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::bilinearInterpolate888(unsigned, unsigned, unsigned, unsigned, unsigned char, unsigned char)
<LI><a href="#[3e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::bilinearInterpolate8(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)
<LI><a href="#[413]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::div255_888(unsigned, unsigned char)
</UL>
<BR>[Called By]<UL><LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
</UL>

<P><STRONG><a name="[3f3]"></a>touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::writePixel(unsigned short*, const unsigned char*, const unsigned*, short, int, int, unsigned char, unsigned char) const</STRONG> (Thumb, 308 bytes, Stack size 80 bytes, lcd16bpp.o(i._ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA10writePixelEPtPKhPKjsiihh))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::writePixel(unsigned short*, const unsigned char*, const unsigned*, short, int, int, unsigned char, unsigned char) const &rArr; touchgfx::LCD16bpp::bilinearInterpolate888(unsigned, unsigned, unsigned, unsigned, unsigned char, unsigned char)
</UL>
<BR>[Calls]<UL><LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::bilinearInterpolate888(unsigned, unsigned, unsigned, unsigned, unsigned char, unsigned char)
<LI><a href="#[3e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::bilinearInterpolate8(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)
<LI><a href="#[413]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::div255_888(unsigned, unsigned char)
</UL>
<BR>[Called By]<UL><LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
</UL>

<P><STRONG><a name="[3f4]"></a>touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::writePixelOnEdge(unsigned short*, const unsigned char*, const unsigned*, short, short, int, int, unsigned char, unsigned char) const</STRONG> (Thumb, 342 bytes, Stack size 88 bytes, lcd16bpp.o(i._ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKjssiihh))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::writePixelOnEdge(unsigned short*, const unsigned char*, const unsigned*, short, short, int, int, unsigned char, unsigned char) const &rArr; touchgfx::LCD16bpp::bilinearInterpolate888(unsigned, unsigned, unsigned, unsigned, unsigned char, unsigned char)
</UL>
<BR>[Calls]<UL><LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::bilinearInterpolate888(unsigned, unsigned, unsigned, unsigned, unsigned char, unsigned char)
<LI><a href="#[3e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::bilinearInterpolate8(unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char)
<LI><a href="#[413]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::div255_888(unsigned, unsigned char)
</UL>
<BR>[Called By]<UL><LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA::drawTextureMapScanLineSubdivisions(int, int, int, int, float, float, float, int, int, int, int, float, float, float, float, float, const touchgfx::DrawingSurface&, int, int, const touchgfx::TextureSurface&, unsigned char, float, float, float)
</UL>

<P><STRONG><a name="[198]"></a>touchgfx::TextArea::getAlignment() const</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, textarea.o(i._ZNK8touchgfx8TextArea12getAlignmentEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::TextArea::getAlignment() const
</UL>
<BR>[Address Reference Count : 4]<UL><LI> digitalclock.o(.constdata__ZTVN8touchgfx23TextAreaWithOneWildcardE)
<LI> textareawithwildcard.o(.constdata__ZTVN8touchgfx24TextAreaWithWildcardBaseE)
<LI> screen1viewbase.o(.constdata__ZTVN8touchgfx24TextAreaWithTwoWildcardsE)
<LI> textarea.o(.constdata__ZTVN8touchgfx8TextAreaE)
</UL>
<P><STRONG><a name="[195]"></a>touchgfx::TextArea::getSolidRect() const</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, digitalclock.o(i._ZNK8touchgfx8TextArea12getSolidRectEv))
<BR>[Address Reference Count : 4]<UL><LI> digitalclock.o(.constdata__ZTVN8touchgfx23TextAreaWithOneWildcardE)
<LI> textareawithwildcard.o(.constdata__ZTVN8touchgfx24TextAreaWithWildcardBaseE)
<LI> screen1viewbase.o(.constdata__ZTVN8touchgfx24TextAreaWithTwoWildcardsE)
<LI> textarea.o(.constdata__ZTVN8touchgfx8TextAreaE)
</UL>
<P><STRONG><a name="[19a]"></a>touchgfx::TextArea::getTextWidth() const</STRONG> (Thumb, 94 bytes, Stack size 32 bytes, textarea.o(i._ZNK8touchgfx8TextArea12getTextWidthEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = touchgfx::TextArea::getTextWidth() const &rArr; touchgfx::TypedText::getText() const
</UL>
<BR>[Calls]<UL><LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TypedText::getText() const
<LI><a href="#[415]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TypedText::getFont() const
<LI><a href="#[416]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TypedText::getTextDirection() const
</UL>
<BR>[Address Reference Count : 4]<UL><LI> digitalclock.o(.constdata__ZTVN8touchgfx23TextAreaWithOneWildcardE)
<LI> textareawithwildcard.o(.constdata__ZTVN8touchgfx24TextAreaWithWildcardBaseE)
<LI> screen1viewbase.o(.constdata__ZTVN8touchgfx24TextAreaWithTwoWildcardsE)
<LI> textarea.o(.constdata__ZTVN8touchgfx8TextAreaE)
</UL>
<P><STRONG><a name="[1a2]"></a>touchgfx::TextArea::getWildcard1() const</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, textarea.o(i._ZNK8touchgfx8TextArea12getWildcard1Ev))
<BR>[Address Reference Count : 2]<UL><LI> textareawithwildcard.o(.constdata__ZTVN8touchgfx24TextAreaWithWildcardBaseE)
<LI> textarea.o(.constdata__ZTVN8touchgfx8TextAreaE)
</UL>
<P><STRONG><a name="[19d]"></a>touchgfx::TextArea::getWildcard2() const</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, digitalclock.o(i._ZNK8touchgfx8TextArea12getWildcard2Ev))
<BR>[Address Reference Count : 3]<UL><LI> digitalclock.o(.constdata__ZTVN8touchgfx23TextAreaWithOneWildcardE)
<LI> textareawithwildcard.o(.constdata__ZTVN8touchgfx24TextAreaWithWildcardBaseE)
<LI> textarea.o(.constdata__ZTVN8touchgfx8TextAreaE)
</UL>
<P><STRONG><a name="[199]"></a>touchgfx::TextArea::getTextHeight() const</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, textarea.o(i._ZNK8touchgfx8TextArea13getTextHeightEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = touchgfx::TextArea::getTextHeight() const &rArr; touchgfx::TypedText::getText() const
</UL>
<BR>[Calls]<UL><LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TypedText::getText() const
</UL>
<BR>[Address Reference Count : 4]<UL><LI> digitalclock.o(.constdata__ZTVN8touchgfx23TextAreaWithOneWildcardE)
<LI> textareawithwildcard.o(.constdata__ZTVN8touchgfx24TextAreaWithWildcardBaseE)
<LI> screen1viewbase.o(.constdata__ZTVN8touchgfx24TextAreaWithTwoWildcardsE)
<LI> textarea.o(.constdata__ZTVN8touchgfx8TextAreaE)
</UL>
<P><STRONG><a name="[19b]"></a>touchgfx::TextArea::calculateTextHeight(const unsigned short*, ...) const</STRONG> (Thumb, 180 bytes, Stack size 144 bytes, textarea.o(i._ZNK8touchgfx8TextArea19calculateTextHeightEPKtz))
<BR><BR>[Stack]<UL><LI>Max Depth = 456<LI>Call Chain = touchgfx::TextArea::calculateTextHeight(const unsigned short*, ...) const &rArr; touchgfx::LCD::getNumLines(touchgfx::TextProvider&, touchgfx::WideTextAction, unsigned char, const touchgfx::Font*, short) &rArr; touchgfx::LCD::WideTextInternalStruct::scanStringLengthForLine() &rArr; touchgfx::TextProvider::getNextLigature(unsigned char, const touchgfx::Font*, const touchgfx::GlyphNode*&) &rArr; touchgfx::TextProvider::getNextLigature(unsigned char) &rArr; touchgfx::TextProvider::substituteGlyphs() &rArr; touchgfx::TextProvider::applyGsubRules(const unsigned short*, unsigned short) &rArr; touchgfx::TextProvider::replaceInputCharacters(unsigned short, unsigned short, const unsigned short*) &rArr; touchgfx::TextProvider::fillInputBuffer()
</UL>
<BR>[Calls]<UL><LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::TextProvider()
<LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::initialize(const unsigned short*, std::__va_list, const unsigned short*, const touchgfx::FontContextualFormsTable*)
<LI><a href="#[415]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TypedText::getFont() const
<LI><a href="#[416]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TypedText::getTextDirection() const
<LI><a href="#[38e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::getNumLines(touchgfx::TextProvider&, touchgfx::WideTextAction, unsigned char, const touchgfx::Font*, short)
</UL>
<BR>[Address Reference Count : 4]<UL><LI> digitalclock.o(.constdata__ZTVN8touchgfx23TextAreaWithOneWildcardE)
<LI> textareawithwildcard.o(.constdata__ZTVN8touchgfx24TextAreaWithWildcardBaseE)
<LI> screen1viewbase.o(.constdata__ZTVN8touchgfx24TextAreaWithTwoWildcardsE)
<LI> textarea.o(.constdata__ZTVN8touchgfx8TextAreaE)
</UL>
<P><STRONG><a name="[1eb]"></a>touchgfx::TextArea::calculateBoundingArea() const</STRONG> (Thumb, 962 bytes, Stack size 208 bytes, textarea.o(i._ZNK8touchgfx8TextArea21calculateBoundingAreaEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 440<LI>Call Chain = touchgfx::TextArea::calculateBoundingArea() const &rArr; touchgfx::LCD::WideTextInternalStruct::scanStringLengthForLine() &rArr; touchgfx::TextProvider::getNextLigature(unsigned char, const touchgfx::Font*, const touchgfx::GlyphNode*&) &rArr; touchgfx::TextProvider::getNextLigature(unsigned char) &rArr; touchgfx::TextProvider::substituteGlyphs() &rArr; touchgfx::TextProvider::applyGsubRules(const unsigned short*, unsigned short) &rArr; touchgfx::TextProvider::replaceInputCharacters(unsigned short, unsigned short, const unsigned short*) &rArr; touchgfx::TextProvider::fillInputBuffer()
</UL>
<BR>[Calls]<UL><LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::TextProvider()
<LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::initialize(const unsigned short*, const unsigned short*, const touchgfx::FontContextualFormsTable*, ...)
<LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TypedText::getText() const
<LI><a href="#[415]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TypedText::getFont() const
<LI><a href="#[416]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TypedText::getTextDirection() const
<LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_memcpy4_8
<LI><a href="#[390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::WideTextInternalStruct::scanStringLengthForLine()
<LI><a href="#[391]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::stringWidth(touchgfx::TextProvider&, const touchgfx::Font&, int, unsigned char)
<LI><a href="#[417]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::endOfString()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> textarea.o(.constdata__ZTVN8touchgfx8TextAreaE)
</UL>
<P><STRONG><a name="[1ea]"></a>touchgfx::TextArea::draw(const touchgfx::Rect&) const</STRONG> (Thumb, 402 bytes, Stack size 88 bytes, textarea.o(i._ZNK8touchgfx8TextArea4drawERKNS_4RectE))
<BR><BR>[Stack]<UL><LI>Max Depth = 888<LI>Call Chain = touchgfx::TextArea::draw(const touchgfx::Rect&) const &rArr; touchgfx::LCD::drawString(touchgfx::Rect, const touchgfx::Rect&, const touchgfx::LCD::StringVisuals&, const unsigned short*, ...) &rArr; touchgfx::LCD::drawStringLTR(const touchgfx::Rect&, const touchgfx::Rect&, const touchgfx::LCD::StringVisuals&, const unsigned short*, std::__va_list) &rArr; touchgfx::LCD::drawStringInternal(unsigned short*, const touchgfx::Rect*, short, short, const touchgfx::Rect&, const touchgfx::LCD::StringVisuals*, unsigned char, touchgfx::TextProvider&, int, bool) &rArr; touchgfx::TextProvider::getNextLigature(unsigned char, const touchgfx::Font*, const touchgfx::GlyphNode*&, const unsigned char*&, unsigned char&) &rArr; touchgfx::TextProvider::getNextLigature(unsigned char) &rArr; touchgfx::TextProvider::substituteGlyphs() &rArr; touchgfx::TextProvider::applyGsubRules(const unsigned short*, unsigned short) &rArr; touchgfx::TextProvider::replaceInputCharacters(unsigned short, unsigned short, const unsigned short*) &rArr; touchgfx::TextProvider::fillInputBuffer()
</UL>
<BR>[Calls]<UL><LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::drawString(touchgfx::Rect, const touchgfx::Rect&, const touchgfx::LCD::StringVisuals&, const unsigned short*, ...)
<LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TypedText::getText() const
<LI><a href="#[415]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TypedText::getFont() const
<LI><a href="#[416]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TypedText::getTextDirection() const
<LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_memcpy4_8
<LI><a href="#[363]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::getAbsoluteRect() const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> textarea.o(.constdata__ZTVN8touchgfx8TextAreaE)
</UL>
<P><STRONG><a name="[418]"></a>touchgfx::ConstFont::find(unsigned short) const</STRONG> (Thumb, 182 bytes, Stack size 8 bytes, constfont.o(i._ZNK8touchgfx9ConstFont4findEt))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::ConstFont::find(unsigned short) const
</UL>
<BR>[Called By]<UL><LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ConstFont::getGlyph(unsigned short, const unsigned char*&, unsigned char&) const
</UL>

<P><STRONG><a name="[152]"></a>touchgfx::ConstFont::getGlyph(unsigned short, const unsigned char*&, unsigned char&) const</STRONG> (Thumb, 102 bytes, Stack size 24 bytes, constfont.o(i._ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = touchgfx::ConstFont::getGlyph(unsigned short, const unsigned char*&, unsigned char&) const &rArr; touchgfx::ConstFont::find(unsigned short) const
</UL>
<BR>[Calls]<UL><LI><a href="#[418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ConstFont::find(unsigned short) const
</UL>
<BR>[Address Reference Count : 2]<UL><LI> generatedfont.o(.constdata__ZTVN8touchgfx13GeneratedFontE)
<LI> constfont.o(.constdata__ZTVN8touchgfx9ConstFontE)
</UL>
<P><STRONG><a name="[127]"></a>touchgfx::Container::getSolidRect() const</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, container.o(i._ZNK8touchgfx9Container12getSolidRectEv))
<BR>[Address Reference Count : 9]<UL><LI> abstractclock.o(.constdata__ZTVN8touchgfx13AbstractClockE)
<LI> abstractdirectionprogress.o(.constdata__ZTVN8touchgfx25AbstractDirectionProgressE)
<LI> abstractdatagraph.o(.constdata__ZTVN8touchgfx17AbstractDataGraphE)
<LI> abstractdatagraph.o(.constdata__ZTVN8touchgfx16DynamicDataGraphE)
<LI> digitalclock.o(.constdata__ZTVN8touchgfx12DigitalClockE)
<LI> container.o(.constdata__ZTVN8touchgfx9ContainerE)
<LI> abstractprogressindicator.o(.constdata__ZTVN8touchgfx25AbstractProgressIndicatorE)
<LI> imageprogress.o(.constdata__ZTVN8touchgfx13ImageProgressE)
<LI> screen1viewbase.o(.constdata__ZTVN8touchgfx11GraphScrollILs150EEE)
</UL>
<P><STRONG><a name="[126]"></a>touchgfx::Container::draw(const touchgfx::Rect&) const</STRONG> (Thumb, 106 bytes, Stack size 24 bytes, container.o(i._ZNK8touchgfx9Container4drawERKNS_4RectE))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = touchgfx::Container::draw(const touchgfx::Rect&) const &rArr; touchgfx::Rect::operator &(const touchgfx::Rect&) const
</UL>
<BR>[Calls]<UL><LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_memcpy4_8
<LI><a href="#[3ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::operator &(const touchgfx::Rect&) const
</UL>
<BR>[Called By]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::draw(touchgfx::Rect&)
</UL>
<BR>[Address Reference Count : 9]<UL><LI> abstractclock.o(.constdata__ZTVN8touchgfx13AbstractClockE)
<LI> abstractdirectionprogress.o(.constdata__ZTVN8touchgfx25AbstractDirectionProgressE)
<LI> abstractdatagraph.o(.constdata__ZTVN8touchgfx17AbstractDataGraphE)
<LI> abstractdatagraph.o(.constdata__ZTVN8touchgfx16DynamicDataGraphE)
<LI> digitalclock.o(.constdata__ZTVN8touchgfx12DigitalClockE)
<LI> container.o(.constdata__ZTVN8touchgfx9ContainerE)
<LI> abstractprogressindicator.o(.constdata__ZTVN8touchgfx25AbstractProgressIndicatorE)
<LI> imageprogress.o(.constdata__ZTVN8touchgfx13ImageProgressE)
<LI> screen1viewbase.o(.constdata__ZTVN8touchgfx11GraphScrollILs150EEE)
</UL>
<P><STRONG><a name="[349]"></a>touchgfx::GlyphNode::top() const</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, textprovider.o(i._ZNK8touchgfx9GlyphNode3topEv))
<BR><BR>[Called By]<UL><LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::adjustThaiGlyph(const touchgfx::Font*, const touchgfx::GlyphNode*)
</UL>

<P><STRONG><a name="[416]"></a>touchgfx::TypedText::getTextDirection() const</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, textarea.o(i._ZNK8touchgfx9TypedText16getTextDirectionEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::TypedText::getTextDirection() const
</UL>
<BR>[Called By]<UL><LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::draw(const touchgfx::Rect&) const
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::calculateBoundingArea() const
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::calculateTextHeight(const unsigned short*, ...) const
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::getTextWidth() const
</UL>

<P><STRONG><a name="[415]"></a>touchgfx::TypedText::getFont() const</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, textarea.o(i._ZNK8touchgfx9TypedText7getFontEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::TypedText::getFont() const
</UL>
<BR>[Called By]<UL><LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::draw(const touchgfx::Rect&) const
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::calculateBoundingArea() const
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::calculateTextHeight(const unsigned short*, ...) const
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::getTextWidth() const
</UL>

<P><STRONG><a name="[309]"></a>touchgfx::TypedText::getText() const</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, textarea.o(i._ZNK8touchgfx9TypedText7getTextEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::TypedText::getText() const
</UL>
<BR>[Calls]<UL><LI><a href="#[40d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Texts::getText(unsigned short) const
</UL>
<BR>[Called By]<UL><LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1ViewBase::Screen1ViewBase()
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::draw(const touchgfx::Rect&) const
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::calculateBoundingArea() const
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::getTextHeight() const
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::getTextWidth() const
</UL>

<P><STRONG><a name="[419]"></a>__0printf$bare</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, printfb.o(i.__0printf$bare), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[41a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[4f9]"></a>__1printf$bare</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, printfb.o(i.__0printf$bare), UNUSED)

<P><STRONG><a name="[22f]"></a>__2printf</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, printfb.o(i.__0printf$bare))
<BR><BR>[Called By]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CanTX_Handle
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>

<P><STRONG><a name="[330]"></a>__ARM_common_memcpy4_8</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lcd16bpp.o(i.__ARM_common_memcpy4_8))
<BR><BR>[Called By]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::drawCachedAreas()
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::invalidateArea(touchgfx::Rect)
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::drawStringLTR(const touchgfx::Rect&, const touchgfx::Rect&, const touchgfx::LCD::StringVisuals&, const unsigned short*, std::__va_list)
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TiledImage::draw(const touchgfx::Rect&) const
<LI><a href="#[3b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Outline::qsortCells(touchgfx::Cell*, unsigned)
<LI><a href="#[406]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextureMapper::drawQuad(const touchgfx::Rect&, unsigned short*, const float*, const float*, const float*, const float*, const float*) const
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::draw(const touchgfx::Rect&) const
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::calculateBoundingArea() const
<LI><a href="#[3cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyARGB8888Solid(const unsigned*, const touchgfx::Rect&, const touchgfx::Rect&) const
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::fillRect(const touchgfx::Rect&, touchgfx::colortype, unsigned char)
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopy(const unsigned short*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char, bool)
<LI><a href="#[3cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyAlphaPerPixel(const unsigned short*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
<LI><a href="#[3c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyL8_ARGB8888(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::DecompressorL8_LZW9::blitCopyARGB8888(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::DecompressorL8_LZW9::blitCopyRGB888(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::DecompressorL8_LZW9::blitCopyRGB565(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::DecompressorL8_RLE::blitCopyARGB8888(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::DecompressorL8_RLE::blitCopyRGB888(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::DecompressorL8_RLE::blitCopyRGB565(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::drawPartialBitmap(const touchgfx::Bitmap&, short, short, const touchgfx::Rect&, unsigned char, bool)
<LI><a href="#[3c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyL8_RGB888(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
<LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyL8_RGB565(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::DecompressorL8_L4::blitCopyARGB8888(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::DecompressorL8_L4::blitCopyRGB888(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::DecompressorL8_L4::blitCopyRGB565(const unsigned char*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
<LI><a href="#[3c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyARGB8888(const unsigned*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
<LI><a href="#[3c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyRGB888(const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Container::draw(const touchgfx::Rect&) const
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidateRect(touchgfx::Rect&) const
<LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16DebugPrinter::draw(const touchgfx::Rect&) const
<LI><a href="#[392]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::drawStringInternal(unsigned short*, const touchgfx::Rect*, short, short, const touchgfx::Rect&, const touchgfx::LCD::StringVisuals*, unsigned char, touchgfx::TextProvider&, int, bool)
<LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::rotateRect(touchgfx::Rect&, const touchgfx::Rect&, touchgfx::TextRotation)
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Image::draw(const touchgfx::Rect&) const
<LI><a href="#[3a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Canvas::Canvas(const touchgfx::CanvasWidget*, const touchgfx::Rect&)
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GraphElementLine::drawCanvasWidget(const touchgfx::Rect&) const
<LI><a href="#[3ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::operator &(const touchgfx::Rect&) const
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::CanvasWidget::draw(const touchgfx::Rect&) const
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Box::draw(const touchgfx::Rect&) const
<LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Vector&lang;touchgfx::Rect, (unsigned short)8&rang;::quickRemoveAt(unsigned short)
</UL>

<P><STRONG><a name="[420]"></a>__ARM_fpclassifyf</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, fpclassifyf.o(i.__ARM_fpclassifyf))
<BR><BR>[Called By]<UL><LI><a href="#[3fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sinf
</UL>

<P><STRONG><a name="[324]"></a>__aeabi_vec_ctor_nocookie_nodtor</STRONG> (Thumb, 36 bytes, Stack size 24 bytes, aeabi_vec_ctor_nocookie_nodtor.o(i.__aeabi_vec_ctor_nocookie_nodtor))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __aeabi_vec_ctor_nocookie_nodtor
</UL>
<BR>[Called By]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::drawCachedAreas()
<LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32DMA::STM32DMA()
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::Application()
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextureMapper::applyTransformation()
</UL>

<P><STRONG><a name="[2d3]"></a>__cxa_guard_acquire</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, cxa_guard_acquire.o(i.__cxa_guard_acquire))
<BR><BR>[Called By]<UL><LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx_init
<LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableDecompressorL8_All()
<LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_verdana_80_4bpp()
<LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_verdana_40_4bpp()
<LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_verdana_30_4bpp()
<LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_verdana_25_4bpp()
<LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_verdana_15_4bpp()
<LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_verdana_155_4bpp()
<LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_iconfont_32_4bpp()
<LI><a href="#[3da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperRGB565_NonOpaque_BilinearInterpolation()
<LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperRGB565_Opaque_BilinearInterpolation()
<LI><a href="#[3d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperL8_ARGB8888_BilinearInterpolation()
<LI><a href="#[3db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperRGB565_NonOpaque_NearestNeighbor()
<LI><a href="#[3d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperL8_RGB888_BilinearInterpolation()
<LI><a href="#[3d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperL8_RGB565_BilinearInterpolation()
<LI><a href="#[3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperARGB8888_BilinearInterpolation()
<LI><a href="#[3d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperRGB565_Opaque_NearestNeighbor()
<LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperL8_ARGB8888_NearestNeighbor()
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperL8_RGB888_NearestNeighbor()
<LI><a href="#[3d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperL8_RGB565_NearestNeighbor()
<LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperARGB8888_NearestNeighbor()
<LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperA4_BilinearInterpolation()
<LI><a href="#[3cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::enableTextureMapperA4_NearestNeighbor()
</UL>

<P><STRONG><a name="[149]"></a>__cxa_pure_virtual</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, pure_virt.o(i.__cxa_pure_virtual))
<BR><BR>[Calls]<UL><LI><a href="#[41b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGPVFN
</UL>
<BR>[Address Reference Count : 11]<UL><LI> texts.o(.constdata__ZTVN8touchgfx4FontE)
<LI> abstractpartition.o(.constdata__ZTVN8touchgfx17AbstractPartitionE)
<LI> abstractclock.o(.constdata__ZTVN8touchgfx13AbstractClockE)
<LI> canvaswidget.o(.constdata__ZTVN8touchgfx12CanvasWidgetE)
<LI> constfont.o(.constdata__ZTVN8touchgfx9ConstFontE)
<LI> abstractdatagraph.o(.constdata__ZTVN8touchgfx17AbstractDataGraphE)
<LI> abstractdatagraph.o(.constdata__ZTVN8touchgfx16DynamicDataGraphE)
<LI> drawable.o(.constdata__ZTVN8touchgfx8DrawableE)
<LI> screen1viewbase.o(.constdata__ZTVN8touchgfx6WidgetE)
<LI> screen1viewbase.o(.constdata__ZTVN8touchgfx21AbstractPainterRGB565E)
<LI> hal.o(.constdata__ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[405]"></a>__hardfp_ceilf</STRONG> (Thumb, 98 bytes, Stack size 0 bytes, ceilf.o(i.__hardfp_ceilf))
<BR><BR>[Called By]<UL><LI><a href="#[403]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextureMapper::getBoundingRect() const
</UL>

<P><STRONG><a name="[4fa]"></a>__mathlib_ceilf</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ceilf.o(i.__hardfp_ceilf), UNUSED)

<P><STRONG><a name="[3fe]"></a>__hardfp_cosf</STRONG> (Thumb, 280 bytes, Stack size 8 bytes, cosf.o(i.__hardfp_cosf))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = __hardfp_cosf &rArr; __mathlib_rredf2
</UL>
<BR>[Calls]<UL><LI><a href="#[41d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
<LI><a href="#[41c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_rredf2
<LI><a href="#[41e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_flt_invalid
<LI><a href="#[41f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_flt_infnan
</UL>
<BR>[Called By]<UL><LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Matrix4x4::concatenateZRotation(float)
<LI><a href="#[35b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Matrix4x4::concatenateYRotation(float)
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Matrix4x4::concatenateXRotation(float)
</UL>

<P><STRONG><a name="[404]"></a>__hardfp_floorf</STRONG> (Thumb, 98 bytes, Stack size 0 bytes, floorf.o(i.__hardfp_floorf))
<BR><BR>[Called By]<UL><LI><a href="#[403]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextureMapper::getBoundingRect() const
</UL>

<P><STRONG><a name="[3fd]"></a>__hardfp_sinf</STRONG> (Thumb, 344 bytes, Stack size 16 bytes, sinf.o(i.__hardfp_sinf))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = __hardfp_sinf &rArr; __mathlib_rredf2
</UL>
<BR>[Calls]<UL><LI><a href="#[41d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
<LI><a href="#[41c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_rredf2
<LI><a href="#[421]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_flt_underflow
<LI><a href="#[41e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_flt_invalid
<LI><a href="#[41f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_flt_infnan
<LI><a href="#[420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_fpclassifyf
</UL>
<BR>[Called By]<UL><LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Matrix4x4::concatenateZRotation(float)
<LI><a href="#[35b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Matrix4x4::concatenateYRotation(float)
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Matrix4x4::concatenateXRotation(float)
</UL>

<P><STRONG><a name="[41f]"></a>__mathlib_flt_infnan</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, funder.o(i.__mathlib_flt_infnan))
<BR><BR>[Called By]<UL><LI><a href="#[3fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sinf
<LI><a href="#[3fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_cosf
</UL>

<P><STRONG><a name="[41e]"></a>__mathlib_flt_invalid</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, funder.o(i.__mathlib_flt_invalid))
<BR><BR>[Called By]<UL><LI><a href="#[3fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sinf
<LI><a href="#[3fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_cosf
</UL>

<P><STRONG><a name="[421]"></a>__mathlib_flt_underflow</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, funder.o(i.__mathlib_flt_underflow))
<BR><BR>[Called By]<UL><LI><a href="#[3fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sinf
</UL>

<P><STRONG><a name="[41c]"></a>__mathlib_rredf2</STRONG> (Thumb, 316 bytes, Stack size 20 bytes, rredf.o(i.__mathlib_rredf2))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = __mathlib_rredf2
</UL>
<BR>[Called By]<UL><LI><a href="#[3fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sinf
<LI><a href="#[3fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_cosf
</UL>

<P><STRONG><a name="[4fb]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[4fc]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[4fd]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)

<P><STRONG><a name="[41d]"></a>__set_errno</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, errno.o(i.__set_errno))
<BR><BR>[Called By]<UL><LI><a href="#[3fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sinf
<LI><a href="#[3fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_cosf
</UL>

<P><STRONG><a name="[23d]"></a>delay_ms</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, sys.o(i.delay_ms))
<BR><BR>[Called By]<UL><LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FT5206_Init
</UL>

<P><STRONG><a name="[224]"></a>delay_us</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, sys.o(i.delay_us))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = delay_us
</UL>
<BR>[Called By]<UL><LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CT_IIC_Wait_Ack
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CT_IIC_Stop
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CT_IIC_Start
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CT_IIC_Send_Byte
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CT_IIC_Read_Byte
<LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CT_IIC_NAck
<LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CT_IIC_Ack
</UL>

<P><STRONG><a name="[a5]"></a>fputc</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, usart.o(i.fputc))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = fputc &rArr; HAL_UART_Transmit &rArr; UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Transmit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> printfb.o(i.__0printf$bare)
</UL>
<P><STRONG><a name="[214]"></a>free</STRONG> (Thumb, 76 bytes, Stack size 8 bytes, malloc.o(i.free))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = free
</UL>
<BR>[Called By]<UL><LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_finalize
</UL>

<P><STRONG><a name="[6d]"></a>main</STRONG> (Thumb, 80 bytes, Stack size 0 bytes, main.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = main &rArr; MX_LTDC_Init &rArr; HAL_LTDC_Init &rArr; HAL_LTDC_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[426]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osKernelStart
<LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osKernelInitialize
<LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_USART1_UART_Init
<LI><a href="#[424]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_TouchGFX_PreOSInit
<LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_TouchGFX_Init
<LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_RTC_Init
<LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_LTDC_Init
<LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_IWDG_Init
<LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_GPIO_Init
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_FREERTOS_Init
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_FMC_Init
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_DMA_Init
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_DMA2D_Init
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_CRC_Init
<LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_CAN1_Init
<LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_ADC1_Init
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init
<LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
<LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P><STRONG><a name="[205]"></a>malloc</STRONG> (Thumb, 92 bytes, Stack size 20 bytes, malloc.o(i.malloc))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = malloc
</UL>
<BR>[Called By]<UL><LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_atexit
</UL>

<P><STRONG><a name="[218]"></a>osDelay</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, cmsis_os2.o(i.osDelay))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = osDelay &rArr; vTaskDelay &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[427]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskDelay
</UL>
<BR>[Called By]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;temAdc_Handle
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Tyresp_Handle
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Handle
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IWDG_Handle
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Can_Rx_Handle
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CanTX_Handle
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC2_Handle
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_Handle
</UL>

<P><STRONG><a name="[2b2]"></a>osEventFlagsNew</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, cmsis_os2.o(i.osEventFlagsNew))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = osEventFlagsNew &rArr; xEventGroupCreate &rArr; pvPortMalloc &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[428]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xEventGroupCreateStatic
<LI><a href="#[429]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xEventGroupCreate
</UL>
<BR>[Called By]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_FREERTOS_Init
</UL>

<P><STRONG><a name="[238]"></a>osEventFlagsSet</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, cmsis_os2.o(i.osEventFlagsSet))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = osEventFlagsSet &rArr; xEventGroupSetBitsFromISR &rArr; xTimerPendFunctionCallFromISR &rArr; xQueueGenericSendFromISR &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit
</UL>
<BR>[Calls]<UL><LI><a href="#[42a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xEventGroupSetBitsFromISR
<LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xEventGroupSetBits
</UL>
<BR>[Called By]<UL><LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_CAN_RxFifo0MsgPendingCallback
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dtu_datHandle
</UL>

<P><STRONG><a name="[216]"></a>osEventFlagsWait</STRONG> (Thumb, 98 bytes, Stack size 24 bytes, cmsis_os2.o(i.osEventFlagsWait))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = osEventFlagsWait &rArr; xEventGroupWaitBits &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[42c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xEventGroupWaitBits
</UL>
<BR>[Called By]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Wit_DatHandle
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Tyresp_Handle
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Speed_Handle
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Dtu_datHandle
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CanTX_Handle
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC2_Handle
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_Handle
</UL>

<P><STRONG><a name="[425]"></a>osKernelInitialize</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, cmsis_os2.o(i.osKernelInitialize))
<BR><BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[426]"></a>osKernelStart</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, cmsis_os2.o(i.osKernelStart))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = osKernelStart &rArr; vTaskStartScheduler &rArr; xTimerCreateTimerTask &rArr; xTaskCreateStatic &rArr; prvInitialiseNewTask &rArr; pxPortInitialiseStack
</UL>
<BR>[Calls]<UL><LI><a href="#[42d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskStartScheduler
</UL>
<BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[329]"></a>osMessageQueueGet</STRONG> (Thumb, 96 bytes, Stack size 24 bytes, cmsis_os2.o(i.osMessageQueueGet))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = osMessageQueueGet &rArr; xQueueReceive &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[42e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueReceiveFromISR
<LI><a href="#[42f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueReceive
</UL>
<BR>[Called By]<UL><LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::OSWrappers::waitForVSync()
</UL>

<P><STRONG><a name="[326]"></a>osMessageQueueNew</STRONG> (Thumb, 88 bytes, Stack size 24 bytes, cmsis_os2.o(i.osMessageQueueNew))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = osMessageQueueNew &rArr; xQueueGenericCreate &rArr; pvPortMalloc &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericCreateStatic
<LI><a href="#[431]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericCreate
<LI><a href="#[432]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vQueueAddToRegistry
</UL>
<BR>[Called By]<UL><LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::OSWrappers::initialize()
</UL>

<P><STRONG><a name="[327]"></a>osMessageQueuePut</STRONG> (Thumb, 100 bytes, Stack size 24 bytes, cmsis_os2.o(i.osMessageQueuePut))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = osMessageQueuePut &rArr; xQueueGenericSend &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[433]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSendFromISR
<LI><a href="#[434]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
</UL>
<BR>[Called By]<UL><LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::OSWrappers::signalVSync()
</UL>

<P><STRONG><a name="[230]"></a>osSemaphoreAcquire</STRONG> (Thumb, 88 bytes, Stack size 24 bytes, cmsis_os2.o(i.osSemaphoreAcquire))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = osSemaphoreAcquire &rArr; xQueueSemaphoreTake &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[435]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueSemaphoreTake
<LI><a href="#[42e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueReceiveFromISR
</UL>
<BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Can_Rx_Handle
<LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::OSWrappers::tryTakeFrameBufferSemaphore()
<LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::OSWrappers::takeFrameBufferSemaphore()
</UL>

<P><STRONG><a name="[2b0]"></a>osSemaphoreNew</STRONG> (Thumb, 152 bytes, Stack size 24 bytes, cmsis_os2.o(i.osSemaphoreNew))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = osSemaphoreNew &rArr; xQueueGenericSend &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[434]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericCreateStatic
<LI><a href="#[431]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericCreate
<LI><a href="#[436]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueCreateCountingSemaphoreStatic
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueCreateCountingSemaphore
<LI><a href="#[437]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vQueueDelete
<LI><a href="#[432]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vQueueAddToRegistry
</UL>
<BR>[Called By]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_FREERTOS_Init
<LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::OSWrappers::initialize()
</UL>

<P><STRONG><a name="[25b]"></a>osSemaphoreRelease</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, cmsis_os2.o(i.osSemaphoreRelease))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = osSemaphoreRelease &rArr; xQueueGenericSend &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGiveFromISR
<LI><a href="#[434]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
</UL>
<BR>[Called By]<UL><LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_CAN_RxFifo0MsgPendingCallback
<LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::OSWrappers::giveFrameBufferSemaphoreFromISR()
<LI><a href="#[32a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::OSWrappers::giveFrameBufferSemaphore()
</UL>

<P><STRONG><a name="[2b1]"></a>osThreadNew</STRONG> (Thumb, 138 bytes, Stack size 40 bytes, cmsis_os2.o(i.osThreadNew))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = osThreadNew &rArr; xTaskCreate &rArr; pvPortMalloc &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[43a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCreateStatic
<LI><a href="#[43b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCreate
</UL>
<BR>[Called By]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_FREERTOS_Init
</UL>

<P><STRONG><a name="[45e]"></a>pvPortMalloc</STRONG> (Thumb, 216 bytes, Stack size 24 bytes, heap_4.o(i.pvPortMalloc))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = pvPortMalloc &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[460]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvInsertBlockIntoFreeList
<LI><a href="#[45f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvHeapInit
<LI><a href="#[457]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[456]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSuspendAll
</UL>
<BR>[Called By]<UL><LI><a href="#[431]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericCreate
<LI><a href="#[429]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xEventGroupCreate
<LI><a href="#[43b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCreate
</UL>

<P><STRONG><a name="[47a]"></a>pvTaskIncrementMutexHeldCount</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, tasks.o(i.pvTaskIncrementMutexHeldCount))
<BR><BR>[Called By]<UL><LI><a href="#[435]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueSemaphoreTake
</UL>

<P><STRONG><a name="[44f]"></a>pxPortInitialiseStack</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, port.o(i.pxPortInitialiseStack))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = pxPortInitialiseStack
</UL>
<BR>[Called By]<UL><LI><a href="#[44d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvInitialiseNewTask
</UL>

<P><STRONG><a name="[75]"></a>temAdc_Handle</STRONG> (Thumb, 120 bytes, Stack size 0 bytes, freertos.o(i.temAdc_Handle))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = temAdc_Handle &rArr; __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osDelay
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[461]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TpNum
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_ADC_Start_DMA
</UL>
<BR>[Address Reference Count : 1]<UL><LI> freertos.o(i.MX_FREERTOS_Init)
</UL>
<P><STRONG><a name="[2b9]"></a>touchgfx_components_init</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, touchgfxconfiguration.o(i.touchgfx_components_init))
<BR><BR>[Called By]<UL><LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_TouchGFX_Init
</UL>

<P><STRONG><a name="[2ba]"></a>touchgfx_init</STRONG> (Thumb, 92 bytes, Stack size 16 bytes, touchgfxconfiguration.o(i.touchgfx_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = touchgfx_init &rArr; TouchGFXHAL::initialize() &rArr; TouchGFXGeneratedHAL::initialize() &rArr; touchgfx::HAL::initialize() &rArr; touchgfx::OSWrappers::initialize() &rArr; osSemaphoreNew &rArr; xQueueGenericSend &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXHAL::initialize()
<LI><a href="#[39d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::registerBitmapDatabase(const touchgfx::Bitmap::BitmapData*, unsigned short, unsigned short*, unsigned, unsigned)
<LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Texts::setLanguage(unsigned short)
<LI><a href="#[464]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::FontManager::setFontProvider(touchgfx::FontProvider*)
<LI><a href="#[462]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BitmapDatabase::getInstanceSize()
<LI><a href="#[463]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BitmapDatabase::getInstance()
<LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendHeap::FrontendHeap()
<LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_acquire
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_atexit
</UL>
<BR>[Called By]<UL><LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_TouchGFX_Init
</UL>

<P><STRONG><a name="[2c8]"></a>touchgfx_taskEntry</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, touchgfxconfiguration.o(i.touchgfx_taskEntry))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = touchgfx_taskEntry &rArr; touchgfx::HAL::taskEntry() &rArr; touchgfx::OSWrappers::waitForVSync() &rArr; osMessageQueueGet &rArr; xQueueReceive &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::taskEntry()
</UL>
<BR>[Called By]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFX_Task
</UL>

<P><STRONG><a name="[43d]"></a>uxListRemove</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, list.o(i.uxListRemove))
<BR><BR>[Called By]<UL><LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskDelete
<LI><a href="#[45c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskRemoveFromEventList
<LI><a href="#[47b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskPriorityInherit
<LI><a href="#[448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskPriorityDisinherit
<LI><a href="#[46c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskPriorityDisinheritAfterTimeout
<LI><a href="#[457]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[46d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskRemoveFromUnorderedEventList
<LI><a href="#[45a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvSwitchTimerLists
<LI><a href="#[455]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvProcessTimerOrBlockTask
<LI><a href="#[452]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvProcessReceivedCommands
<LI><a href="#[477]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskIncrementTick
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvIdleTask
<LI><a href="#[43c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvAddCurrentTaskToDelayedList
</UL>

<P><STRONG><a name="[473]"></a>uxTaskResetEventItemValue</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, tasks.o(i.uxTaskResetEventItemValue))
<BR><BR>[Called By]<UL><LI><a href="#[42c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xEventGroupWaitBits
</UL>

<P><STRONG><a name="[46e]"></a>vApplicationGetIdleTaskMemory</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, cmsis_os2.o(i.vApplicationGetIdleTaskMemory))
<BR><BR>[Called By]<UL><LI><a href="#[42d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskStartScheduler
</UL>

<P><STRONG><a name="[47c]"></a>vApplicationGetTimerTaskMemory</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, cmsis_os2.o(i.vApplicationGetTimerTaskMemory))
<BR><BR>[Called By]<UL><LI><a href="#[46f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerCreateTimerTask
</UL>

<P><STRONG><a name="[af]"></a>vEventGroupSetBitsCallback</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, event_groups.o(i.vEventGroupSetBitsCallback))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = vEventGroupSetBitsCallback &rArr; xEventGroupSetBits &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xEventGroupSetBits
</UL>
<BR>[Address Reference Count : 1]<UL><LI> event_groups.o(i.xEventGroupSetBitsFromISR)
</UL>
<P><STRONG><a name="[442]"></a>vListInitialise</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, list.o(i.vListInitialise))
<BR><BR>[Called By]<UL><LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReset
<LI><a href="#[428]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xEventGroupCreateStatic
<LI><a href="#[429]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xEventGroupCreate
<LI><a href="#[444]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCheckForValidListAndQueue
<LI><a href="#[440]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvAddNewTaskToReadyList
</UL>

<P><STRONG><a name="[44e]"></a>vListInitialiseItem</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, list.o(i.vListInitialiseItem))
<BR><BR>[Called By]<UL><LI><a href="#[44d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvInitialiseNewTask
</UL>

<P><STRONG><a name="[43f]"></a>vListInsert</STRONG> (Thumb, 48 bytes, Stack size 12 bytes, list.o(i.vListInsert))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = vListInsert
</UL>
<BR>[Called By]<UL><LI><a href="#[46a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskPlaceOnEventList
<LI><a href="#[45a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvSwitchTimerLists
<LI><a href="#[450]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvInsertTimerInActiveList
<LI><a href="#[43c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvAddCurrentTaskToDelayedList
</UL>

<P><STRONG><a name="[43e]"></a>vListInsertEnd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, list.o(i.vListInsertEnd))
<BR><BR>[Called By]<UL><LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskDelete
<LI><a href="#[45c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskRemoveFromEventList
<LI><a href="#[47b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskPriorityInherit
<LI><a href="#[448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskPriorityDisinherit
<LI><a href="#[46c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskPriorityDisinheritAfterTimeout
<LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskPlaceOnEventListRestricted
<LI><a href="#[457]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[46d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskRemoveFromUnorderedEventList
<LI><a href="#[46b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskPlaceOnUnorderedEventList
<LI><a href="#[477]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskIncrementTick
<LI><a href="#[440]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvAddNewTaskToReadyList
<LI><a href="#[43c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvAddCurrentTaskToDelayedList
</UL>

<P><STRONG><a name="[441]"></a>vPortEnterCritical</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, port.o(i.vPortEnterCritical))
<BR><BR>[Called By]<UL><LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskDelete
<LI><a href="#[479]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCheckForTimeOut
<LI><a href="#[435]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueSemaphoreTake
<LI><a href="#[42f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueReceive
<LI><a href="#[434]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReset
<LI><a href="#[458]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vQueueWaitForMessageRestricted
<LI><a href="#[45b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvUnlockQueue
<LI><a href="#[451]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvIsQueueEmpty
<LI><a href="#[457]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[42c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xEventGroupWaitBits
<LI><a href="#[444]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCheckForValidListAndQueue
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvIdleTask
<LI><a href="#[440]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvAddNewTaskToReadyList
</UL>

<P><STRONG><a name="[443]"></a>vPortExitCritical</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, port.o(i.vPortExitCritical))
<BR><BR>[Called By]<UL><LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskDelete
<LI><a href="#[479]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCheckForTimeOut
<LI><a href="#[435]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueSemaphoreTake
<LI><a href="#[42f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueReceive
<LI><a href="#[434]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReset
<LI><a href="#[458]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vQueueWaitForMessageRestricted
<LI><a href="#[45b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvUnlockQueue
<LI><a href="#[451]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvIsQueueEmpty
<LI><a href="#[457]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[42c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xEventGroupWaitBits
<LI><a href="#[444]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCheckForValidListAndQueue
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvIdleTask
<LI><a href="#[440]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvAddNewTaskToReadyList
</UL>

<P><STRONG><a name="[44a]"></a>vPortFree</STRONG> (Thumb, 94 bytes, Stack size 16 bytes, heap_4.o(i.vPortFree))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = vPortFree &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[460]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvInsertBlockIntoFreeList
<LI><a href="#[457]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[456]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSuspendAll
</UL>
<BR>[Called By]<UL><LI><a href="#[437]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vQueueDelete
<LI><a href="#[452]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvProcessReceivedCommands
<LI><a href="#[43b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCreate
<LI><a href="#[449]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvDeleteTCB
</UL>

<P><STRONG><a name="[474]"></a>vPortSetupTimerInterrupt</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, port.o(i.vPortSetupTimerInterrupt))
<BR><BR>[Called By]<UL><LI><a href="#[470]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xPortStartScheduler
</UL>

<P><STRONG><a name="[465]"></a>vPortValidateInterruptPriority</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, port.o(i.vPortValidateInterruptPriority))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = vPortValidateInterruptPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[466]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortGetIPSR
</UL>
<BR>[Called By]<UL><LI><a href="#[42e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueReceiveFromISR
<LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGiveFromISR
<LI><a href="#[433]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSendFromISR
</UL>

<P><STRONG><a name="[432]"></a>vQueueAddToRegistry</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, queue.o(i.vQueueAddToRegistry))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = vQueueAddToRegistry
</UL>
<BR>[Called By]<UL><LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osSemaphoreNew
<LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMessageQueueNew
<LI><a href="#[444]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCheckForValidListAndQueue
</UL>

<P><STRONG><a name="[437]"></a>vQueueDelete</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, queue.o(i.vQueueDelete))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = vQueueDelete &rArr; vPortFree &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[467]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vQueueUnregisterQueue
<LI><a href="#[44a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortFree
</UL>
<BR>[Called By]<UL><LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osSemaphoreNew
</UL>

<P><STRONG><a name="[467]"></a>vQueueUnregisterQueue</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, queue.o(i.vQueueUnregisterQueue))
<BR><BR>[Called By]<UL><LI><a href="#[437]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vQueueDelete
</UL>

<P><STRONG><a name="[458]"></a>vQueueWaitForMessageRestricted</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, queue.o(i.vQueueWaitForMessageRestricted))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = vQueueWaitForMessageRestricted &rArr; vTaskPlaceOnEventListRestricted &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskPlaceOnEventListRestricted
<LI><a href="#[45b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvUnlockQueue
<LI><a href="#[443]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[441]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
</UL>
<BR>[Called By]<UL><LI><a href="#[455]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvProcessTimerOrBlockTask
</UL>

<P><STRONG><a name="[427]"></a>vTaskDelay</STRONG> (Thumb, 66 bytes, Stack size 8 bytes, tasks.o(i.vTaskDelay))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = vTaskDelay &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[457]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[456]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSuspendAll
<LI><a href="#[43c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvAddCurrentTaskToDelayedList
</UL>
<BR>[Called By]<UL><LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osDelay
</UL>

<P><STRONG><a name="[221]"></a>vTaskDelete</STRONG> (Thumb, 130 bytes, Stack size 16 bytes, tasks.o(i.vTaskDelete))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = vTaskDelete &rArr; prvDeleteTCB &rArr; vPortFree &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[43e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsertEnd
<LI><a href="#[43d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxListRemove
<LI><a href="#[443]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[441]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
<LI><a href="#[469]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvResetNextTaskUnblockTime
<LI><a href="#[449]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvDeleteTCB
</UL>
<BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BspInit_Handle
</UL>

<P><STRONG><a name="[478]"></a>vTaskInternalSetTimeOutState</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, tasks.o(i.vTaskInternalSetTimeOutState))
<BR><BR>[Called By]<UL><LI><a href="#[479]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCheckForTimeOut
<LI><a href="#[435]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueSemaphoreTake
<LI><a href="#[42f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueReceive
<LI><a href="#[434]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
</UL>

<P><STRONG><a name="[45d]"></a>vTaskMissedYield</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, tasks.o(i.vTaskMissedYield))
<BR><BR>[Called By]<UL><LI><a href="#[45b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvUnlockQueue
</UL>

<P><STRONG><a name="[46a]"></a>vTaskPlaceOnEventList</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, tasks.o(i.vTaskPlaceOnEventList))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[43f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsert
<LI><a href="#[43c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvAddCurrentTaskToDelayedList
</UL>
<BR>[Called By]<UL><LI><a href="#[435]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueSemaphoreTake
<LI><a href="#[42f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueReceive
<LI><a href="#[434]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
</UL>

<P><STRONG><a name="[468]"></a>vTaskPlaceOnEventListRestricted</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, tasks.o(i.vTaskPlaceOnEventListRestricted))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = vTaskPlaceOnEventListRestricted &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[43e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsertEnd
<LI><a href="#[43c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvAddCurrentTaskToDelayedList
</UL>
<BR>[Called By]<UL><LI><a href="#[458]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vQueueWaitForMessageRestricted
</UL>

<P><STRONG><a name="[46b]"></a>vTaskPlaceOnUnorderedEventList</STRONG> (Thumb, 76 bytes, Stack size 8 bytes, tasks.o(i.vTaskPlaceOnUnorderedEventList))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = vTaskPlaceOnUnorderedEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[43e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsertEnd
<LI><a href="#[43c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvAddCurrentTaskToDelayedList
</UL>
<BR>[Called By]<UL><LI><a href="#[42c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xEventGroupWaitBits
</UL>

<P><STRONG><a name="[46c]"></a>vTaskPriorityDisinheritAfterTimeout</STRONG> (Thumb, 134 bytes, Stack size 16 bytes, tasks.o(i.vTaskPriorityDisinheritAfterTimeout))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = vTaskPriorityDisinheritAfterTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[43e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsertEnd
<LI><a href="#[43d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxListRemove
</UL>
<BR>[Called By]<UL><LI><a href="#[435]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueSemaphoreTake
</UL>

<P><STRONG><a name="[46d]"></a>vTaskRemoveFromUnorderedEventList</STRONG> (Thumb, 102 bytes, Stack size 16 bytes, tasks.o(i.vTaskRemoveFromUnorderedEventList))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = vTaskRemoveFromUnorderedEventList
</UL>
<BR>[Calls]<UL><LI><a href="#[43e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsertEnd
<LI><a href="#[43d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxListRemove
</UL>
<BR>[Called By]<UL><LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xEventGroupSetBits
</UL>

<P><STRONG><a name="[42d]"></a>vTaskStartScheduler</STRONG> (Thumb, 118 bytes, Stack size 40 bytes, tasks.o(i.vTaskStartScheduler))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = vTaskStartScheduler &rArr; xTimerCreateTimerTask &rArr; xTaskCreateStatic &rArr; prvInitialiseNewTask &rArr; pxPortInitialiseStack
</UL>
<BR>[Calls]<UL><LI><a href="#[46f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerCreateTimerTask
<LI><a href="#[470]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xPortStartScheduler
<LI><a href="#[46e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vApplicationGetIdleTaskMemory
<LI><a href="#[43a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCreateStatic
</UL>
<BR>[Called By]<UL><LI><a href="#[426]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osKernelStart
</UL>

<P><STRONG><a name="[456]"></a>vTaskSuspendAll</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, tasks.o(i.vTaskSuspendAll))
<BR><BR>[Called By]<UL><LI><a href="#[435]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueSemaphoreTake
<LI><a href="#[42f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueReceive
<LI><a href="#[434]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[44a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortFree
<LI><a href="#[45e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pvPortMalloc
<LI><a href="#[42c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xEventGroupWaitBits
<LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xEventGroupSetBits
<LI><a href="#[455]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvProcessTimerOrBlockTask
<LI><a href="#[427]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskDelay
</UL>

<P><STRONG><a name="[1fd]"></a>vTaskSwitchContext</STRONG> (Thumb, 90 bytes, Stack size 8 bytes, tasks.o(i.vTaskSwitchContext))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = vTaskSwitchContext
</UL>
<BR>[Called By]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>

<P><STRONG><a name="[429]"></a>xEventGroupCreate</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, event_groups.o(i.xEventGroupCreate))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = xEventGroupCreate &rArr; pvPortMalloc &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[442]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInitialise
<LI><a href="#[45e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pvPortMalloc
</UL>
<BR>[Called By]<UL><LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osEventFlagsNew
</UL>

<P><STRONG><a name="[428]"></a>xEventGroupCreateStatic</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, event_groups.o(i.xEventGroupCreateStatic))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = xEventGroupCreateStatic
</UL>
<BR>[Calls]<UL><LI><a href="#[442]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInitialise
</UL>
<BR>[Called By]<UL><LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osEventFlagsNew
</UL>

<P><STRONG><a name="[42b]"></a>xEventGroupSetBits</STRONG> (Thumb, 140 bytes, Stack size 24 bytes, event_groups.o(i.xEventGroupSetBits))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = xEventGroupSetBits &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[457]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[456]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSuspendAll
<LI><a href="#[46d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskRemoveFromUnorderedEventList
</UL>
<BR>[Called By]<UL><LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osEventFlagsSet
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vEventGroupSetBitsCallback
</UL>

<P><STRONG><a name="[42a]"></a>xEventGroupSetBitsFromISR</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, event_groups.o(i.xEventGroupSetBitsFromISR))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = xEventGroupSetBitsFromISR &rArr; xTimerPendFunctionCallFromISR &rArr; xQueueGenericSendFromISR &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit
</UL>
<BR>[Calls]<UL><LI><a href="#[471]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerPendFunctionCallFromISR
</UL>
<BR>[Called By]<UL><LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osEventFlagsSet
</UL>

<P><STRONG><a name="[42c]"></a>xEventGroupWaitBits</STRONG> (Thumb, 260 bytes, Stack size 32 bytes, event_groups.o(i.xEventGroupWaitBits))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = xEventGroupWaitBits &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[457]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGetSchedulerState
<LI><a href="#[456]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSuspendAll
<LI><a href="#[46b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskPlaceOnUnorderedEventList
<LI><a href="#[443]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[441]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
<LI><a href="#[473]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxTaskResetEventItemValue
<LI><a href="#[472]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvTestWaitCondition
</UL>
<BR>[Called By]<UL><LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osEventFlagsWait
</UL>

<P><STRONG><a name="[470]"></a>xPortStartScheduler</STRONG> (Thumb, 222 bytes, Stack size 16 bytes, port.o(i.xPortStartScheduler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = xPortStartScheduler
</UL>
<BR>[Calls]<UL><LI><a href="#[474]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortSetupTimerInterrupt
<LI><a href="#[475]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__asm___6_port_c_39a90d8d__prvEnableVFP
<LI><a href="#[476]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__asm___6_port_c_39a90d8d__prvStartFirstTask
</UL>
<BR>[Called By]<UL><LI><a href="#[42d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskStartScheduler
</UL>

<P><STRONG><a name="[2c6]"></a>xPortSysTickHandler</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, port.o(i.xPortSysTickHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = xPortSysTickHandler &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[477]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskIncrementTick
</UL>
<BR>[Called By]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[438]"></a>xQueueCreateCountingSemaphore</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, queue.o(i.xQueueCreateCountingSemaphore))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = xQueueCreateCountingSemaphore &rArr; xQueueGenericCreate &rArr; pvPortMalloc &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[431]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericCreate
</UL>
<BR>[Called By]<UL><LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osSemaphoreNew
</UL>

<P><STRONG><a name="[436]"></a>xQueueCreateCountingSemaphoreStatic</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, queue.o(i.xQueueCreateCountingSemaphoreStatic))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = xQueueCreateCountingSemaphoreStatic &rArr; xQueueGenericCreateStatic &rArr; prvInitialiseNewQueue &rArr; xQueueGenericReset &rArr; xTaskRemoveFromEventList
</UL>
<BR>[Calls]<UL><LI><a href="#[430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericCreateStatic
</UL>
<BR>[Called By]<UL><LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osSemaphoreNew
</UL>

<P><STRONG><a name="[431]"></a>xQueueGenericCreate</STRONG> (Thumb, 66 bytes, Stack size 24 bytes, queue.o(i.xQueueGenericCreate))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = xQueueGenericCreate &rArr; pvPortMalloc &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[44b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvInitialiseNewQueue
<LI><a href="#[45e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pvPortMalloc
</UL>
<BR>[Called By]<UL><LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osSemaphoreNew
<LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMessageQueueNew
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueCreateCountingSemaphore
</UL>

<P><STRONG><a name="[430]"></a>xQueueGenericCreateStatic</STRONG> (Thumb, 102 bytes, Stack size 16 bytes, queue.o(i.xQueueGenericCreateStatic))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = xQueueGenericCreateStatic &rArr; prvInitialiseNewQueue &rArr; xQueueGenericReset &rArr; xTaskRemoveFromEventList
</UL>
<BR>[Calls]<UL><LI><a href="#[44b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvInitialiseNewQueue
</UL>
<BR>[Called By]<UL><LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osSemaphoreNew
<LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMessageQueueNew
<LI><a href="#[436]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueCreateCountingSemaphoreStatic
<LI><a href="#[444]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCheckForValidListAndQueue
</UL>

<P><STRONG><a name="[44c]"></a>xQueueGenericReset</STRONG> (Thumb, 132 bytes, Stack size 16 bytes, queue.o(i.xQueueGenericReset))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = xQueueGenericReset &rArr; xTaskRemoveFromEventList
</UL>
<BR>[Calls]<UL><LI><a href="#[45c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskRemoveFromEventList
<LI><a href="#[443]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[441]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
<LI><a href="#[442]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInitialise
</UL>
<BR>[Called By]<UL><LI><a href="#[44b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvInitialiseNewQueue
</UL>

<P><STRONG><a name="[434]"></a>xQueueGenericSend</STRONG> (Thumb, 346 bytes, Stack size 56 bytes, queue.o(i.xQueueGenericSend))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = xQueueGenericSend &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[45c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskRemoveFromEventList
<LI><a href="#[479]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCheckForTimeOut
<LI><a href="#[46a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskPlaceOnEventList
<LI><a href="#[478]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskInternalSetTimeOutState
<LI><a href="#[45b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvUnlockQueue
<LI><a href="#[447]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCopyDataToQueue
<LI><a href="#[457]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGetSchedulerState
<LI><a href="#[456]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSuspendAll
<LI><a href="#[443]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[441]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
</UL>
<BR>[Called By]<UL><LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osSemaphoreRelease
<LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osSemaphoreNew
<LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMessageQueuePut
<LI><a href="#[454]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerGenericCommand
</UL>

<P><STRONG><a name="[433]"></a>xQueueGenericSendFromISR</STRONG> (Thumb, 190 bytes, Stack size 32 bytes, queue.o(i.xQueueGenericSendFromISR))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = xQueueGenericSendFromISR &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit
</UL>
<BR>[Calls]<UL><LI><a href="#[45c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskRemoveFromEventList
<LI><a href="#[465]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortValidateInterruptPriority
<LI><a href="#[447]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCopyDataToQueue
</UL>
<BR>[Called By]<UL><LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMessageQueuePut
<LI><a href="#[471]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerPendFunctionCallFromISR
<LI><a href="#[454]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerGenericCommand
</UL>

<P><STRONG><a name="[439]"></a>xQueueGiveFromISR</STRONG> (Thumb, 156 bytes, Stack size 16 bytes, queue.o(i.xQueueGiveFromISR))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = xQueueGiveFromISR &rArr; xTaskRemoveFromEventList
</UL>
<BR>[Calls]<UL><LI><a href="#[45c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskRemoveFromEventList
<LI><a href="#[465]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortValidateInterruptPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osSemaphoreRelease
</UL>

<P><STRONG><a name="[42f]"></a>xQueueReceive</STRONG> (Thumb, 308 bytes, Stack size 56 bytes, queue.o(i.xQueueReceive))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = xQueueReceive &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[45c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskRemoveFromEventList
<LI><a href="#[479]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCheckForTimeOut
<LI><a href="#[46a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskPlaceOnEventList
<LI><a href="#[478]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskInternalSetTimeOutState
<LI><a href="#[45b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvUnlockQueue
<LI><a href="#[451]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvIsQueueEmpty
<LI><a href="#[445]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCopyDataFromQueue
<LI><a href="#[457]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGetSchedulerState
<LI><a href="#[456]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSuspendAll
<LI><a href="#[443]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[441]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
</UL>
<BR>[Called By]<UL><LI><a href="#[329]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMessageQueueGet
<LI><a href="#[452]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvProcessReceivedCommands
</UL>

<P><STRONG><a name="[42e]"></a>xQueueReceiveFromISR</STRONG> (Thumb, 154 bytes, Stack size 32 bytes, queue.o(i.xQueueReceiveFromISR))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = xQueueReceiveFromISR &rArr; xTaskRemoveFromEventList
</UL>
<BR>[Calls]<UL><LI><a href="#[45c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskRemoveFromEventList
<LI><a href="#[465]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortValidateInterruptPriority
<LI><a href="#[445]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCopyDataFromQueue
</UL>
<BR>[Called By]<UL><LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osSemaphoreAcquire
<LI><a href="#[329]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osMessageQueueGet
</UL>

<P><STRONG><a name="[435]"></a>xQueueSemaphoreTake</STRONG> (Thumb, 372 bytes, Stack size 48 bytes, queue.o(i.xQueueSemaphoreTake))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = xQueueSemaphoreTake &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[45c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskRemoveFromEventList
<LI><a href="#[47b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskPriorityInherit
<LI><a href="#[479]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCheckForTimeOut
<LI><a href="#[46c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskPriorityDisinheritAfterTimeout
<LI><a href="#[46a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskPlaceOnEventList
<LI><a href="#[478]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskInternalSetTimeOutState
<LI><a href="#[47a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pvTaskIncrementMutexHeldCount
<LI><a href="#[45b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvUnlockQueue
<LI><a href="#[451]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvIsQueueEmpty
<LI><a href="#[457]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGetSchedulerState
<LI><a href="#[456]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSuspendAll
<LI><a href="#[443]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[441]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
</UL>
<BR>[Called By]<UL><LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osSemaphoreAcquire
</UL>

<P><STRONG><a name="[479]"></a>xTaskCheckForTimeOut</STRONG> (Thumb, 112 bytes, Stack size 24 bytes, tasks.o(i.xTaskCheckForTimeOut))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = xTaskCheckForTimeOut
</UL>
<BR>[Calls]<UL><LI><a href="#[478]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskInternalSetTimeOutState
<LI><a href="#[443]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[441]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
</UL>
<BR>[Called By]<UL><LI><a href="#[435]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueSemaphoreTake
<LI><a href="#[42f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueReceive
<LI><a href="#[434]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
</UL>

<P><STRONG><a name="[43b]"></a>xTaskCreate</STRONG> (Thumb, 90 bytes, Stack size 56 bytes, tasks.o(i.xTaskCreate))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = xTaskCreate &rArr; pvPortMalloc &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[44a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortFree
<LI><a href="#[45e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pvPortMalloc
<LI><a href="#[44d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvInitialiseNewTask
<LI><a href="#[440]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvAddNewTaskToReadyList
</UL>
<BR>[Called By]<UL><LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osThreadNew
</UL>

<P><STRONG><a name="[43a]"></a>xTaskCreateStatic</STRONG> (Thumb, 86 bytes, Stack size 40 bytes, tasks.o(i.xTaskCreateStatic))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = xTaskCreateStatic &rArr; prvInitialiseNewTask &rArr; pxPortInitialiseStack
</UL>
<BR>[Calls]<UL><LI><a href="#[44d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvInitialiseNewTask
<LI><a href="#[440]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvAddNewTaskToReadyList
</UL>
<BR>[Called By]<UL><LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osThreadNew
<LI><a href="#[46f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerCreateTimerTask
<LI><a href="#[42d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskStartScheduler
</UL>

<P><STRONG><a name="[2c5]"></a>xTaskGetSchedulerState</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, tasks.o(i.xTaskGetSchedulerState))
<BR><BR>[Called By]<UL><LI><a href="#[435]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueSemaphoreTake
<LI><a href="#[42f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueReceive
<LI><a href="#[434]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[42c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xEventGroupWaitBits
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
<LI><a href="#[454]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerGenericCommand
</UL>

<P><STRONG><a name="[459]"></a>xTaskGetTickCount</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, tasks.o(i.xTaskGetTickCount))
<BR><BR>[Called By]<UL><LI><a href="#[453]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvSampleTimeNow
</UL>

<P><STRONG><a name="[477]"></a>xTaskIncrementTick</STRONG> (Thumb, 192 bytes, Stack size 24 bytes, tasks.o(i.xTaskIncrementTick))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[43e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsertEnd
<LI><a href="#[43d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxListRemove
<LI><a href="#[469]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvResetNextTaskUnblockTime
</UL>
<BR>[Called By]<UL><LI><a href="#[457]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xPortSysTickHandler
</UL>

<P><STRONG><a name="[448]"></a>xTaskPriorityDisinherit</STRONG> (Thumb, 118 bytes, Stack size 16 bytes, tasks.o(i.xTaskPriorityDisinherit))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = xTaskPriorityDisinherit
</UL>
<BR>[Calls]<UL><LI><a href="#[43e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsertEnd
<LI><a href="#[43d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxListRemove
</UL>
<BR>[Called By]<UL><LI><a href="#[447]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCopyDataToQueue
</UL>

<P><STRONG><a name="[47b]"></a>xTaskPriorityInherit</STRONG> (Thumb, 112 bytes, Stack size 16 bytes, tasks.o(i.xTaskPriorityInherit))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = xTaskPriorityInherit
</UL>
<BR>[Calls]<UL><LI><a href="#[43e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsertEnd
<LI><a href="#[43d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxListRemove
</UL>
<BR>[Called By]<UL><LI><a href="#[435]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueSemaphoreTake
</UL>

<P><STRONG><a name="[45c]"></a>xTaskRemoveFromEventList</STRONG> (Thumb, 98 bytes, Stack size 16 bytes, tasks.o(i.xTaskRemoveFromEventList))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = xTaskRemoveFromEventList
</UL>
<BR>[Calls]<UL><LI><a href="#[43e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsertEnd
<LI><a href="#[43d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxListRemove
</UL>
<BR>[Called By]<UL><LI><a href="#[435]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueSemaphoreTake
<LI><a href="#[42e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueReceiveFromISR
<LI><a href="#[42f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueReceive
<LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGiveFromISR
<LI><a href="#[433]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSendFromISR
<LI><a href="#[434]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReset
<LI><a href="#[45b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvUnlockQueue
</UL>

<P><STRONG><a name="[457]"></a>xTaskResumeAll</STRONG> (Thumb, 182 bytes, Stack size 32 bytes, tasks.o(i.xTaskResumeAll))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[43e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsertEnd
<LI><a href="#[43d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxListRemove
<LI><a href="#[443]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[441]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
<LI><a href="#[477]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskIncrementTick
<LI><a href="#[469]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvResetNextTaskUnblockTime
</UL>
<BR>[Called By]<UL><LI><a href="#[435]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueSemaphoreTake
<LI><a href="#[42f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueReceive
<LI><a href="#[434]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[44a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortFree
<LI><a href="#[45e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pvPortMalloc
<LI><a href="#[42c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xEventGroupWaitBits
<LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xEventGroupSetBits
<LI><a href="#[455]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvProcessTimerOrBlockTask
<LI><a href="#[427]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskDelay
</UL>

<P><STRONG><a name="[46f]"></a>xTimerCreateTimerTask</STRONG> (Thumb, 78 bytes, Stack size 32 bytes, timers.o(i.xTimerCreateTimerTask))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = xTimerCreateTimerTask &rArr; xTaskCreateStatic &rArr; prvInitialiseNewTask &rArr; pxPortInitialiseStack
</UL>
<BR>[Calls]<UL><LI><a href="#[47c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vApplicationGetTimerTaskMemory
<LI><a href="#[444]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCheckForValidListAndQueue
<LI><a href="#[43a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCreateStatic
</UL>
<BR>[Called By]<UL><LI><a href="#[42d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskStartScheduler
</UL>

<P><STRONG><a name="[454]"></a>xTimerGenericCommand</STRONG> (Thumb, 98 bytes, Stack size 40 bytes, timers.o(i.xTimerGenericCommand))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = xTimerGenericCommand &rArr; xQueueGenericSend &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[433]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSendFromISR
<LI><a href="#[434]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGetSchedulerState
</UL>
<BR>[Called By]<UL><LI><a href="#[45a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvSwitchTimerLists
<LI><a href="#[455]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvProcessTimerOrBlockTask
<LI><a href="#[452]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvProcessReceivedCommands
</UL>

<P><STRONG><a name="[471]"></a>xTimerPendFunctionCallFromISR</STRONG> (Thumb, 34 bytes, Stack size 24 bytes, timers.o(i.xTimerPendFunctionCallFromISR))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = xTimerPendFunctionCallFromISR &rArr; xQueueGenericSendFromISR &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit
</UL>
<BR>[Calls]<UL><LI><a href="#[433]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSendFromISR
</UL>
<BR>[Called By]<UL><LI><a href="#[42a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xEventGroupSetBitsFromISR
</UL>

<P><STRONG><a name="[2fe]"></a>touchgfx::GraphScroll&lang;(short)150&rang;::GraphScroll()</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, screen1viewbase.o(t._ZN8touchgfx11GraphScrollILs150EEC1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = touchgfx::GraphScroll&lang;(short)150&rang;::GraphScroll() &rArr; touchgfx::AbstractDataGraph::AbstractDataGraph__sub_object(short) &rArr; touchgfx::AbstractDataGraph::setGraphAreaMargin(short, short, short, short) &rArr; touchgfx::Drawable::setPosition(short, short, short, short)
</UL>
<BR>[Calls]<UL><LI><a href="#[373]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDataGraph::AbstractDataGraph__sub_object(short)
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractDataGraph::setGraphRangeX(int, int)
</UL>
<BR>[Called By]<UL><LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1ViewBase::Screen1ViewBase()
</UL>

<P><STRONG><a name="[4fe]"></a>touchgfx::GraphScroll&lang;(short)150&rang;::GraphScroll__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, screen1viewbase.o(t._ZN8touchgfx11GraphScrollILs150EEC1Ev), UNUSED)

<P><STRONG><a name="[34f]"></a>touchgfx::TextProvider::circularBuffer&lang;(unsigned)10&rang;::peekChar(unsigned short)</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, textprovider.o(t._ZN8touchgfx12TextProvider14circularBufferILj10EE8peekCharEt))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::TextProvider::circularBuffer&lang;(unsigned)10&rang;::peekChar(unsigned short)
</UL>
<BR>[Called By]<UL><LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::replaceInputCharacters(unsigned short, unsigned short, const unsigned short*)
</UL>

<P><STRONG><a name="[34b]"></a>touchgfx::TextProvider::circularBuffer&lang;(unsigned)10&rang;::peekChar()</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, texts.o(t._ZN8touchgfx12TextProvider14circularBufferILj10EE8peekCharEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::TextProvider::circularBuffer&lang;(unsigned)10&rang;::peekChar()
</UL>
<BR>[Called By]<UL><LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::getNextLigature(unsigned char)
</UL>

<P><STRONG><a name="[319]"></a>T2* touchgfx::makeTransition&lang;Screen1View, Screen1Presenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)</STRONG> (Thumb, 174 bytes, Stack size 32 bytes, frontendapplicationbase.o(t._ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_))
<BR><BR>[Stack]<UL><LI>Max Depth = 1504<LI>Call Chain = T2* touchgfx::makeTransition&lang;Screen1View, Screen1Presenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*) &rArr; Screen1View::Screen1View() &rArr; Screen1ViewBase::Screen1ViewBase() &rArr; touchgfx::TextureMapper::setBitmap(const touchgfx::Bitmap&) &rArr; touchgfx::TextureMapper::applyTransformation() &rArr; touchgfx::operator *(const touchgfx::Matrix4x4&, const touchgfx::Matrix4x4&)
</UL>
<BR>[Calls]<UL><LI><a href="#[480]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1Presenter::Screen1Presenter(Screen1View&)
<LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1View::Screen1View()
<LI><a href="#[47f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T1& touchgfx::AbstractPartition::at&lang;Screen1Presenter&rang;(unsigned short)
<LI><a href="#[47e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T1& touchgfx::AbstractPartition::at&lang;Screen1View&rang;(unsigned short)
<LI><a href="#[47d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Transition::Transition()
<LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::finalizeTransition(touchgfx::Screen*, touchgfx::Presenter*, touchgfx::Transition*)
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::prepareTransition(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::Transition**)
</UL>
<BR>[Called By]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplicationBase::gotoScreen1ScreenNoTransitionImpl()
</UL>

<P><STRONG><a name="[31a]"></a>T2* touchgfx::makeTransition&lang;Screen1View, Screen1Presenter, touchgfx::SlideTransition&lang;(touchgfx::Direction)1&rang;, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)</STRONG> (Thumb, 176 bytes, Stack size 32 bytes, frontendapplicationbase.o(t._ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_15SlideTransitionILNS_9DirectionE1EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_))
<BR><BR>[Stack]<UL><LI>Max Depth = 1504<LI>Call Chain = T2* touchgfx::makeTransition&lang;Screen1View, Screen1Presenter, touchgfx::SlideTransition&lang;(touchgfx::Direction)1&rang;, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*) &rArr; Screen1View::Screen1View() &rArr; Screen1ViewBase::Screen1ViewBase() &rArr; touchgfx::TextureMapper::setBitmap(const touchgfx::Bitmap&) &rArr; touchgfx::TextureMapper::applyTransformation() &rArr; touchgfx::operator *(const touchgfx::Matrix4x4&, const touchgfx::Matrix4x4&)
</UL>
<BR>[Calls]<UL><LI><a href="#[480]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1Presenter::Screen1Presenter(Screen1View&)
<LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1View::Screen1View()
<LI><a href="#[47f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T1& touchgfx::AbstractPartition::at&lang;Screen1Presenter&rang;(unsigned short)
<LI><a href="#[47e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T1& touchgfx::AbstractPartition::at&lang;Screen1View&rang;(unsigned short)
<LI><a href="#[481]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::SlideTransition&lang;(touchgfx::Direction)1&rang;::SlideTransition(unsigned char)
<LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::finalizeTransition(touchgfx::Screen*, touchgfx::Presenter*, touchgfx::Transition*)
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::prepareTransition(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::Transition**)
</UL>
<BR>[Called By]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplicationBase::gotoScreen1ScreenSlideTransitionSouthImpl()
</UL>

<P><STRONG><a name="[183]"></a>touchgfx::SlideTransition&lang;(touchgfx::Direction)1&rang;::handleTickEvent()</STRONG> (Thumb, 118 bytes, Stack size 16 bytes, frontendapplicationbase.o(t._ZN8touchgfx15SlideTransitionILNS_9DirectionE1EE15handleTickEventEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::SlideTransition&lang;(touchgfx::Direction)1&rang;::handleTickEvent()
</UL>
<BR>[Calls]<UL><LI><a href="#[365]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::EasingEquations::cubicEaseOut(unsigned short, short, short, unsigned short)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> frontendapplicationbase.o(.constdata__ZTVN8touchgfx15SlideTransitionILNS_9DirectionE1EEE)
</UL>
<P><STRONG><a name="[185]"></a>touchgfx::SlideTransition&lang;(touchgfx::Direction)1&rang;::init()</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, frontendapplicationbase.o(t._ZN8touchgfx15SlideTransitionILNS_9DirectionE1EE4initEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::SlideTransition&lang;(touchgfx::Direction)1&rang;::init()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> frontendapplicationbase.o(.constdata__ZTVN8touchgfx15SlideTransitionILNS_9DirectionE1EEE)
</UL>
<P><STRONG><a name="[184]"></a>touchgfx::SlideTransition&lang;(touchgfx::Direction)1&rang;::tearDown()</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, frontendapplicationbase.o(t._ZN8touchgfx15SlideTransitionILNS_9DirectionE1EE8tearDownEv))
<BR>[Address Reference Count : 1]<UL><LI> frontendapplicationbase.o(.constdata__ZTVN8touchgfx15SlideTransitionILNS_9DirectionE1EEE)
</UL>
<P><STRONG><a name="[481]"></a>touchgfx::SlideTransition&lang;(touchgfx::Direction)1&rang;::SlideTransition(unsigned char)</STRONG> (Thumb, 132 bytes, Stack size 32 bytes, frontendapplicationbase.o(t._ZN8touchgfx15SlideTransitionILNS_9DirectionE1EEC1Eh))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = touchgfx::SlideTransition&lang;(touchgfx::Direction)1&rang;::SlideTransition(unsigned char) &rArr; touchgfx::SnapshotWidget::SnapshotWidget()
</UL>
<BR>[Calls]<UL><LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::SnapshotWidget::SnapshotWidget()
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::SnapshotWidget::makeSnapshot()
<LI><a href="#[47d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Transition::Transition()
</UL>
<BR>[Called By]<UL><LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2* touchgfx::makeTransition&lang;Screen1View, Screen1Presenter, touchgfx::SlideTransition&lang;(touchgfx::Direction)1&rang;, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)
</UL>

<P><STRONG><a name="[4ff]"></a>touchgfx::SlideTransition&lang;(touchgfx::Direction)1&rang;::SlideTransition__sub_object(unsigned char)</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, frontendapplicationbase.o(t._ZN8touchgfx15SlideTransitionILNS_9DirectionE1EEC1Eh), UNUSED)

<P><STRONG><a name="[47e]"></a>T1& touchgfx::AbstractPartition::at&lang;Screen1View&rang;(unsigned short)</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, frontendapplicationbase.o(t._ZN8touchgfx17AbstractPartition2atI11Screen1ViewEERT_t))
<BR><BR>[Called By]<UL><LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2* touchgfx::makeTransition&lang;Screen1View, Screen1Presenter, touchgfx::SlideTransition&lang;(touchgfx::Direction)1&rang;, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)
<LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2* touchgfx::makeTransition&lang;Screen1View, Screen1Presenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)
</UL>

<P><STRONG><a name="[47f]"></a>T1& touchgfx::AbstractPartition::at&lang;Screen1Presenter&rang;(unsigned short)</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, frontendapplicationbase.o(t._ZN8touchgfx17AbstractPartition2atI16Screen1PresenterEERT_t))
<BR><BR>[Called By]<UL><LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2* touchgfx::makeTransition&lang;Screen1View, Screen1Presenter, touchgfx::SlideTransition&lang;(touchgfx::Direction)1&rang;, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)
<LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2* touchgfx::makeTransition&lang;Screen1View, Screen1Presenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)
</UL>

<P><STRONG><a name="[332]"></a>touchgfx::Vector&lang;touchgfx::Rect, (unsigned short)8&rang;::quickRemoveAt(unsigned short)</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, application.o(t._ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::Vector&lang;touchgfx::Rect, (unsigned short)8&rang;::quickRemoveAt(unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_memcpy4_8
</UL>
<BR>[Called By]<UL><LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::invalidateArea(touchgfx::Rect)
</UL>

<P><STRONG><a name="[1b5]"></a>touchgfx::Callback&lang;FrontendApplicationBase, void, void, void&rang;::execute()</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, frontendapplicationbase.o(t._ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv))
<BR>[Address Reference Count : 1]<UL><LI> frontendapplicationbase.o(.constdata__ZTVN8touchgfx8CallbackI23FrontendApplicationBasevvvEE)
</UL>
<P><STRONG><a name="[317]"></a>touchgfx::Callback&lang;FrontendApplicationBase, void, void, void&rang;::Callback(FrontendApplicationBase*, void(FrontendApplicationBase::*)())</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, frontendapplicationbase.o(t._ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEC1EPS1_MS1_FvvE))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::Callback&lang;FrontendApplicationBase, void, void, void&rang;::Callback(FrontendApplicationBase*, void(FrontendApplicationBase::*)())
</UL>
<BR>[Called By]<UL><LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplicationBase::gotoScreen1ScreenNoTransition()
</UL>

<P><STRONG><a name="[500]"></a>touchgfx::Callback&lang;FrontendApplicationBase, void, void, void&rang;::Callback__sub_object(FrontendApplicationBase*, void(FrontendApplicationBase::*)())</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, frontendapplicationbase.o(t._ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEC1EPS1_MS1_FvvE), UNUSED)

<P><STRONG><a name="[1ec]"></a>touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;Screen1View, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::element_size()</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, touchgfxconfiguration.o(t._ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv))
<BR>[Address Reference Count : 1]<UL><LI> touchgfxconfiguration.o(.constdata__ZTVN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EEE)
</UL>
<P><STRONG><a name="[1ed]"></a>touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;Screen1View, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::element(unsigned short)</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, touchgfxconfiguration.o(t._ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EE7elementEt))
<BR>[Address Reference Count : 1]<UL><LI> touchgfxconfiguration.o(.constdata__ZTVN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EEE)
</UL>
<P><STRONG><a name="[1ee]"></a>touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;Screen1Presenter, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::element_size()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, touchgfxconfiguration.o(t._ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv))
<BR>[Address Reference Count : 1]<UL><LI> touchgfxconfiguration.o(.constdata__ZTVN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EEE)
</UL>
<P><STRONG><a name="[1ef]"></a>touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;Screen1Presenter, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::element(unsigned short)</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, touchgfxconfiguration.o(t._ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt))
<BR>[Address Reference Count : 1]<UL><LI> touchgfxconfiguration.o(.constdata__ZTVN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EEE)
</UL>
<P><STRONG><a name="[1f0]"></a>touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;touchgfx::SlideTransition&lang;(touchgfx::Direction)1&rang;, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::element_size()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, touchgfxconfiguration.o(t._ZN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE1EEENS2_INS1_3NilES6_EEEELt1EE12element_sizeEv))
<BR>[Address Reference Count : 1]<UL><LI> touchgfxconfiguration.o(.constdata__ZTVN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE1EEENS2_INS1_3NilES6_EEEELt1EEE)
</UL>
<P><STRONG><a name="[1f1]"></a>touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;touchgfx::SlideTransition&lang;(touchgfx::Direction)1&rang;, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::element(unsigned short)</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, touchgfxconfiguration.o(t._ZN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE1EEENS2_INS1_3NilES6_EEEELt1EE7elementEt))
<BR>[Address Reference Count : 1]<UL><LI> touchgfxconfiguration.o(.constdata__ZTVN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE1EEENS2_INS1_3NilES6_EEEELt1EEE)
</UL>
<P><STRONG><a name="[1b6]"></a>touchgfx::Callback&lang;FrontendApplicationBase, void, void, void&rang;::isValid() const</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, frontendapplicationbase.o(t._ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv))
<BR>[Address Reference Count : 1]<UL><LI> frontendapplicationbase.o(.constdata__ZTVN8touchgfx8CallbackI23FrontendApplicationBasevvvEE)
</UL><P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[266]"></a>HAL_FMC_MspInit</STRONG> (Thumb, 162 bytes, Stack size 48 bytes, fmc.o(i.HAL_FMC_MspInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = HAL_FMC_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
<LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SDRAM_MspInit
</UL>

<P><STRONG><a name="[1f2]"></a>__sti___25_TouchGFXConfiguration_cpp_f5abfd34</STRONG> (Thumb, 104 bytes, Stack size 24 bytes, touchgfxconfiguration.o(i.__sti___25_TouchGFXConfiguration_cpp_f5abfd34))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = __sti___25_TouchGFXConfiguration_cpp_f5abfd34 &rArr; __aeabi_atexit &rArr; malloc
</UL>
<BR>[Calls]<UL><LI><a href="#[422]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::LCD16bpp()
<LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32DMA::STM32DMA()
<LI><a href="#[423]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::HAL__sub_object(touchgfx::DMA_Interface&, touchgfx::LCD&, touchgfx::TouchController&, unsigned short, unsigned short)
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_atexit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchgfxconfiguration.o(.init_array)
</UL>
<P><STRONG><a name="[314]"></a>__NVIC_EnableIRQ(IRQn_Type)</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, touchgfxgeneratedhal.o(i._Z16__NVIC_EnableIRQ9IRQn_Type))
<BR><BR>[Called By]<UL><LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXGeneratedHAL::enableInterrupts()
</UL>

<P><STRONG><a name="[315]"></a>__NVIC_DisableIRQ(IRQn_Type)</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, touchgfxgeneratedhal.o(i._Z17__NVIC_DisableIRQ9IRQn_Type))
<BR><BR>[Called By]<UL><LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXGeneratedHAL::disableInterrupts()
</UL>

<P><STRONG><a name="[316]"></a>__NVIC_SetPriority(IRQn_Type, unsigned)</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, touchgfxgeneratedhal.o(i._Z18__NVIC_SetPriority9IRQn_Typej))
<BR><BR>[Called By]<UL><LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchGFXGeneratedHAL::configureInterrupts()
</UL>

<P><STRONG><a name="[81]"></a>DMA2D_XferCpltCallback(__DMA2D_HandleTypeDef*)</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32dma.o(i._Z22DMA2D_XferCpltCallbackP21__DMA2D_HandleTypeDef))
<BR>[Address Reference Count : 1]<UL><LI> stm32dma.o(i._ZN8STM32DMA10initializeEv)
</UL>
<P><STRONG><a name="[70]"></a>ADC_DMAConvCplt</STRONG> (Thumb, 110 bytes, Stack size 8 bytes, stm32f4xx_hal_adc.o(i.ADC_DMAConvCplt))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ADC_DMAConvCplt
</UL>
<BR>[Calls]<UL><LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_ADC_ConvCpltCallback
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_ADC_ErrorCallback
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stm32f4xx_hal_adc.o(i.HAL_ADC_Start_DMA)
</UL>
<P><STRONG><a name="[72]"></a>ADC_DMAError</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, stm32f4xx_hal_adc.o(i.ADC_DMAError))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ADC_DMAError
</UL>
<BR>[Calls]<UL><LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_ADC_ErrorCallback
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stm32f4xx_hal_adc.o(i.HAL_ADC_Start_DMA)
</UL>
<P><STRONG><a name="[71]"></a>ADC_DMAHalfConvCplt</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, stm32f4xx_hal_adc.o(i.ADC_DMAHalfConvCplt))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ADC_DMAHalfConvCplt
</UL>
<BR>[Calls]<UL><LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_ADC_ConvHalfCpltCallback
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stm32f4xx_hal_adc.o(i.HAL_ADC_Start_DMA)
</UL>
<P><STRONG><a name="[244]"></a>ADC_Init</STRONG> (Thumb, 284 bytes, Stack size 8 bytes, stm32f4xx_hal_adc.o(i.ADC_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ADC_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_ADC_Init
</UL>

<P><STRONG><a name="[263]"></a>DMA_CalcBaseAndBitshift</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, stm32f4xx_hal_dma.o(i.DMA_CalcBaseAndBitshift))
<BR><BR>[Called By]<UL><LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_Init
</UL>

<P><STRONG><a name="[262]"></a>DMA_CheckFifoParam</STRONG> (Thumb, 84 bytes, Stack size 8 bytes, stm32f4xx_hal_dma.o(i.DMA_CheckFifoParam))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = DMA_CheckFifoParam
</UL>
<BR>[Called By]<UL><LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_Init
</UL>

<P><STRONG><a name="[264]"></a>DMA_SetConfig</STRONG> (Thumb, 40 bytes, Stack size 12 bytes, stm32f4xx_hal_dma.o(i.DMA_SetConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = DMA_SetConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_Start_IT
</UL>

<P><STRONG><a name="[27f]"></a>__NVIC_SetPriority</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, stm32f4xx_hal_cortex.o(i.__NVIC_SetPriority))
<BR><BR>[Called By]<UL><LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
</UL>

<P><STRONG><a name="[272]"></a>LTDC_SetConfig</STRONG> (Thumb, 354 bytes, Stack size 20 bytes, stm32f4xx_hal_ltdc.o(i.LTDC_SetConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = LTDC_SetConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_ConfigLayer
</UL>

<P><STRONG><a name="[2a2]"></a>UART_SetConfig</STRONG> (Thumb, 258 bytes, Stack size 16 bytes, stm32f4xx_hal_uart.o(i.UART_SetConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = UART_SetConfig &rArr; __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetPCLK2Freq
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetPCLK1Freq
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Init
</UL>

<P><STRONG><a name="[2a4]"></a>UART_WaitOnFlagUntilTimeout</STRONG> (Thumb, 120 bytes, Stack size 24 bytes, stm32f4xx_hal_uart.o(i.UART_WaitOnFlagUntilTimeout))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = UART_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Transmit
</UL>

<P><STRONG><a name="[472]"></a>prvTestWaitCondition</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, event_groups.o(i.prvTestWaitCondition))
<BR><BR>[Called By]<UL><LI><a href="#[42c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xEventGroupWaitBits
</UL>

<P><STRONG><a name="[445]"></a>prvCopyDataFromQueue</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, queue.o(i.prvCopyDataFromQueue))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = prvCopyDataFromQueue
</UL>
<BR>[Calls]<UL><LI><a href="#[446]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[42e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueReceiveFromISR
<LI><a href="#[42f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueReceive
</UL>

<P><STRONG><a name="[447]"></a>prvCopyDataToQueue</STRONG> (Thumb, 108 bytes, Stack size 24 bytes, queue.o(i.prvCopyDataToQueue))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = prvCopyDataToQueue &rArr; xTaskPriorityDisinherit
</UL>
<BR>[Calls]<UL><LI><a href="#[448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskPriorityDisinherit
<LI><a href="#[446]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[433]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSendFromISR
<LI><a href="#[434]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
</UL>

<P><STRONG><a name="[44b]"></a>prvInitialiseNewQueue</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, queue.o(i.prvInitialiseNewQueue))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = prvInitialiseNewQueue &rArr; xQueueGenericReset &rArr; xTaskRemoveFromEventList
</UL>
<BR>[Calls]<UL><LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReset
</UL>
<BR>[Called By]<UL><LI><a href="#[430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericCreateStatic
<LI><a href="#[431]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericCreate
</UL>

<P><STRONG><a name="[451]"></a>prvIsQueueEmpty</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, queue.o(i.prvIsQueueEmpty))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = prvIsQueueEmpty
</UL>
<BR>[Calls]<UL><LI><a href="#[443]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[441]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
</UL>
<BR>[Called By]<UL><LI><a href="#[435]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueSemaphoreTake
<LI><a href="#[42f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueReceive
</UL>

<P><STRONG><a name="[45b]"></a>prvUnlockQueue</STRONG> (Thumb, 106 bytes, Stack size 24 bytes, queue.o(i.prvUnlockQueue))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = prvUnlockQueue &rArr; xTaskRemoveFromEventList
</UL>
<BR>[Calls]<UL><LI><a href="#[45c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskRemoveFromEventList
<LI><a href="#[45d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskMissedYield
<LI><a href="#[443]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[441]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
</UL>
<BR>[Called By]<UL><LI><a href="#[435]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueSemaphoreTake
<LI><a href="#[42f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueReceive
<LI><a href="#[434]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[458]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vQueueWaitForMessageRestricted
</UL>

<P><STRONG><a name="[43c]"></a>prvAddCurrentTaskToDelayedList</STRONG> (Thumb, 84 bytes, Stack size 24 bytes, tasks.o(i.prvAddCurrentTaskToDelayedList))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[43e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsertEnd
<LI><a href="#[43f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsert
<LI><a href="#[43d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxListRemove
</UL>
<BR>[Called By]<UL><LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskPlaceOnEventListRestricted
<LI><a href="#[46a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskPlaceOnEventList
<LI><a href="#[46b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskPlaceOnUnorderedEventList
<LI><a href="#[427]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskDelay
</UL>

<P><STRONG><a name="[440]"></a>prvAddNewTaskToReadyList</STRONG> (Thumb, 190 bytes, Stack size 24 bytes, tasks.o(i.prvAddNewTaskToReadyList))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = prvAddNewTaskToReadyList
</UL>
<BR>[Calls]<UL><LI><a href="#[43e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsertEnd
<LI><a href="#[443]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[441]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
<LI><a href="#[442]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInitialise
</UL>
<BR>[Called By]<UL><LI><a href="#[43a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCreateStatic
<LI><a href="#[43b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCreate
</UL>

<P><STRONG><a name="[449]"></a>prvDeleteTCB</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, tasks.o(i.prvDeleteTCB))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = prvDeleteTCB &rArr; vPortFree &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[44a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortFree
</UL>
<BR>[Called By]<UL><LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskDelete
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvIdleTask
</UL>

<P><STRONG><a name="[ae]"></a>prvIdleTask</STRONG> (Thumb, 82 bytes, Stack size 0 bytes, tasks.o(i.prvIdleTask))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = prvIdleTask &rArr; prvDeleteTCB &rArr; vPortFree &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[43d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxListRemove
<LI><a href="#[443]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[441]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
<LI><a href="#[449]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvDeleteTCB
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tasks.o(i.vTaskStartScheduler)
</UL>
<P><STRONG><a name="[44d]"></a>prvInitialiseNewTask</STRONG> (Thumb, 176 bytes, Stack size 40 bytes, tasks.o(i.prvInitialiseNewTask))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = prvInitialiseNewTask &rArr; pxPortInitialiseStack
</UL>
<BR>[Calls]<UL><LI><a href="#[44e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInitialiseItem
<LI><a href="#[44f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pxPortInitialiseStack
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[43a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCreateStatic
<LI><a href="#[43b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCreate
</UL>

<P><STRONG><a name="[469]"></a>prvResetNextTaskUnblockTime</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, tasks.o(i.prvResetNextTaskUnblockTime))
<BR><BR>[Called By]<UL><LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskDelete
<LI><a href="#[457]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[477]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskIncrementTick
</UL>

<P><STRONG><a name="[444]"></a>prvCheckForValidListAndQueue</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, timers.o(i.prvCheckForValidListAndQueue))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = prvCheckForValidListAndQueue &rArr; xQueueGenericCreateStatic &rArr; prvInitialiseNewQueue &rArr; xQueueGenericReset &rArr; xTaskRemoveFromEventList
</UL>
<BR>[Calls]<UL><LI><a href="#[430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericCreateStatic
<LI><a href="#[432]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vQueueAddToRegistry
<LI><a href="#[443]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[441]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
<LI><a href="#[442]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInitialise
</UL>
<BR>[Called By]<UL><LI><a href="#[46f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerCreateTimerTask
</UL>

<P><STRONG><a name="[450]"></a>prvInsertTimerInActiveList</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, timers.o(i.prvInsertTimerInActiveList))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = prvInsertTimerInActiveList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[43f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsert
</UL>
<BR>[Called By]<UL><LI><a href="#[455]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvProcessTimerOrBlockTask
<LI><a href="#[452]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvProcessReceivedCommands
</UL>

<P><STRONG><a name="[452]"></a>prvProcessReceivedCommands</STRONG> (Thumb, 248 bytes, Stack size 48 bytes, timers.o(i.prvProcessReceivedCommands))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = prvProcessReceivedCommands &rArr; prvSampleTimeNow &rArr; prvSwitchTimerLists &rArr; xTimerGenericCommand &rArr; xQueueGenericSend &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[42f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueReceive
<LI><a href="#[43d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxListRemove
<LI><a href="#[44a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortFree
<LI><a href="#[454]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerGenericCommand
<LI><a href="#[453]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvSampleTimeNow
<LI><a href="#[450]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvInsertTimerInActiveList
</UL>
<BR>[Called By]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvTimerTask
</UL>

<P><STRONG><a name="[455]"></a>prvProcessTimerOrBlockTask</STRONG> (Thumb, 182 bytes, Stack size 32 bytes, timers.o(i.prvProcessTimerOrBlockTask))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = prvProcessTimerOrBlockTask &rArr; prvSampleTimeNow &rArr; prvSwitchTimerLists &rArr; xTimerGenericCommand &rArr; xQueueGenericSend &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[458]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vQueueWaitForMessageRestricted
<LI><a href="#[43d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxListRemove
<LI><a href="#[457]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[456]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSuspendAll
<LI><a href="#[454]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerGenericCommand
<LI><a href="#[453]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvSampleTimeNow
<LI><a href="#[450]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvInsertTimerInActiveList
</UL>
<BR>[Called By]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvTimerTask
</UL>

<P><STRONG><a name="[453]"></a>prvSampleTimeNow</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, timers.o(i.prvSampleTimeNow))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = prvSampleTimeNow &rArr; prvSwitchTimerLists &rArr; xTimerGenericCommand &rArr; xQueueGenericSend &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[45a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvSwitchTimerLists
<LI><a href="#[459]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGetTickCount
</UL>
<BR>[Called By]<UL><LI><a href="#[455]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvProcessTimerOrBlockTask
<LI><a href="#[452]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvProcessReceivedCommands
</UL>

<P><STRONG><a name="[45a]"></a>prvSwitchTimerLists</STRONG> (Thumb, 104 bytes, Stack size 24 bytes, timers.o(i.prvSwitchTimerLists))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = prvSwitchTimerLists &rArr; xTimerGenericCommand &rArr; xQueueGenericSend &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[43f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsert
<LI><a href="#[43d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxListRemove
<LI><a href="#[454]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTimerGenericCommand
</UL>
<BR>[Called By]<UL><LI><a href="#[453]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvSampleTimeNow
</UL>

<P><STRONG><a name="[b0]"></a>prvTimerTask</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, timers.o(i.prvTimerTask))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = prvTimerTask &rArr; prvProcessReceivedCommands &rArr; prvSampleTimeNow &rArr; prvSwitchTimerLists &rArr; xTimerGenericCommand &rArr; xQueueGenericSend &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[455]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvProcessTimerOrBlockTask
<LI><a href="#[452]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvProcessReceivedCommands
</UL>
<BR>[Address Reference Count : 1]<UL><LI> timers.o(i.xTimerCreateTimerTask)
</UL>
<P><STRONG><a name="[45f]"></a>prvHeapInit</STRONG> (Thumb, 66 bytes, Stack size 0 bytes, heap_4.o(i.prvHeapInit))
<BR><BR>[Called By]<UL><LI><a href="#[45e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pvPortMalloc
</UL>

<P><STRONG><a name="[460]"></a>prvInsertBlockIntoFreeList</STRONG> (Thumb, 72 bytes, Stack size 12 bytes, heap_4.o(i.prvInsertBlockIntoFreeList))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = prvInsertBlockIntoFreeList
</UL>
<BR>[Called By]<UL><LI><a href="#[44a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortFree
<LI><a href="#[45e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pvPortMalloc
</UL>

<P><STRONG><a name="[ac]"></a>prvTaskExitError</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, port.o(i.prvTaskExitError))
<BR>[Address Reference Count : 1]<UL><LI> port.o(i.pxPortInitialiseStack)
</UL>
<P><STRONG><a name="[1f3]"></a>__sti___23_frontendapplication_cpp_a4e6c903</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, frontendapplication.o(i.__sti___23_frontendapplication_cpp_a4e6c903))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = __sti___23_frontendapplication_cpp_a4e6c903 &rArr; __aeabi_atexit &rArr; malloc
</UL>
<BR>[Calls]<UL><LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_atexit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> frontendapplication.o(.init_array)
</UL>
<P><STRONG><a name="[374]"></a>touchgfx::prepareTransition(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::Transition**)</STRONG> (Thumb, 86 bytes, Stack size 16 bytes, frontendapplicationbase.o(i._ZN8touchgfx17prepareTransitionEPPNS_6ScreenEPPNS_9PresenterEPPNS_10TransitionE))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::prepareTransition(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::Transition**)
</UL>
<BR>[Calls]<UL><LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::getInstance()
<LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::TimerWidgets::clear()
</UL>
<BR>[Called By]<UL><LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2* touchgfx::makeTransition&lang;Screen1View, Screen1Presenter, touchgfx::SlideTransition&lang;(touchgfx::Direction)1&rang;, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)
<LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2* touchgfx::makeTransition&lang;Screen1View, Screen1Presenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)
</UL>

<P><STRONG><a name="[376]"></a>touchgfx::finalizeTransition(touchgfx::Screen*, touchgfx::Presenter*, touchgfx::Transition*)</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, frontendapplicationbase.o(i._ZN8touchgfx18finalizeTransitionEPNS_6ScreenEPNS_9PresenterEPNS_10TransitionE))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::finalizeTransition(touchgfx::Screen*, touchgfx::Presenter*, touchgfx::Transition*)
</UL>
<BR>[Calls]<UL><LI><a href="#[377]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::bindTransition(touchgfx::Transition&)
</UL>
<BR>[Called By]<UL><LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2* touchgfx::makeTransition&lang;Screen1View, Screen1Presenter, touchgfx::SlideTransition&lang;(touchgfx::Direction)1&rang;, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)
<LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2* touchgfx::makeTransition&lang;Screen1View, Screen1Presenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)
</UL>

<P><STRONG><a name="[1f4]"></a>__sti___21_typedtextdatabase_cpp_05ec7672</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, typedtextdatabase.o(i.__sti___21_typedtextdatabase_cpp_05ec7672))
<BR><BR>[Stack]<UL><LI>Max Depth = 172<LI>Call Chain = __sti___21_typedtextdatabase_cpp_05ec7672 &rArr; getFont_verdana_80_4bpp() &rArr; touchgfx::GeneratedFont::GeneratedFont(const touchgfx::GlyphNode*, unsigned short, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, const unsigned char*const *, const touchgfx::KerningNode*, unsigned short, unsigned short, const unsigned short*, const touchgfx::FontContextualFormsTable*) &rArr; touchgfx::ConstFont::ConstFont__sub_object(const touchgfx::GlyphNode*, unsigned short, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned char, unsigned short, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_verdana_80_4bpp()
<LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_verdana_40_4bpp()
<LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_verdana_30_4bpp()
<LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_verdana_25_4bpp()
<LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_verdana_15_4bpp()
<LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_verdana_155_4bpp()
<LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_iconfont_32_4bpp()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> typedtextdatabase.o(.init_array)
</UL>
<P><STRONG><a name="[1f5]"></a>__sti___15_Application_cpp_63cd8d44</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, application.o(i.__sti___15_Application_cpp_63cd8d44))
<BR>[Address Reference Count : 1]<UL><LI> application.o(.init_array)
</UL>
<P><STRONG><a name="[1f6]"></a>__sti___7_LCD_cpp_86507772</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lcd.o(i.__sti___7_LCD_cpp_86507772))
<BR>[Address Reference Count : 1]<UL><LI> lcd.o(.init_array)
</UL>
<P><STRONG><a name="[41a]"></a>_printf_core</STRONG> (Thumb, 34 bytes, Stack size 24 bytes, printfb.o(i._printf_core), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[419]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0printf$bare
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
